!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ANY	include/message.h	6;"	d
ASFLAGS	Makefile	/^ASFLAGS = -m32 -MD -I.\/include$/;"	m
CBUF_SZ	include/driver/term.h	34;"	d
CBUF_SZ	include/driver/tty.h	11;"	d
CC	Makefile	/^CC      = gcc$/;"	m
CFILES	Makefile	/^CFILES  = $(shell find src\/ -name "*.c")$/;"	m
CFLAGS	Makefile	/^CFLAGS  = -m32 -static -ggdb -MD -Wall -Werror -I.\/include -O2 \\$/;"	m
CR0_PE	include/x86.h	23;"	d
CR0_PG	include/x86.h	24;"	d
C_BLACK	include/driver/term.h	37;"	d
C_BLUE	include/driver/term.h	38;"	d
C_LWHITE	include/driver/term.h	40;"	d
C_WHITE	include/driver/term.h	39;"	d
Console	include/driver/tty.h	/^struct Console {$/;"	s
Console	include/driver/tty.h	/^typedef struct Console Console;$/;"	t	typeref:struct:Console
DPL_KERN	include/x86.h	5;"	d
DPL_USER	include/x86.h	6;"	d
DevMessage	include/driver/hal.h	/^struct DevMessage {$/;"	s
DevMessage	include/driver/hal.h	/^typedef struct DevMessage DevMessage;$/;"	t	typeref:struct:DevMessage
Device	include/driver/hal.h	/^struct Device {$/;"	s
Device	include/driver/hal.h	/^typedef struct Device Device;$/;"	t	typeref:struct:Device
Disassembly	kernel.asm	/^Disassembly of section .bss:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .comment:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .data:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .debug_abbrev:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .debug_aranges:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .debug_info:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .debug_line:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .debug_loc:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .debug_ranges:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .debug_str:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .eh_frame:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .rodata:$/;"	l
Disassembly	kernel.asm	/^Disassembly of section .text:$/;"	l
ELFHeader	boot/boot.h	/^struct ELFHeader {$/;"	s
FALSE	include/const.h	5;"	d
FL_IF	include/x86.h	20;"	d
FL_TF	include/x86.h	19;"	d
FREQ_8253	include/driver/time.h	6;"	d
GATE	include/x86.h	126;"	d
GDT_ENTRY	boot/asm.h	2;"	d
GateDesc	include/x86.h	/^struct GateDesc {$/;"	s
GateDesc	include/x86.h	/^typedef struct GateDesc GateDesc;$/;"	t	typeref:struct:GateDesc
HZ	include/driver/time.h	8;"	d
INTR	include/sync.h	17;"	d
KOFFSET	include/vm.h	4;"	d
KSEL	include/x86.h	52;"	d
KSTACK_SIZE	include/process.h	8;"	d
K_ALT	include/driver/term.h	8;"	d
K_BACK	include/driver/term.h	11;"	d
K_CAPS	include/driver/term.h	4;"	d
K_CTRL	include/driver/term.h	7;"	d
K_DEL	include/driver/term.h	21;"	d
K_END	include/driver/term.h	19;"	d
K_ENTR	include/driver/term.h	10;"	d
K_F1	include/driver/term.h	23;"	d
K_F2	include/driver/term.h	24;"	d
K_F3	include/driver/term.h	25;"	d
K_F4	include/driver/term.h	26;"	d
K_F5	include/driver/term.h	27;"	d
K_F6	include/driver/term.h	28;"	d
K_HOME	include/driver/term.h	18;"	d
K_INS	include/driver/term.h	20;"	d
K_LEFT	include/driver/term.h	13;"	d
K_LSHFT	include/driver/term.h	5;"	d
K_PDWN	include/driver/term.h	17;"	d
K_PUP	include/driver/term.h	16;"	d
K_RIGHT	include/driver/term.h	14;"	d
K_RSHFT	include/driver/term.h	6;"	d
LBUF_SZ	include/driver/term.h	33;"	d
LBUF_SZ	include/driver/tty.h	10;"	d
LD	Makefile	/^LD      = ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -melf_i386$/;"	m
ListHead	include/adt/list.h	/^struct ListHead {$/;"	s
ListHead	include/adt/list.h	/^typedef struct ListHead ListHead;$/;"	t	typeref:struct:ListHead
MAGIC	include/malloc.h	8;"	d
MAXBUCKET	include/malloc.h	9;"	d
MEM_MAX	include/vm.h	5;"	d
MSG_DEVRD	include/driver/hal.h	7;"	d
MSG_DEVWR	include/driver/hal.h	8;"	d
MSG_SZ	include/message.h	7;"	d
MSG_TTY_GETKEY	include/driver/tty.h	8;"	d
MSG_TTY_UPDATE	include/driver/tty.h	9;"	d
M_ALT	include/driver/term.h	31;"	d
M_CTRL	include/driver/term.h	30;"	d
Message	include/message.h	/^typedef struct Message {$/;"	s
Message	include/message.h	/^} Message;$/;"	t	typeref:struct:Message
NBUF	src/kernel/main.c	6;"	d	file:
NR_DEV	src/drivers/hal.c	5;"	d	file:
NR_IRQ	include/x86.h	56;"	d
NR_PDE	include/x86.h	28;"	d
NR_PTE	include/x86.h	29;"	d
NR_SEG	include/x86.h	44;"	d
NR_TTY	include/driver/tty.h	7;"	d
NULL	include/const.h	7;"	d
OBJS	Makefile	/^OBJS    = $(CFILES:.c=.o) $(SFILES:.S=.o)$/;"	m
OFF	include/x86.h	73;"	d
P	src/lib/sync.c	/^P(Semaphore *sem){$/;"	f
PCB	include/process.h	/^typedef struct PCB {$/;"	s
PCB	include/process.h	/^}PCB;$/;"	t	typeref:struct:PCB
PDE	include/x86.h	/^typedef uint32_t PDE;$/;"	t
PDX	include/x86.h	71;"	d
PDXSHFT	include/x86.h	32;"	d
PGADDR	include/x86.h	76;"	d
PGROUNDDOWN	include/x86.h	79;"	d
PGROUNDUP	include/x86.h	78;"	d
PGSHFT	include/x86.h	30;"	d
PG_ALIGN	src/kernel/vm/kvm.c	/^PDE kpdir[NR_PDE] PG_ALIGN;            \/\/ the kernel page directory$/;"	v
PG_ALIGN	src/kernel/vm/kvm.c	/^PTE kptab[MEM_MAX \/ PG_SIZE] PG_ALIGN; \/\/ the kernel page tables$/;"	v
PG_ALIGN	src/kernel/vm/kvm.c	5;"	d	file:
PG_SIZE	include/x86.h	27;"	d
PORT_PIC_MS	src/kernel/irq/i8259.c	3;"	d	file:
PORT_PIC_SL	src/kernel/irq/i8259.c	4;"	d	file:
PORT_RTC	include/driver/time.h	5;"	d
PORT_TIME	include/driver/time.h	4;"	d
PTE	include/x86.h	/^typedef uint32_t PTE;$/;"	t
PTE_A	include/x86.h	40;"	d
PTE_ADDR	include/x86.h	82;"	d
PTE_D	include/x86.h	41;"	d
PTE_P	include/x86.h	35;"	d
PTE_PCD	include/x86.h	39;"	d
PTE_PWT	include/x86.h	38;"	d
PTE_U	include/x86.h	37;"	d
PTE_W	include/x86.h	36;"	d
PTX	include/x86.h	72;"	d
PTXSHFT	include/x86.h	31;"	d
ProgramHeader	boot/boot.h	/^struct ProgramHeader {$/;"	s
QEMU	Makefile	/^QEMU    = qemu-system-i386$/;"	m
RSTK_SZ	include/driver/tty.h	12;"	d
SCR_H	include/driver/term.h	43;"	d
SCR_W	include/driver/term.h	42;"	d
SECTSIZE	boot/main.c	14;"	d	file:
SEG	include/x86.h	102;"	d
SEG16	include/x86.h	107;"	d
SEG_ASM	boot/asm.h	9;"	d
SEG_KCODE	include/x86.h	45;"	d
SEG_KDATA	include/x86.h	46;"	d
SEG_NULLASM	boot/asm.h	5;"	d
SEG_TSS	include/x86.h	49;"	d
SEG_UCODE	include/x86.h	47;"	d
SEG_UDATA	include/x86.h	48;"	d
SERIAL_PORT	src/lib/debug.c	4;"	d	file:
SFILES	Makefile	/^SFILES  = $(shell find src\/ -name "*.S")$/;"	m
STA_R	include/x86.h	11;"	d
STA_W	include/x86.h	10;"	d
STA_X	include/x86.h	9;"	d
STS_IG32	include/x86.h	15;"	d
STS_T32A	include/x86.h	14;"	d
STS_TG32	include/x86.h	16;"	d
SegDesc	include/x86.h	/^struct SegDesc {$/;"	s
SegDesc	include/x86.h	/^typedef struct SegDesc SegDesc;$/;"	t	typeref:struct:SegDesc
Semaphore	include/sync.h	/^typedef struct Semaphore {$/;"	s
Semaphore	include/sync.h	/^} Semaphore ;$/;"	t	typeref:struct:Semaphore
TIME	src/drivers/time/timer.c	/^pid_t TIME;$/;"	v
TRUE	include/const.h	4;"	d
TSS	include/x86.h	/^struct TSS {$/;"	s
TSS	include/x86.h	/^typedef struct TSS TSS;$/;"	t	typeref:struct:TSS
TTY	src/drivers/tty/tty.c	/^pid_t TTY;$/;"	v
Time	include/driver/time.h	/^struct Time {$/;"	s
Time	include/driver/time.h	/^typedef struct Time Time;$/;"	t	typeref:struct:Time
TrapFrame	include/x86.h	/^struct TrapFrame {$/;"	s
TrapFrame	include/x86.h	/^typedef struct TrapFrame TrapFrame;$/;"	t	typeref:struct:TrapFrame
UNINTR	include/sync.h	18;"	d
USEL	include/x86.h	53;"	d
V	src/lib/sync.c	/^V(Semaphore *sem){$/;"	f
VA_TO_PA	boot/main.c	15;"	d	file:
__ASSERT_H__	include/assert.h	2;"	d
__COMMON_H__	include/common.h	2;"	d
__CONST_H__	include/const.h	2;"	d
__DEBUG_H__	include/debug.h	2;"	d
__IRQ_H__	include/irq.h	2;"	d
__KERNEL_H__	include/kernel.h	2;"	d
__LIST_H__	include/adt/list.h	2;"	d
__MALLOC_H_	include/malloc.h	2;"	d
__MESSAGE_H_	include/message.h	2;"	d
__MOD_HAL_H__	include/driver/hal.h	2;"	d
__PROCESS_H_	include/process.h	2;"	d
__STDARG_H_	include/stdarg.h	2;"	d
__STRING_H__	include/string.h	2;"	d
__SYNC_H_	include/sync.h	2;"	d
__TERM_H__	include/driver/term.h	2;"	d
__THREAD_H_	include/thread.h	2;"	d
__TIME_H__	include/driver/time.h	2;"	d
__TTY_H__	include/driver/tty.h	2;"	d
__TYPES_H__	include/types.h	2;"	d
__VM_H__	include/vm.h	2;"	d
__X86_H__	include/x86.h	2;"	d
__va_rounded_size	include/stdarg.h	4;"	d
a	kernel.asm	/^       a:	74 04                	je     10 <memcpy-0xc00ffff0>$/;"	l
a	kernel.asm	/^   a:	01 01                	add    %eax,(%ecx)$/;"	l
a	kernel.asm	/^   a:	04 00                	add    $0x0,%al$/;"	l
a	kernel.asm	/^   a:	74 75                	je     81 <memcpy-0xc00fff7f>$/;"	l
a0	kernel.asm	/^      a0:	54                   	push   %esp$/;"	l
a0	kernel.asm	/^  a0:	01 00                	add    %eax,(%eax)$/;"	l
a0	kernel.asm	/^  a0:	0d 34 00 03 0e       	or     $0xe030034,%eax$/;"	l
a0	kernel.asm	/^  a0:	73 69                	jae    10b <memcpy-0xc00ffef5>$/;"	l
a00	kernel.asm	/^     a00:	02 51 01             	add    0x1(%ecx),%dl$/;"	l
a00	kernel.asm	/^ a00:	0a 00                	or     (%eax),%al$/;"	l
a01	kernel.asm	/^     a01:	9f                   	lahf   $/;"	l
a02	kernel.asm	/^     a02:	4f                   	dec    %edi$/;"	l
a02	kernel.asm	/^ a02:	00 16                	add    %dl,(%esi)$/;"	l
a03	kernel.asm	/^     a03:	00 00                	add    %al,(%eax)$/;"	l
a03	kernel.asm	/^ a03:	01 00                	add    %eax,(%eax)$/;"	l
a04	kernel.asm	/^ a04:	15 00 27 0c 00       	adc    $0xc2700,%eax$/;"	l
a05	kernel.asm	/^     a05:	00 fe                	add    %bh,%dh$/;"	l
a05	kernel.asm	/^     a05:	02 08                	add    (%eax),%cl$/;"	l
a05	kernel.asm	/^ a05:	00 00                	add    %al,(%eax)$/;"	l
a07	kernel.asm	/^     a07:	00 00                	add    %al,(%eax)$/;"	l
a07	kernel.asm	/^     a07:	57                   	push   %edi$/;"	l
a07	kernel.asm	/^ a07:	01 00                	add    %eax,(%eax)$/;"	l
a08	kernel.asm	/^     a08:	00 00                	add    %al,(%eax)$/;"	l
a09	kernel.asm	/^     a09:	00 01                	add    %al,(%ecx)$/;"	l
a09	kernel.asm	/^ a09:	00 01                	add    %al,(%ecx)$/;"	l
a09	kernel.asm	/^ a09:	00 17                	add    %dl,(%edi)$/;"	l
a0a	kernel.asm	/^     a0a:	00 03                	add    %al,(%ebx)$/;"	l
a0b	kernel.asm	/^     a0b:	00 53 fe             	add    %dl,-0x2(%ebx)$/;"	l
a0b	kernel.asm	/^ a0b:	01 01                	add    %eax,(%ecx)$/;"	l
a0b	kernel.asm	/^ a0b:	73 72                	jae    a7f <memcpy-0xc00ff581>$/;"	l
a0c	kernel.asm	/^     a0c:	01 08                	add    %ecx,(%eax)$/;"	l
a0d	kernel.asm	/^ a0d:	49                   	dec    %ecx$/;"	l
a0d	kernel.asm	/^ a0d:	63 2f                	arpl   %bp,(%edi)$/;"	l
a0e	kernel.asm	/^     a0e:	00 00                	add    %al,(%eax)$/;"	l
a0e	kernel.asm	/^     a0e:	47                   	inc    %edi$/;"	l
a0e	kernel.asm	/^ a0e:	13 01                	adc    (%ecx),%eax$/;"	l
a0f	kernel.asm	/^     a0f:	00 00                	add    %al,(%eax)$/;"	l
a0f	kernel.asm	/^ a0f:	70 72                	jo     a83 <memcpy-0xc00ff57d>$/;"	l
a1	kernel.asm	/^      a1:	00 00                	add    %al,(%eax)$/;"	l
a1	kernel.asm	/^      a1:	01 06                	add    %eax,(%esi)$/;"	l
a1	kernel.asm	/^  a1:	00 01                	add    %al,(%ecx)$/;"	l
a10	kernel.asm	/^     a10:	00 21                	add    %ah,(%ecx)$/;"	l
a10	kernel.asm	/^ a10:	13 00                	adc    (%eax),%eax$/;"	l
a11	kernel.asm	/^     a11:	00 03                	add    %al,(%ebx)$/;"	l
a11	kernel.asm	/^ a11:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
a12	kernel.asm	/^     a12:	01 00                	add    %eax,(%eax)$/;"	l
a12	kernel.asm	/^ a12:	00 18                	add    %bl,(%eax)$/;"	l
a12	kernel.asm	/^ a12:	63 65 73             	arpl   %sp,0x73(%ebp)$/;"	l
a13	kernel.asm	/^     a13:	01 06                	add    %eax,(%esi)$/;"	l
a14	kernel.asm	/^     a14:	00 02                	add    %al,(%edx)$/;"	l
a14	kernel.asm	/^ a14:	21 00                	and    %eax,(%eax)$/;"	l
a15	kernel.asm	/^     a15:	50                   	push   %eax$/;"	l
a15	kernel.asm	/^ a15:	73 00                	jae    a17 <memcpy-0xc00ff5e9>$/;"	l
a16	kernel.asm	/^     a16:	00 00                	add    %al,(%eax)$/;"	l
a16	kernel.asm	/^     a16:	00 91 5c 21 01 00    	add    %dl,0x1215c(%ecx)$/;"	l
a16	kernel.asm	/^ a16:	49                   	dec    %ecx$/;"	l
a17	kernel.asm	/^ a17:	13 2f                	adc    (%edi),%ebp$/;"	l
a17	kernel.asm	/^ a17:	2e                   	cs$/;"	l
a18	kernel.asm	/^     a18:	00 02                	add    %al,(%edx)$/;"	l
a18	kernel.asm	/^ a18:	2f                   	das    $/;"	l
a19	kernel.asm	/^ a19:	0b 00                	or     (%eax),%eax$/;"	l
a19	kernel.asm	/^ a19:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp$/;"	l
a1a	kernel.asm	/^     a1a:	74 00                	je     a1c <memcpy-0xc00ff5e4>$/;"	l
a1b	kernel.asm	/^ a1b:	00 19                	add    %bl,(%ecx)$/;"	l
a1c	kernel.asm	/^     a1c:	00 00                	add    %al,(%eax)$/;"	l
a1c	kernel.asm	/^     a1c:	00 5e 01             	add    %bl,0x1(%esi)$/;"	l
a1d	kernel.asm	/^ a1d:	34 00                	xor    $0x0,%al$/;"	l
a1e	kernel.asm	/^     a1e:	02 0a                	add    (%edx),%cl$/;"	l
a1f	kernel.asm	/^     a1f:	00 00                	add    %al,(%eax)$/;"	l
a1f	kernel.asm	/^ a1f:	03 08                	add    (%eax),%ecx$/;"	l
a2	kernel.asm	/^  a2:	00 00                	add    %al,(%eax)$/;"	l
a2	kernel.asm	/^  a2:	67 6e                	outsb  %ds:(%si),(%dx)$/;"	l
a20	kernel.asm	/^     a20:	57                   	push   %edi$/;"	l
a20	kernel.asm	/^ a20:	2f                   	das    $/;"	l
a21	kernel.asm	/^     a21:	00 00                	add    %al,(%eax)$/;"	l
a21	kernel.asm	/^     a21:	01 00                	add    %eax,(%eax)$/;"	l
a21	kernel.asm	/^ a21:	3a 0b                	cmp    (%ebx),%cl$/;"	l
a21	kernel.asm	/^ a21:	61                   	popa   $/;"	l
a22	kernel.asm	/^ a22:	64                   	fs$/;"	l
a23	kernel.asm	/^     a23:	00 05 08 03 10 95    	add    %al,0x95100308$/;"	l
a23	kernel.asm	/^     a23:	53                   	push   %ebx$/;"	l
a23	kernel.asm	/^ a23:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
a23	kernel.asm	/^ a23:	74 00                	je     a25 <memcpy-0xc00ff5db>$/;"	l
a24	kernel.asm	/^     a24:	5e                   	pop    %esi$/;"	l
a25	kernel.asm	/^     a25:	01 00                	add    %eax,(%eax)$/;"	l
a25	kernel.asm	/^ a25:	2e                   	cs$/;"	l
a25	kernel.asm	/^ a25:	49                   	dec    %ecx$/;"	l
a26	kernel.asm	/^ a26:	13 3f                	adc    (%edi),%edi$/;"	l
a26	kernel.asm	/^ a26:	2f                   	das    $/;"	l
a27	kernel.asm	/^     a27:	00 81 01 00 00 02    	add    %al,0x2000001(%ecx)$/;"	l
a27	kernel.asm	/^ a27:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp$/;"	l
a28	kernel.asm	/^ a28:	0c 02                	or     $0x2,%al$/;"	l
a29	kernel.asm	/^     a29:	00 00                	add    %al,(%eax)$/;"	l
a2a	kernel.asm	/^ a2a:	0a 00                	or     (%eax),%al$/;"	l
a2b	kernel.asm	/^     a2b:	00 06                	add    %al,(%esi)$/;"	l
a2c	kernel.asm	/^ a2c:	00 1a                	add    %bl,(%edx)$/;"	l
a2d	kernel.asm	/^     a2d:	00 91 5c 81 01 00    	add    %dl,0x1815c(%ecx)$/;"	l
a2d	kernel.asm	/^     a2d:	3a 02                	cmp    (%edx),%al$/;"	l
a2e	kernel.asm	/^ a2e:	00 00                	add    %al,(%eax)$/;"	l
a2e	kernel.asm	/^ a2e:	34 00                	xor    $0x0,%al$/;"	l
a2f	kernel.asm	/^     a2f:	00 00                	add    %al,(%eax)$/;"	l
a3	kernel.asm	/^      a3:	00 02                	add    %al,(%edx)$/;"	l
a3	kernel.asm	/^      a3:	cb                   	lret   $/;"	l
a3	kernel.asm	/^  a3:	01 7f 00             	add    %edi,0x0(%edi)$/;"	l
a30	kernel.asm	/^ a30:	03 0e                	add    (%esi),%ecx$/;"	l
a30	kernel.asm	/^ a30:	73 63                	jae    a95 <memcpy-0xc00ff56b>$/;"	l
a31	kernel.asm	/^     a31:	03 11                	add    (%ecx),%edx$/;"	l
a32	kernel.asm	/^ a32:	3a 0b                	cmp    (%ebx),%cl$/;"	l
a32	kernel.asm	/^ a32:	68 65 64 75 6c       	push   $0x6c756465$/;"	l
a33	kernel.asm	/^     a33:	00 e6                	add    %ah,%dh$/;"	l
a33	kernel.asm	/^     a33:	4c                   	dec    %esp$/;"	l
a34	kernel.asm	/^     a34:	00 00                	add    %al,(%eax)$/;"	l
a34	kernel.asm	/^ a34:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
a35	kernel.asm	/^     a35:	01 00                	add    %eax,(%eax)$/;"	l
a36	kernel.asm	/^     a36:	00 02                	add    %al,(%edx)$/;"	l
a36	kernel.asm	/^ a36:	49                   	dec    %ecx$/;"	l
a37	kernel.asm	/^     a37:	00 01                	add    %al,(%ecx)$/;"	l
a37	kernel.asm	/^ a37:	13 3f                	adc    (%edi),%edi$/;"	l
a37	kernel.asm	/^ a37:	65 2e 63 00          	gs arpl %ax,%cs:%gs:(%eax)$/;"	l
a38	kernel.asm	/^     a38:	23 00                	and    (%eax),%eax$/;"	l
a39	kernel.asm	/^     a39:	00 53 e6             	add    %dl,-0x1a(%ebx)$/;"	l
a39	kernel.asm	/^ a39:	0c 02                	or     $0x2,%al$/;"	l
a3a	kernel.asm	/^     a3a:	06                   	push   %es$/;"	l
a3b	kernel.asm	/^     a3b:	55                   	push   %ebp$/;"	l
a3b	kernel.asm	/^ a3b:	01 00                	add    %eax,(%eax)$/;"	l
a3b	kernel.asm	/^ a3b:	0a 00                	or     (%eax),%al$/;"	l
a3c	kernel.asm	/^     a3c:	01 00                	add    %eax,(%eax)$/;"	l
a3c	kernel.asm	/^     a3c:	02 00                	add    (%eax),%al$/;"	l
a3d	kernel.asm	/^ a3d:	00 00                	add    %al,(%eax)$/;"	l
a3d	kernel.asm	/^ a3d:	00 6c 69 73          	add    %ch,0x73(%ecx,%ebp,2)$/;"	l
a3e	kernel.asm	/^     a3e:	00 03                	add    %al,(%ebx)$/;"	l
a3e	kernel.asm	/^     a3e:	00 09                	add    %cl,(%ecx)$/;"	l
a3f	kernel.asm	/^ a3f:	01 11                	add    %edx,(%ecx)$/;"	l
a4	kernel.asm	/^      a4:	00 00                	add    %al,(%eax)$/;"	l
a4	kernel.asm	/^  a4:	02 00                	add    (%eax),%al$/;"	l
a4	kernel.asm	/^  a4:	06                   	push   %es$/;"	l
a4	kernel.asm	/^  a4:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%ecx)$/;"	l
a40	kernel.asm	/^     a40:	02 00                	add    (%eax),%al$/;"	l
a40	kernel.asm	/^     a40:	12 25 00 00 00 02    	adc    0x2000000,%ah$/;"	l
a41	kernel.asm	/^ a41:	01 25 0e 13 0b 03    	add    %esp,0x30b130e$/;"	l
a41	kernel.asm	/^ a41:	74 2e                	je     a71 <memcpy-0xc00ff58f>$/;"	l
a42	kernel.asm	/^     a42:	00 02                	add    %al,(%edx)$/;"	l
a43	kernel.asm	/^ a43:	68 00 02 00 00       	push   $0x200$/;"	l
a44	kernel.asm	/^     a44:	00 91 5c 09 02 00    	add    %dl,0x2095c(%ecx)$/;"	l
a46	kernel.asm	/^     a46:	23 04 00             	and    (%eax,%eax,1),%eax$/;"	l
a47	kernel.asm	/^ a47:	0e                   	push   %cs$/;"	l
a48	kernel.asm	/^ a48:	1b 0e                	sbb    (%esi),%ecx$/;"	l
a48	kernel.asm	/^ a48:	74 79                	je     ac3 <memcpy-0xc00ff53d>$/;"	l
a49	kernel.asm	/^     a49:	07                   	pop    %es$/;"	l
a4a	kernel.asm	/^     a4a:	00 36                	add    %dh,(%esi)$/;"	l
a4a	kernel.asm	/^     a4a:	21 02                	and    %eax,(%edx)$/;"	l
a4a	kernel.asm	/^ a4a:	11 01                	adc    %eax,(%ecx)$/;"	l
a4a	kernel.asm	/^ a4a:	70 65                	jo     ab1 <memcpy-0xc00ff54f>$/;"	l
a4c	kernel.asm	/^     a4c:	00 00                	add    %al,(%eax)$/;"	l
a4c	kernel.asm	/^     a4c:	02 00                	add    (%eax),%al$/;"	l
a4c	kernel.asm	/^ a4c:	12 01                	adc    (%ecx),%al$/;"	l
a4c	kernel.asm	/^ a4c:	73 2e                	jae    a7c <memcpy-0xc00ff584>$/;"	l
a4e	kernel.asm	/^     a4e:	00 01                	add    %al,(%ecx)$/;"	l
a4e	kernel.asm	/^     a4e:	08 03                	or     %al,(%ebx)$/;"	l
a4e	kernel.asm	/^ a4e:	10 06                	adc    %al,(%esi)$/;"	l
a4e	kernel.asm	/^ a4e:	68 00 03 00 00       	push   $0x300$/;"	l
a5	kernel.asm	/^      a5:	00 75 08             	add    %dh,0x8(%ebp)$/;"	l
a5	kernel.asm	/^  a5:	00 00                	add    %al,(%eax)$/;"	l
a5	kernel.asm	/^  a5:	3a 0b                	cmp    (%ebx),%cl$/;"	l
a50	kernel.asm	/^     a50:	00 53 36             	add    %dl,0x36(%ebx)$/;"	l
a50	kernel.asm	/^     a50:	0e                   	push   %cs$/;"	l
a50	kernel.asm	/^ a50:	00 00                	add    %al,(%eax)$/;"	l
a51	kernel.asm	/^     a51:	b8 00 00 00 08       	mov    $0x8000000,%eax$/;"	l
a52	kernel.asm	/^ a52:	02 16                	add    (%esi),%dl$/;"	l
a53	kernel.asm	/^     a53:	02 00                	add    (%eax),%al$/;"	l
a53	kernel.asm	/^ a53:	78 38                	js     a8d <memcpy-0xc00ff573>$/;"	l
a54	kernel.asm	/^ a54:	00 03                	add    %al,(%ebx)$/;"	l
a55	kernel.asm	/^     a55:	00 59 02             	add    %bl,0x2(%ecx)$/;"	l
a55	kernel.asm	/^ a55:	36                   	ss$/;"	l
a56	kernel.asm	/^     a56:	60                   	pusha  $/;"	l
a56	kernel.asm	/^ a56:	0e                   	push   %cs$/;"	l
a56	kernel.asm	/^ a56:	2e                   	cs$/;"	l
a57	kernel.asm	/^     a57:	02 00                	add    (%eax),%al$/;"	l
a57	kernel.asm	/^ a57:	3a 0b                	cmp    (%ebx),%cl$/;"	l
a57	kernel.asm	/^ a57:	68 00 03 00 00       	push   $0x300$/;"	l
a58	kernel.asm	/^     a58:	00 00                	add    %al,(%eax)$/;"	l
a59	kernel.asm	/^     a59:	00 03                	add    %al,(%ebx)$/;"	l
a59	kernel.asm	/^ a59:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
a5a	kernel.asm	/^     a5a:	02 00                	add    (%eax),%al$/;"	l
a5b	kernel.asm	/^     a5b:	0f b8                	(bad)  $/;"	l
a5b	kernel.asm	/^ a5b:	49                   	dec    %ecx$/;"	l
a5c	kernel.asm	/^     a5c:	91                   	xchg   %eax,%ecx$/;"	l
a5c	kernel.asm	/^ a5c:	13 00                	adc    (%eax),%eax$/;"	l
a5c	kernel.asm	/^ a5c:	70 72                	jo     ad0 <memcpy-0xc00ff530>$/;"	l
a5d	kernel.asm	/^     a5d:	00 00                	add    %al,(%eax)$/;"	l
a5d	kernel.asm	/^     a5d:	5c                   	pop    %esp$/;"	l
a5e	kernel.asm	/^ a5e:	00 03                	add    %al,(%ebx)$/;"	l
a5e	kernel.asm	/^ a5e:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
a5f	kernel.asm	/^     a5f:	00 09                	add    %cl,(%ecx)$/;"	l
a5f	kernel.asm	/^ a5f:	63 65 73             	arpl   %sp,0x73(%ebp)$/;"	l
a6	kernel.asm	/^      a6:	00 4c 00 00          	add    %cl,0x0(%eax,%eax,1)$/;"	l
a6	kernel.asm	/^  a6:	00 00                	add    %al,(%eax)$/;"	l
a6	kernel.asm	/^  a6:	24 0d                	and    $0xd,%al$/;"	l
a60	kernel.asm	/^ a60:	24 00                	and    $0x0,%al$/;"	l
a61	kernel.asm	/^     a61:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
a62	kernel.asm	/^     a62:	76 75                	jbe    ad9 <memcpy-0xc00ff527>$/;"	l
a62	kernel.asm	/^ a62:	0b 0b                	or     (%ebx),%ecx$/;"	l
a62	kernel.asm	/^ a62:	73 2e                	jae    a92 <memcpy-0xc00ff56e>$/;"	l
a64	kernel.asm	/^     a64:	00 03                	add    %al,(%ebx)$/;"	l
a64	kernel.asm	/^ a64:	3e 0b 03             	or     %ds:(%ebx),%eax$/;"	l
a64	kernel.asm	/^ a64:	68 00 03 00 00       	push   $0x300$/;"	l
a66	kernel.asm	/^     a66:	13 70 00             	adc    0x0(%eax),%esi$/;"	l
a67	kernel.asm	/^ a67:	0e                   	push   %cs$/;"	l
a68	kernel.asm	/^ a68:	00 00                	add    %al,(%eax)$/;"	l
a69	kernel.asm	/^     a69:	00 00                	add    %al,(%eax)$/;"	l
a69	kernel.asm	/^ a69:	00 00                	add    %al,(%eax)$/;"	l
a6a	kernel.asm	/^     a6a:	de 00                	fiadd  (%eax)$/;"	d
a6a	kernel.asm	/^ a6a:	04 24                	add    $0x24,%al$/;"	l
a6b	kernel.asm	/^     a6b:	00 0a                	add    %cl,(%edx)$/;"	l
a6b	kernel.asm	/^ a6b:	05 02 10 15 10       	add    $0x10151002,%eax$/;"	l
a6c	kernel.asm	/^     a6c:	00 00                	add    %al,(%eax)$/;"	l
a6c	kernel.asm	/^ a6c:	00 0b                	add    %cl,(%ebx)$/;"	l
a6d	kernel.asm	/^     a6d:	04 95                	add    $0x95,%al$/;"	l
a6e	kernel.asm	/^     a6e:	02 00                	add    (%eax),%al$/;"	l
a6e	kernel.asm	/^ a6e:	0b 3e                	or     (%esi),%edi$/;"	l
a6f	kernel.asm	/^     a6f:	00 00                	add    %al,(%eax)$/;"	l
a7	kernel.asm	/^  a7:	00 10                	add    %dl,(%eax)$/;"	l
a7	kernel.asm	/^  a7:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
a70	kernel.asm	/^     a70:	91                   	xchg   %eax,%ecx$/;"	l
a70	kernel.asm	/^ a70:	0b 03                	or     (%ebx),%eax$/;"	l
a70	kernel.asm	/^ a70:	c0 03 17             	rolb   $0x17,(%ebx)$/;"	l
a71	kernel.asm	/^     a71:	00 02                	add    %al,(%edx)$/;"	l
a71	kernel.asm	/^     a71:	08 de                	or     %bl,%dh$/;"	l
a72	kernel.asm	/^ a72:	08 00                	or     %al,(%eax)$/;"	l
a73	kernel.asm	/^     a73:	00 00                	add    %al,(%eax)$/;"	l
a73	kernel.asm	/^     a73:	21 02                	and    %eax,(%edx)$/;"	l
a73	kernel.asm	/^ a73:	01 04 02             	add    %eax,(%edx,%eax,1)$/;"	l
a74	kernel.asm	/^ a74:	00 05 13 01 03 0e    	add    %al,0xe030113$/;"	l
a75	kernel.asm	/^     a75:	00 00                	add    %al,(%eax)$/;"	l
a75	kernel.asm	/^     a75:	00 e5                	add    %ah,%ch$/;"	l
a76	kernel.asm	/^ a76:	03 14 3c             	add    (%esp,%edi,1),%edx$/;"	l
a77	kernel.asm	/^     a77:	00 00                	add    %al,(%eax)$/;"	l
a77	kernel.asm	/^     a77:	03 14 95 00 00 00 0b 	add    0xb000000(,%edx,4),%edx$/;"	l
a79	kernel.asm	/^     a79:	00 01                	add    %al,(%ecx)$/;"	l
a79	kernel.asm	/^ a79:	04 01                	add    $0x1,%al$/;"	l
a7a	kernel.asm	/^ a7a:	0b 0b                	or     (%ebx),%ecx$/;"	l
a7b	kernel.asm	/^     a7b:	00 51 e5             	add    %dl,-0x1b(%ecx)$/;"	l
a7b	kernel.asm	/^ a7b:	03 6e 08             	add    0x8(%esi),%ebp$/;"	l
a7c	kernel.asm	/^ a7c:	3a 0b                	cmp    (%ebx),%cl$/;"	l
a7e	kernel.asm	/^     a7e:	00 00                	add    %al,(%eax)$/;"	l
a7e	kernel.asm	/^     a7e:	01 02                	add    %eax,(%edx)$/;"	l
a7e	kernel.asm	/^ a7e:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
a7e	kernel.asm	/^ a7e:	3c 93                	cmp    $0x93,%al$/;"	l
a8	kernel.asm	/^      a8:	54                   	push   %esp$/;"	l
a8	kernel.asm	/^  a8:	00 00                	add    %al,(%eax)$/;"	l
a8	kernel.asm	/^  a8:	02 00                	add    (%eax),%al$/;"	l
a80	kernel.asm	/^     a80:	00 21                	add    %ah,(%ecx)$/;"	l
a80	kernel.asm	/^     a80:	02 00                	add    (%eax),%al$/;"	l
a80	kernel.asm	/^ a80:	01 13                	add    %edx,(%ebx)$/;"	l
a80	kernel.asm	/^ a80:	75 bb                	jne    a3d <memcpy-0xc00ff5c3>$/;"	l
a82	kernel.asm	/^     a82:	00 01                	add    %al,(%ecx)$/;"	l
a82	kernel.asm	/^     a82:	01 00                	add    %eax,(%eax)$/;"	l
a82	kernel.asm	/^ a82:	00 00                	add    %al,(%eax)$/;"	l
a82	kernel.asm	/^ a82:	04 02                	add    $0x2,%al$/;"	l
a84	kernel.asm	/^     a84:	00 02                	add    %al,(%edx)$/;"	l
a84	kernel.asm	/^     a84:	24 01                	and    $0x1,%al$/;"	l
a84	kernel.asm	/^ a84:	06                   	push   %es$/;"	l
a84	kernel.asm	/^ a84:	6a 4b                	push   $0x4b$/;"	l
a85	kernel.asm	/^ a85:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax$/;"	l
a86	kernel.asm	/^     a86:	00 91 58 21 01 00    	add    %dl,0x12158(%ecx)$/;"	l
a86	kernel.asm	/^     a86:	25 00 00 00 50       	and    $0x50000000,%eax$/;"	l
a86	kernel.asm	/^ a86:	2f                   	das    $/;"	l
a87	kernel.asm	/^ a87:	3d 75 03 77 66       	cmp    $0x66770375,%eax$/;"	l
a8a	kernel.asm	/^ a8a:	0b 3b                	or     (%ebx),%edi$/;"	l
a8b	kernel.asm	/^     a8b:	04 10                	add    $0x10,%al$/;"	l
a8c	kernel.asm	/^     a8c:	00 3e                	add    %bh,(%esi)$/;"	l
a8c	kernel.asm	/^ a8c:	03 73 58             	add    0x58(%ebx),%esi$/;"	l
a8c	kernel.asm	/^ a8c:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
a8d	kernel.asm	/^     a8d:	c0 fe 04             	sar    $0x4,%dh$/;"	l
a8e	kernel.asm	/^     a8e:	01 00                	add    %eax,(%eax)$/;"	l
a8f	kernel.asm	/^ a8f:	0b 0b                	or     (%ebx),%ecx$/;"	l
a8f	kernel.asm	/^ a8f:	69 2c 3d 67 04 01 03 	imul   $0x2004a0e,0x3010467(,%edi,1),%ebp$/;"	l
a9	kernel.asm	/^      a9:	00 00                	add    %al,(%eax)$/;"	l
a9	kernel.asm	/^  a9:	00 00                	add    %al,(%eax)$/;"	l
a9	kernel.asm	/^  a9:	49                   	dec    %ecx$/;"	l
a9	kernel.asm	/^  a9:	74 00                	je     ab <memcpy-0xc00fff55>$/;"	l
a90	kernel.asm	/^     a90:	00 02                	add    %al,(%edx)$/;"	l
a90	kernel.asm	/^     a90:	10 c0                	adc    %al,%al$/;"	l
a91	kernel.asm	/^ a91:	0d 0b 0c 0b 38       	or     $0x380b0c0b,%eax$/;"	l
a92	kernel.asm	/^     a92:	00 91 08 3e 01 00    	add    %dl,0x13e08(%ecx)$/;"	l
a92	kernel.asm	/^     a92:	93                   	xchg   %eax,%ebx$/;"	l
a93	kernel.asm	/^     a93:	06                   	push   %es$/;"	l
a94	kernel.asm	/^     a94:	00 00                	add    %al,(%eax)$/;"	l
a96	kernel.asm	/^     a96:	01 01                	add    %eax,(%ecx)$/;"	l
a96	kernel.asm	/^ a96:	0a 00                	or     (%eax),%al$/;"	l
a96	kernel.asm	/^ a96:	0e 4a 00 02 $/;"	l
a98	kernel.asm	/^     a98:	00 00                	add    %al,(%eax)$/;"	l
a98	kernel.asm	/^     a98:	00 45 01             	add    %al,0x1(%ebp)$/;"	l
a98	kernel.asm	/^ a98:	00 07                	add    %al,(%edi)$/;"	l
a9a	kernel.asm	/^     a9a:	0c 78                	or     $0x78,%al$/;"	l
a9a	kernel.asm	/^ a9a:	04 01                	add    $0x1,%al$/;"	l
a9a	kernel.asm	/^ a9a:	0d 00 03 08 3a       	or     $0x3a080300,%eax$/;"	l
a9b	kernel.asm	/^     a9b:	00 00                	add    %al,(%eax)$/;"	l
a9c	kernel.asm	/^     a9c:	00 01                	add    %al,(%ecx)$/;"	l
a9c	kernel.asm	/^ a9c:	70 04                	jo     aa2 <memcpy-0xc00ff55e>$/;"	l
a9d	kernel.asm	/^     a9d:	01 00                	add    %eax,(%eax)$/;"	l
a9e	kernel.asm	/^     a9e:	24 25                	and    $0x25,%al$/;"	l
a9e	kernel.asm	/^ a9e:	02 08                	add    (%eax),%cl$/;"	l
a9f	kernel.asm	/^     a9f:	51                   	push   %ecx$/;"	l
a9f	kernel.asm	/^ a9f:	0b 3b                	or     (%ebx),%edi$/;"	l
aa	kernel.asm	/^      aa:	00 07                	add    %al,(%edi)$/;"	l
aa	kernel.asm	/^  aa:	04 00                	add    $0x0,%al$/;"	l
aa	kernel.asm	/^  aa:	13 02                	adc    (%edx),%eax$/;"	l
aa	kernel.asm	/^  aa:	39 00                	cmp    %eax,(%eax)$/;"	l
aa0	kernel.asm	/^     aa0:	00 00                	add    %al,(%eax)$/;"	l
aa0	kernel.asm	/^     aa0:	45                   	inc    %ebp$/;"	l
aa0	kernel.asm	/^ aa0:	79 04                	jns    aa6 <memcpy-0xc00ff55a>$/;"	l
aa1	kernel.asm	/^     aa1:	01 00                	add    %eax,(%eax)$/;"	l
aa1	kernel.asm	/^ aa1:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
aa2	kernel.asm	/^     aa2:	00 e3                	add    %ah,%bl$/;"	l
aa2	kernel.asm	/^ aa2:	01 08                	add    %ecx,(%eax)$/;"	l
aa3	kernel.asm	/^     aa3:	00 81 01 00 00 02    	add    %al,0x2000001(%ecx)$/;"	l
aa4	kernel.asm	/^     aa4:	06                   	push   %es$/;"	l
aa4	kernel.asm	/^ aa4:	0b 0b                	or     (%ebx),%ecx$/;"	l
aa4	kernel.asm	/^ aa4:	76 04                	jbe    aaa <memcpy-0xc00ff556>$/;"	l
aa5	kernel.asm	/^     aa5:	00 00                	add    %al,(%eax)$/;"	l
aa6	kernel.asm	/^ aa6:	02 03                	add    (%ebx),%al$/;"	l
aa6	kernel.asm	/^ aa6:	0d 0b 0c 0b 38       	or     $0x380b0c0b,%eax$/;"	l
aa7	kernel.asm	/^     aa7:	0d 6e 00 01 26       	or     $0x2601006e,%eax$/;"	l
aa8	kernel.asm	/^ aa8:	0c 66                	or     $0x66,%al$/;"	l
aa9	kernel.asm	/^     aa9:	00 91 58 81 01 00    	add    %dl,0x18158(%ecx)$/;"	l
aaa	kernel.asm	/^ aaa:	04 01                	add    $0x1,%al$/;"	l
aab	kernel.asm	/^ aab:	0a 00                	or     (%eax),%al$/;"	l
aac	kernel.asm	/^     aac:	25 00 00 00 19       	and    $0x19000000,%eax$/;"	l
aac	kernel.asm	/^ aac:	03 75 58             	add    0x58(%ebp),%esi$/;"	l
aad	kernel.asm	/^ aad:	00 08                	add    %cl,(%eax)$/;"	l
aaf	kernel.asm	/^     aaf:	00 97 01 00 00 02    	add    %dl,0x2000001(%edi)$/;"	l
aaf	kernel.asm	/^ aaf:	2e 01 03             	add    %eax,%cs:(%ebx)$/;"	l
aaf	kernel.asm	/^ aaf:	75 3d                	jne    aee <memcpy-0xc00ff512>$/;"	l
ab	kernel.asm	/^      ab:	00 55 00             	add    %dl,0x0(%ebp)$/;"	l
ab	kernel.asm	/^  ab:	00 11                	add    %dl,(%ecx)$/;"	l
ab	kernel.asm	/^  ab:	64 69 67 69 74 73 00 	imul   $0x74007374,%fs:0x69(%edi),%esp$/;"	l
ab1	kernel.asm	/^     ab1:	07                   	pop    %es$/;"	l
ab1	kernel.asm	/^ ab1:	00 02                	add    %al,(%edx)$/;"	l
ab2	kernel.asm	/^     ab2:	00 00                	add    %al,(%eax)$/;"	l
ab2	kernel.asm	/^ ab2:	0e                   	push   %cs$/;"	l
ab3	kernel.asm	/^ ab3:	04 01                	add    $0x1,%al$/;"	l
ab3	kernel.asm	/^ ab3:	3a 0b                	cmp    (%ebx),%cl$/;"	l
ab4	kernel.asm	/^     ab4:	00 0e                	add    %cl,(%esi)$/;"	l
ab5	kernel.asm	/^     ab5:	00 91 08 97 01 00    	add    %dl,0x19708(%ecx)$/;"	l
ab5	kernel.asm	/^ ab5:	3a 00                	cmp    (%eax),%al$/;"	l
ab5	kernel.asm	/^ ab5:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
ab6	kernel.asm	/^     ab6:	01 2a                	add    %ebp,(%edx)$/;"	l
ab7	kernel.asm	/^ ab7:	02 04 01             	add    (%ecx,%eax,1),%al$/;"	l
ab7	kernel.asm	/^ ab7:	27                   	daa    $/;"	l
ab8	kernel.asm	/^     ab8:	02 00                	add    (%eax),%al$/;"	l
ab8	kernel.asm	/^ ab8:	0c 20                	or     $0x20,%al$/;"	l
aba	kernel.asm	/^     aba:	00 01                	add    %al,(%ecx)$/;"	l
aba	kernel.asm	/^ aba:	08 84 00 02 04 01 1f 	or     %al,0x1f010402(%eax,%eax,1)$/;"	l
aba	kernel.asm	/^ aba:	0b 01                	or     (%ecx),%eax$/;"	l
abb	kernel.asm	/^     abb:	00 9a 01 00 00 01    	add    %bl,0x1000001(%edx)$/;"	l
abc	kernel.asm	/^     abc:	32 01                	xor    (%ecx),%al$/;"	l
abc	kernel.asm	/^ abc:	13 00                	adc    (%eax),%eax$/;"	l
abe	kernel.asm	/^     abe:	00 05 10 c0 64 05    	add    %al,0x564c010$/;"	l
abe	kernel.asm	/^ abe:	00 09                	add    %cl,(%ecx)$/;"	l
abort	src/lib/abort.c	/^abort(const char *file, int line) {$/;"	f
ac	kernel.asm	/^      ac:	5e                   	pop    %esi$/;"	l
ac	kernel.asm	/^  ac:	00 00                	add    %al,(%eax)$/;"	l
ac	kernel.asm	/^  ac:	0a 00                	or     (%eax),%al$/;"	l
ac0	kernel.asm	/^ ac0:	05 00 03 08 3a       	add    $0x3a080300,%eax$/;"	l
ac1	kernel.asm	/^     ac1:	00 50 9a             	add    %dl,-0x66(%eax)$/;"	l
ac1	kernel.asm	/^ ac1:	00 02                	add    %al,(%edx)$/;"	l
ac3	kernel.asm	/^ ac3:	04 01                	add    $0x1,%al$/;"	l
ac4	kernel.asm	/^     ac4:	01 00                	add    %eax,(%eax)$/;"	l
ac4	kernel.asm	/^     ac4:	10 c0                	adc    %al,%al$/;"	l
ac5	kernel.asm	/^ ac5:	0b 3b                	or     (%ebx),%edi$/;"	l
ac5	kernel.asm	/^ ac5:	3d 02 01 00 01       	cmp    $0x1000102,%eax$/;"	l
ac6	kernel.asm	/^     ac6:	00 aa 01 00 00 02    	add    %ch,0x2000001(%edx)$/;"	l
ac6	kernel.asm	/^     ac6:	5e                   	pop    %esi$/;"	l
ac7	kernel.asm	/^     ac7:	07                   	pop    %es$/;"	l
ac7	kernel.asm	/^ ac7:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
ac8	kernel.asm	/^     ac8:	00 00                	add    %al,(%eax)$/;"	l
aca	kernel.asm	/^     aca:	53                   	push   %ebx$/;"	l
aca	kernel.asm	/^ aca:	00 00                	add    %al,(%eax)$/;"	l
aca	kernel.asm	/^ aca:	01 d3                	add    %edx,%ebx$/;"	l
acb	kernel.asm	/^     acb:	01 00                	add    %eax,(%eax)$/;"	l
acc	kernel.asm	/^     acc:	00 91 58 aa 01 00    	add    %dl,0x1aa58(%ecx)$/;"	l
acc	kernel.asm	/^ acc:	00 00                	add    %al,(%eax)$/;"	l
acc	kernel.asm	/^ acc:	0a 05 00 03 0e 3a    	or     0x3a0e0300,%al$/;"	l
acd	kernel.asm	/^     acd:	00 0d 70 61 00 01    	add    %cl,0x1006170$/;"	l
ace	kernel.asm	/^ ace:	00 02                	add    %al,(%edx)$/;"	l
ad	kernel.asm	/^      ad:	01 00                	add    %eax,(%eax)$/;"	l
ad0	kernel.asm	/^ ad0:	00 6e 00             	add    %ch,0x0(%esi)$/;"	l
ad2	kernel.asm	/^     ad2:	00 c6                	add    %al,%dh$/;"	l
ad2	kernel.asm	/^ ad2:	0b 3b                	or     (%ebx),%edi$/;"	l
ad3	kernel.asm	/^     ad3:	33 53 01             	xor    0x1(%ebx),%edx$/;"	l
ad3	kernel.asm	/^ ad3:	00 00                	add    %al,(%eax)$/;"	l
ad4	kernel.asm	/^     ad4:	01 00                	add    %eax,(%eax)$/;"	l
ad4	kernel.asm	/^ ad4:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
ad5	kernel.asm	/^ ad5:	01 01                	add    %eax,(%ecx)$/;"	l
ad6	kernel.asm	/^     ad6:	00 00                	add    %al,(%eax)$/;"	l
ad6	kernel.asm	/^     ad6:	00 02                	add    %al,(%edx)$/;"	l
ad7	kernel.asm	/^ ad7:	00 00                	add    %al,(%eax)$/;"	l
ad7	kernel.asm	/^ ad7:	fb                   	sti    $/;"	l
ad8	kernel.asm	/^     ad8:	00 91 08 c6 01 00    	add    %dl,0x1c608(%ecx)$/;"	l
ad8	kernel.asm	/^     ad8:	96                   	xchg   %eax,%esi$/;"	l
ad8	kernel.asm	/^ ad8:	0e                   	push   %cs$/;"	l
ad9	kernel.asm	/^     ad9:	07                   	pop    %es$/;"	l
ad9	kernel.asm	/^ ad9:	0b 34 00             	or     (%eax,%eax,1),%esi$/;"	l
ad9	kernel.asm	/^ ad9:	0d 00 01 01 01       	or     $0x1010100,%eax$/;"	l
ada	kernel.asm	/^     ada:	00 00                	add    %al,(%eax)$/;"	l
adc	kernel.asm	/^     adc:	0f 0d 02             	prefetch (%edx)$/;"	l
adc	kernel.asm	/^ adc:	03 0e                	add    (%esi),%ecx$/;"	l
ade	kernel.asm	/^     ade:	00 cd                	add    %cl,%ch$/;"	l
ade	kernel.asm	/^ ade:	01 00                	add    %eax,(%eax)$/;"	l
ade	kernel.asm	/^ ade:	3a 0b                	cmp    (%ebx),%cl$/;"	l
adf	kernel.asm	/^     adf:	00 00                	add    %al,(%eax)$/;"	l
ae	kernel.asm	/^      ae:	00 00                	add    %al,(%eax)$/;"	l
ae	kernel.asm	/^  ae:	00 00                	add    %al,(%eax)$/;"	l
ae	kernel.asm	/^  ae:	00 0e                	add    %cl,(%esi)$/;"	l
ae	kernel.asm	/^  ae:	01 01                	add    %eax,(%ecx)$/;"	l
ae0	kernel.asm	/^     ae0:	01 00                	add    %eax,(%eax)$/;"	l
ae0	kernel.asm	/^ ae0:	00 00                	add    %al,(%eax)$/;"	l
ae0	kernel.asm	/^ ae0:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
ae1	kernel.asm	/^     ae1:	01 34 53             	add    %esi,(%ebx,%edx,2)$/;"	l
ae2	kernel.asm	/^     ae2:	00 01                	add    %al,(%ecx)$/;"	l
ae2	kernel.asm	/^ ae2:	01 00                	add    %eax,(%eax)$/;"	l
ae2	kernel.asm	/^ ae2:	49                   	dec    %ecx$/;"	l
ae3	kernel.asm	/^ ae3:	13 00                	adc    (%eax),%eax$/;"	l
ae4	kernel.asm	/^     ae4:	00 52 cd             	add    %dl,-0x33(%edx)$/;"	l
ae4	kernel.asm	/^     ae4:	01 00                	add    %eax,(%eax)$/;"	l
ae4	kernel.asm	/^ ae4:	00 01                	add    %al,(%ecx)$/;"	l
ae5	kernel.asm	/^ ae5:	00 0c 0f             	add    %cl,(%edi,%ecx,1)$/;"	l
ae6	kernel.asm	/^     ae6:	00 b9 07 00 00 0d    	add    %bh,0xd000007(%ecx)$/;"	l
ae6	kernel.asm	/^ ae6:	73 72                	jae    b5a <memcpy-0xc00ff4a6>$/;"	l
ae7	kernel.asm	/^     ae7:	01 00                	add    %eax,(%eax)$/;"	l
ae8	kernel.asm	/^ ae8:	00 0b                	add    %cl,(%ebx)$/;"	l
ae8	kernel.asm	/^ ae8:	63 2f                	arpl   %bp,(%edi)$/;"	l
ae9	kernel.asm	/^     ae9:	00 09                	add    %cl,(%ecx)$/;"	l
aea	kernel.asm	/^ aea:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
aea	kernel.asm	/^ aea:	70 72                	jo     b5e <memcpy-0xc00ff4a2>$/;"	l
aeb	kernel.asm	/^     aeb:	02 00                	add    (%eax),%al$/;"	l
aec	kernel.asm	/^     aec:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
aec	kernel.asm	/^ aec:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
aed	kernel.asm	/^     aed:	00 02                	add    %al,(%edx)$/;"	l
aed	kernel.asm	/^     aed:	76 00                	jbe    aef <memcpy-0xc00ff511>$/;"	l
aed	kernel.asm	/^ aed:	00 00                	add    %al,(%eax)$/;"	l
aed	kernel.asm	/^ aed:	63 65 73             	arpl   %sp,0x73(%ebp)$/;"	l
aef	kernel.asm	/^     aef:	00 91 58 09 02 00    	add    %dl,0x20958(%ecx)$/;"	l
aef	kernel.asm	/^     aef:	01 35 59 01 00 00    	add    %esi,0x159$/;"	l
aef	kernel.asm	/^ aef:	0d 01 01 49 13       	or     $0x13490101,%eax$/;"	l
af	kernel.asm	/^      af:	00 01                	add    %al,(%ecx)$/;"	l
af0	kernel.asm	/^ af0:	73 00                	jae    af2 <memcpy-0xc00ff50e>$/;"	l
af2	kernel.asm	/^ af2:	2e                   	cs$/;"	l
af3	kernel.asm	/^ af3:	2f                   	das    $/;"	l
af4	kernel.asm	/^ af4:	01 13                	add    %edx,(%ebx)$/;"	l
af4	kernel.asm	/^ af4:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp$/;"	l
af5	kernel.asm	/^     af5:	00 1e                	add    %bl,(%esi)$/;"	l
af5	kernel.asm	/^     af5:	f4                   	hlt    $/;"	l
af6	kernel.asm	/^     af6:	07                   	pop    %es$/;"	l
af6	kernel.asm	/^ af6:	00 00                	add    %al,(%eax)$/;"	l
af7	kernel.asm	/^     af7:	00 00                	add    %al,(%eax)$/;"	l
af7	kernel.asm	/^     af7:	02 00                	add    (%eax),%al$/;"	l
af8	kernel.asm	/^ af8:	0e                   	push   %cs$/;"	l
af9	kernel.asm	/^     af9:	00 02                	add    %al,(%edx)$/;"	l
af9	kernel.asm	/^     af9:	0d 69 00 01 36       	or     $0x36010069,%eax$/;"	l
af9	kernel.asm	/^ af9:	21 00                	and    %eax,(%eax)$/;"	l
afb	kernel.asm	/^     afb:	00 91 08 1e 02 00    	add    %dl,0x21e08(%ecx)$/;"	l
afb	kernel.asm	/^ afb:	2f                   	das    $/;"	l
afb	kernel.asm	/^ afb:	49                   	dec    %ecx$/;"	l
afc	kernel.asm	/^ afc:	13 2f                	adc    (%edi),%ebp$/;"	l
afc	kernel.asm	/^ afc:	61                   	popa   $/;"	l
afd	kernel.asm	/^ afd:	64                   	fs$/;"	l
afe	kernel.asm	/^     afe:	37                   	aaa    $/;"	l
afe	kernel.asm	/^ afe:	0b 00                	or     (%eax),%eax$/;"	l
afe	kernel.asm	/^ afe:	74 00                	je     b00 <memcpy-0xc00ff500>$/;"	l
aff	kernel.asm	/^     aff:	00 00                	add    %al,(%eax)$/;"	l
align	boot/boot.h	/^	unsigned int align;$/;"	m	struct:ProgramHeader
alt	src/drivers/tty/keyboard.c	/^static int caps, ctrl, alt, shft;$/;"	v	file:
ani	src/drivers/tty/banner.c	/^static char ani[] = "-\\\\|\/";$/;"	v	file:
args	include/x86.h	/^	uint32_t args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:GateDesc
assert	include/assert.h	6;"	d
avl	include/x86.h	/^	uint32_t avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:SegDesc
b	kernel.asm	/^   b:	00 b9 00 00 00 00    	add    %bh,0x0(%ecx)$/;"	l
b	kernel.asm	/^   b:	11 01                	adc    %eax,(%ecx)$/;"	l
b	kernel.asm	/^   b:	32 5f 74             	xor    0x74(%edi),%bl$/;"	l
b0	kernel.asm	/^      b0:	02 00                	add    (%eax),%al$/;"	l
b0	kernel.asm	/^  b0:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax$/;"	l
b0	kernel.asm	/^  b0:	40                   	inc    %eax$/;"	l
b0	kernel.asm	/^  b0:	fb                   	sti    $/;"	l
b00	kernel.asm	/^ b00:	00 0f                	add    %cl,(%edi)$/;"	l
b00	kernel.asm	/^ b00:	2e                   	cs$/;"	l
b01	kernel.asm	/^     b01:	00 22                	add    %ah,(%edx)$/;"	l
b01	kernel.asm	/^     b01:	00 24 02             	add    %ah,(%edx,%eax,1)$/;"	l
b01	kernel.asm	/^ b01:	2f                   	das    $/;"	l
b02	kernel.asm	/^ b02:	35 00 49 13 00       	xor    $0x134900,%eax$/;"	l
b02	kernel.asm	/^ b02:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp$/;"	l
b03	kernel.asm	/^     b03:	08 00                	or     %al,(%eax)$/;"	l
b04	kernel.asm	/^     b04:	00 00                	add    %al,(%eax)$/;"	l
b05	kernel.asm	/^     b05:	00 00                	add    %al,(%eax)$/;"	l
b06	kernel.asm	/^     b06:	01 00                	add    %eax,(%eax)$/;"	l
b07	kernel.asm	/^     b07:	0a 04 4c             	or     (%esp,%ecx,2),%al$/;"	l
b07	kernel.asm	/^ b07:	00 10                	add    %dl,(%eax)$/;"	l
b08	kernel.asm	/^     b08:	50                   	push   %eax$/;"	l
b09	kernel.asm	/^     b09:	24 02                	and    $0x2,%al$/;"	l
b09	kernel.asm	/^ b09:	00 00                	add    %al,(%eax)$/;"	l
b09	kernel.asm	/^ b09:	2e 01 3f             	add    %edi,%cs:(%edi)$/;"	l
b0a	kernel.asm	/^     b0a:	00 00                	add    %al,(%eax)$/;"	l
b0b	kernel.asm	/^     b0b:	00 00                	add    %al,(%eax)$/;"	l
b0b	kernel.asm	/^ b0b:	74 68                	je     b75 <memcpy-0xc00ff48b>$/;"	l
b0c	kernel.asm	/^     b0c:	00 0a                	add    %cl,(%edx)$/;"	l
b0c	kernel.asm	/^ b0c:	0c 03                	or     $0x3,%al$/;"	l
b0d	kernel.asm	/^     b0d:	36 02 00             	add    %ss:(%eax),%al$/;"	l
b0d	kernel.asm	/^ b0d:	72 65                	jb     b74 <memcpy-0xc00ff48c>$/;"	l
b0e	kernel.asm	/^     b0e:	04 be                	add    $0xbe,%al$/;"	l
b0e	kernel.asm	/^ b0e:	0e                   	push   %cs$/;"	l
b0f	kernel.asm	/^ b0f:	3a 0b                	cmp    (%ebx),%cl$/;"	l
b0f	kernel.asm	/^ b0f:	61                   	popa   $/;"	l
b1	kernel.asm	/^      b1:	06                   	push   %es$/;"	l
b1	kernel.asm	/^  b1:	09 10                	or     %edx,(%eax)$/;"	l
b1	kernel.asm	/^  b1:	0e                   	push   %cs$/;"	l
b10	kernel.asm	/^     b10:	00 00                	add    %al,(%eax)$/;"	l
b10	kernel.asm	/^     b10:	00 01                	add    %al,(%ecx)$/;"	l
b10	kernel.asm	/^ b10:	64 2e 63 00          	fs arpl %ax,%cs:%fs:(%eax)$/;"	l
b11	kernel.asm	/^ b11:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
b12	kernel.asm	/^     b12:	00 0b                	add    %cl,(%ebx)$/;"	l
b12	kernel.asm	/^     b12:	00 51 36             	add    %dl,0x36(%ecx)$/;"	l
b13	kernel.asm	/^ b13:	27                   	daa    $/;"	l
b14	kernel.asm	/^     b14:	01 1a                	add    %ebx,(%edx)$/;"	l
b14	kernel.asm	/^ b14:	01 00                	add    %eax,(%eax)$/;"	l
b14	kernel.asm	/^ b14:	0c 11                	or     $0x11,%al$/;"	l
b15	kernel.asm	/^     b15:	02 00                	add    (%eax),%al$/;"	l
b16	kernel.asm	/^     b16:	02 00                	add    (%eax),%al$/;"	l
b16	kernel.asm	/^ b16:	00 6c 69 73          	add    %ch,0x73(%ecx,%ebp,2)$/;"	l
b16	kernel.asm	/^ b16:	01 12                	add    %edx,(%edx)$/;"	l
b17	kernel.asm	/^     b17:	00 59 02             	add    %bl,0x2(%ecx)$/;"	l
b18	kernel.asm	/^     b18:	00 01                	add    %al,(%ecx)$/;"	l
b18	kernel.asm	/^ b18:	01 40 06             	add    %eax,0x6(%eax)$/;"	l
b1a	kernel.asm	/^     b1a:	00 00                	add    %al,(%eax)$/;"	l
b1a	kernel.asm	/^     b1a:	45                   	inc    %ebp$/;"	l
b1a	kernel.asm	/^ b1a:	74 2e                	je     b4a <memcpy-0xc00ff4b6>$/;"	l
b1b	kernel.asm	/^     b1b:	01 a8 01 00 00 70    	add    %ebp,0x70000001(%eax)$/;"	l
b1b	kernel.asm	/^ b1b:	01 13                	add    %edx,(%ebx)$/;"	l
b1c	kernel.asm	/^     b1c:	02 00                	add    (%eax),%al$/;"	l
b1c	kernel.asm	/^ b1c:	68 00 02 00 00       	push   $0x200$/;"	l
b1d	kernel.asm	/^ b1d:	00 00                	add    %al,(%eax)$/;"	l
b1e	kernel.asm	/^     b1e:	91                   	xchg   %eax,%ecx$/;"	l
b1f	kernel.asm	/^     b1f:	08 00                	or     %al,(%eax)$/;"	l
b1f	kernel.asm	/^ b1f:	11 34 00             	adc    %esi,(%eax,%eax,1)$/;"	l
b2	kernel.asm	/^      b2:	65 00 00             	add    %al,%gs:(%eax)$/;"	l
b2	kernel.asm	/^      b2:	74 04                	je     b8 <memcpy-0xc00fff48>$/;"	l
b2	kernel.asm	/^  b2:	0d 00 01 01 01       	or     $0x1010100,%eax$/;"	l
b2	kernel.asm	/^  b2:	74 $/;"	l
b21	kernel.asm	/^     b21:	00 00                	add    %al,(%eax)$/;"	l
b21	kernel.asm	/^     b21:	05 10 c0 49 06       	add    $0x649c010,%eax$/;"	l
b21	kernel.asm	/^ b21:	74 79                	je     b9c <memcpy-0xc00ff464>$/;"	l
b22	kernel.asm	/^ b22:	03 08                	add    (%eax),%ecx$/;"	l
b23	kernel.asm	/^     b23:	00 00                	add    %al,(%eax)$/;"	l
b23	kernel.asm	/^ b23:	70 65                	jo     b8a <memcpy-0xc00ff476>$/;"	l
b24	kernel.asm	/^ b24:	3a 0b                	cmp    (%ebx),%cl$/;"	l
b25	kernel.asm	/^     b25:	00 00                	add    %al,(%eax)$/;"	l
b25	kernel.asm	/^ b25:	73 2e                	jae    b55 <memcpy-0xc00ff4ab>$/;"	l
b26	kernel.asm	/^     b26:	10 c0                	adc    %al,%al$/;"	l
b26	kernel.asm	/^ b26:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
b27	kernel.asm	/^     b27:	00 1b                	add    %bl,(%ebx)$/;"	l
b27	kernel.asm	/^ b27:	68 00 03 00 00       	push   $0x300$/;"	l
b28	kernel.asm	/^     b28:	36 08 00             	or     %al,%ss:(%eax)$/;"	l
b28	kernel.asm	/^ b28:	49                   	dec    %ecx$/;"	l
b29	kernel.asm	/^     b29:	00 00                	add    %al,(%eax)$/;"	l
b29	kernel.asm	/^ b29:	13 02                	adc    (%edx),%eax$/;"	l
b2b	kernel.asm	/^     b2b:	00 1f                	add    %bl,(%edi)$/;"	l
b2b	kernel.asm	/^     b2b:	00 a8 01 00 00 10    	add    %ch,0x10000001(%eax)$/;"	l
b2b	kernel.asm	/^ b2b:	06                   	push   %es$/;"	l
b2c	kernel.asm	/^ b2c:	00 00                	add    %al,(%eax)$/;"	l
b2c	kernel.asm	/^ b2c:	78 38                	js     b66 <memcpy-0xc00ff49a>$/;"	l
b2d	kernel.asm	/^     b2d:	00 00                	add    %al,(%eax)$/;"	l
b2e	kernel.asm	/^ b2e:	12 1d 01 31 13 52    	adc    0x52133101,%bl$/;"	l
b2e	kernel.asm	/^ b2e:	36                   	ss$/;"	l
b2f	kernel.asm	/^     b2f:	00 02                	add    %al,(%edx)$/;"	l
b2f	kernel.asm	/^ b2f:	2e                   	cs$/;"	l
b3	kernel.asm	/^  b3:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
b3	kernel.asm	/^  b3:	c0 82 00 00 00 00 00 	rolb   $0x0,0x0(%edx)$/;"	l
b30	kernel.asm	/^ b30:	68 00 03 00 00       	push   $0x300$/;"	l
b31	kernel.asm	/^     b31:	00 73 00             	add    %dh,0x0(%ebx)$/;"	l
b31	kernel.asm	/^     b31:	fc                   	cld    $/;"	l
b32	kernel.asm	/^     b32:	01 00                	add    %eax,(%eax)$/;"	l
b34	kernel.asm	/^     b34:	00 01                	add    %al,(%ecx)$/;"	l
b34	kernel.asm	/^     b34:	1f                   	pop    %ds$/;"	l
b34	kernel.asm	/^ b34:	01 55 06             	add    %edx,0x6(%ebp)$/;"	l
b35	kernel.asm	/^     b35:	00 00                	add    %al,(%eax)$/;"	l
b35	kernel.asm	/^ b35:	70 72                	jo     ba9 <memcpy-0xc00ff457>$/;"	l
b36	kernel.asm	/^     b36:	45                   	inc    %ebp$/;"	l
b37	kernel.asm	/^     b37:	00 30                	add    %dh,(%eax)$/;"	l
b37	kernel.asm	/^     b37:	25 00 00 00 02       	and    $0x2000000,%eax$/;"	l
b37	kernel.asm	/^ b37:	58                   	pop    %eax$/;"	l
b37	kernel.asm	/^ b37:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
b38	kernel.asm	/^ b38:	0b 59 0b             	or     0xb(%ecx),%ebx$/;"	l
b38	kernel.asm	/^ b38:	63 65 73             	arpl   %sp,0x73(%ebp)$/;"	l
b39	kernel.asm	/^     b39:	00 00                	add    %al,(%eax)$/;"	l
b3b	kernel.asm	/^     b3b:	00 01                	add    %al,(%ecx)$/;"	l
b3b	kernel.asm	/^ b3b:	00 00                	add    %al,(%eax)$/;"	l
b3b	kernel.asm	/^ b3b:	73 2e                	jae    b6b <memcpy-0xc00ff495>$/;"	l
b3c	kernel.asm	/^     b3c:	91                   	xchg   %eax,%ecx$/;"	l
b3d	kernel.asm	/^     b3d:	00 0d 6f 70 00 01    	add    %cl,0x100706f$/;"	l
b3d	kernel.asm	/^     b3d:	00 50 34             	add    %dl,0x34(%eax)$/;"	l
b3d	kernel.asm	/^ b3d:	13 05 00 31 13 1c    	adc    0x1c133100,%eax$/;"	l
b3d	kernel.asm	/^ b3d:	68 00 03 00 00       	push   $0x300$/;"	l
b4	kernel.asm	/^  b4:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
b40	kernel.asm	/^     b40:	00 00                	add    %al,(%eax)$/;"	l
b42	kernel.asm	/^     b42:	00 38                	add    %bh,(%eax)$/;"	l
b42	kernel.asm	/^ b42:	00 00                	add    %al,(%eax)$/;"	l
b43	kernel.asm	/^     b43:	47                   	inc    %edi$/;"	l
b43	kernel.asm	/^ b43:	05 00 00 14 05       	add    $0x5140000,%eax$/;"	l
b44	kernel.asm	/^     b44:	00 00                	add    %al,(%eax)$/;"	l
b44	kernel.asm	/^     b44:	59                   	pop    %ecx$/;"	l
b44	kernel.asm	/^ b44:	05 02 f0 15 10       	add    $0x1015f002,%eax$/;"	l
b45	kernel.asm	/^     b45:	01 00                	add    %eax,(%eax)$/;"	l
b46	kernel.asm	/^     b46:	00 02                	add    %al,(%edx)$/;"	l
b47	kernel.asm	/^     b47:	00 7a 08             	add    %bh,0x8(%edx)$/;"	l
b48	kernel.asm	/^     b48:	00 73 00             	add    %dh,0x0(%ebx)$/;"	l
b48	kernel.asm	/^ b48:	00 31                	add    %dh,(%ecx)$/;"	l
b49	kernel.asm	/^ b49:	c0 03 17             	rolb   $0x17,(%ebx)$/;"	l
b4a	kernel.asm	/^     b4a:	00 00                	add    %al,(%eax)$/;"	l
b4a	kernel.asm	/^ b4a:	13 02                	adc    (%edx),%eax$/;"	l
b4b	kernel.asm	/^     b4b:	38 00                	cmp    %al,(%eax)$/;"	l
b4c	kernel.asm	/^     b4c:	0f 06                	clts   $/;"	l
b4c	kernel.asm	/^ b4c:	01 67 bb             	add    %esp,-0x45(%edi)$/;"	l
b4c	kernel.asm	/^ b4c:	0a 00                	or     (%eax),%al$/;"	l
b4d	kernel.asm	/^     b4d:	00 00                	add    %al,(%eax)$/;"	l
b4e	kernel.asm	/^     b4e:	02 00                	add    (%eax),%al$/;"	l
b4e	kernel.asm	/^ b4e:	00 15 0b 01 55 06    	add    %dl,0x655010b$/;"	l
b4f	kernel.asm	/^     b4f:	3d 00 00 00 01       	cmp    $0x1000000,%eax$/;"	l
b4f	kernel.asm	/^ b4f:	84 65 78             	test   %ah,0x78(%ebp)$/;"	l
b5	kernel.asm	/^      b5:	00 60 00             	add    %ah,0x0(%eax)$/;"	l
b5	kernel.asm	/^  b5:	00 00                	add    %al,(%eax)$/;"	l
b5	kernel.asm	/^  b5:	0b 3b                	or     (%ebx),%edi$/;"	l
b5	kernel.asm	/^  b5:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
b50	kernel.asm	/^     b50:	00 01                	add    %al,(%ecx)$/;"	l
b52	kernel.asm	/^     b52:	48                   	dec    %eax$/;"	l
b52	kernel.asm	/^ b52:	08 39                	or     %bh,(%ecx)$/;"	l
b53	kernel.asm	/^     b53:	25 00 00 00 c4       	and    $0xc4000000,%eax$/;"	l
b54	kernel.asm	/^     b54:	00 50 42             	add    %dl,0x42(%eax)$/;"	l
b54	kernel.asm	/^ b54:	00 00                	add    %al,(%eax)$/;"	l
b54	kernel.asm	/^ b54:	bb 86 3a 02 32       	mov    $0x32023a86,%ebx$/;"	l
b56	kernel.asm	/^ b56:	16                   	push   %ss$/;"	l
b57	kernel.asm	/^     b57:	00 00                	add    %al,(%eax)$/;"	l
b57	kernel.asm	/^ b57:	34 00                	xor    $0x0,%al$/;"	l
b58	kernel.asm	/^     b58:	08 00                	or     %al,(%eax)$/;"	l
b59	kernel.asm	/^     b59:	00 4c 00 00          	add    %cl,0x0(%eax,%eax,1)$/;"	l
b59	kernel.asm	/^ b59:	13 08                	adc    (%eax),%ecx$/;"	l
b59	kernel.asm	/^ b59:	31 13                	xor    %edx,(%ebx)$/;"	l
b5a	kernel.asm	/^     b5a:	00 00                	add    %al,(%eax)$/;"	l
b5b	kernel.asm	/^ b5b:	02 0a                	add    (%edx),%cl$/;"	l
b5b	kernel.asm	/^ b5b:	3d 67 9f a0 00       	cmp    $0xa09f67,%eax$/;"	l
b5c	kernel.asm	/^     b5c:	11 04 0e             	adc    %eax,(%esi,%ecx,1)$/;"	l
b5d	kernel.asm	/^     b5d:	00 01                	add    %al,(%ecx)$/;"	l
b5d	kernel.asm	/^ b5d:	00 00                	add    %al,(%eax)$/;"	l
b5f	kernel.asm	/^     b5f:	00 50 4c             	add    %dl,0x4c(%eax)$/;"	l
b5f	kernel.asm	/^     b5f:	01 f7                	add    %esi,%edi$/;"	l
b5f	kernel.asm	/^ b5f:	17                   	pop    %ss$/;"	l
b6	kernel.asm	/^  b6:	77 65                	ja     11d <memcpy-0xc00ffee3>$/;"	l
b60	kernel.asm	/^ b60:	02 04 01             	add    (%ecx,%eax,1),%al$/;"	l
b60	kernel.asm	/^ b60:	34 00                	xor    $0x0,%al$/;"	l
b61	kernel.asm	/^     b61:	01 00                	add    %eax,(%eax)$/;"	l
b62	kernel.asm	/^     b62:	00 00                	add    %al,(%eax)$/;"	l
b62	kernel.asm	/^ b62:	03 08                	add    (%eax),%ecx$/;"	l
b63	kernel.asm	/^     b63:	00 01                	add    %al,(%ecx)$/;"	l
b63	kernel.asm	/^ b63:	03 75 66             	add    0x66(%ebp),%esi$/;"	l
b64	kernel.asm	/^     b64:	00 4f 00             	add    %cl,0x0(%edi)$/;"	l
b64	kernel.asm	/^ b64:	3a 0b                	cmp    (%ebx),%cl$/;"	l
b65	kernel.asm	/^     b65:	65 01 50 06          	add    %edx,%gs:0x6(%eax)$/;"	l
b66	kernel.asm	/^ b66:	03 0e                	add    (%esi),%ecx$/;"	l
b66	kernel.asm	/^ b66:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
b67	kernel.asm	/^     b67:	00 00                	add    %al,(%eax)$/;"	l
b68	kernel.asm	/^ b68:	02 28                	add    (%eax),%ch$/;"	l
b68	kernel.asm	/^ b68:	49                   	dec    %ecx$/;"	l
b69	kernel.asm	/^     b69:	02 00                	add    (%eax),%al$/;"	l
b69	kernel.asm	/^     b69:	10 c0                	adc    %al,%al$/;"	l
b69	kernel.asm	/^ b69:	13 3f                	adc    (%edi),%edi$/;"	l
b6a	kernel.asm	/^ b6a:	01 04 02             	add    %eax,(%edx,%eax,1)$/;"	l
b6b	kernel.asm	/^     b6b:	73 01                	jae    b6e <memcpy-0xc00ff492>$/;"	l
b6b	kernel.asm	/^     b6b:	d1 06                	roll   (%esi)$/;"	d
b6b	kernel.asm	/^ b6b:	0c 02                	or     $0x2,%al$/;"	l
b6d	kernel.asm	/^     b6d:	10 c0                	adc    %al,%al$/;"	l
b6d	kernel.asm	/^     b6d:	4f                   	dec    %edi$/;"	l
b6d	kernel.asm	/^ b6d:	03 76 08             	add    0x8(%esi),%esi$/;"	l
b6d	kernel.asm	/^ b6d:	0a 00                	or     (%eax),%al$/;"	l
b6e	kernel.asm	/^     b6e:	00 00                	add    %al,(%eax)$/;"	l
b6f	kernel.asm	/^     b6f:	f8                   	clc    $/;"	l
b6f	kernel.asm	/^ b6f:	00 00                	add    %al,(%eax)$/;"	l
b7	kernel.asm	/^  b7:	00 01                	add    %al,(%ecx)$/;"	l
b7	kernel.asm	/^  b7:	01 00                	add    %eax,(%eax)$/;"	l
b7	kernel.asm	/^  b7:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
b70	kernel.asm	/^     b70:	00 72 00             	add    %dh,0x0(%edx)$/;"	l
b70	kernel.asm	/^     b70:	08 00                	or     %al,(%eax)$/;"	l
b70	kernel.asm	/^ b70:	20 03                	and    %al,(%ebx)$/;"	l
b71	kernel.asm	/^ b71:	01 11                	add    %edx,(%ecx)$/;"	l
b72	kernel.asm	/^     b72:	00 ef                	add    %ch,%bh$/;"	l
b72	kernel.asm	/^ b72:	72 66                	jb     bda <memcpy-0xc00ff426>$/;"	l
b73	kernel.asm	/^     b73:	00 00                	add    %al,(%eax)$/;"	l
b73	kernel.asm	/^ b73:	01 25 0e 13 0b 03    	add    %esp,0x30b130e$/;"	l
b74	kernel.asm	/^     b74:	01 00                	add    %eax,(%eax)$/;"	l
b74	kernel.asm	/^ b74:	78 2b                	js     ba1 <memcpy-0xc00ff45f>$/;"	l
b75	kernel.asm	/^     b75:	02 00                	add    (%eax),%al$/;"	l
b76	kernel.asm	/^     b76:	00 12                	add    %dl,(%edx)$/;"	l
b76	kernel.asm	/^ b76:	75 3d                	jne    bb5 <memcpy-0xc00ff44b>$/;"	l
b77	kernel.asm	/^     b77:	73 7f                	jae    bf8 <memcpy-0xc00ff408>$/;"	l
b78	kernel.asm	/^     b78:	66                   	data16$/;"	l
b78	kernel.asm	/^ b78:	67 04 01             	addr16 add $0x1,%al$/;"	l
b79	kernel.asm	/^     b79:	70 00                	jo     b7b <memcpy-0xc00ff485>$/;"	l
b79	kernel.asm	/^     b79:	8e 00                	mov    (%eax),%es$/;"	l
b79	kernel.asm	/^ b79:	0e                   	push   %cs$/;"	l
b7a	kernel.asm	/^ b7a:	1b 0e                	sbb    (%esi),%ecx$/;"	l
b7b	kernel.asm	/^     b7b:	00 00                	add    %al,(%eax)$/;"	l
b7b	kernel.asm	/^     b7b:	01 65 a8             	add    %esp,-0x58(%ebp)$/;"	l
b7b	kernel.asm	/^ b7b:	03 16                	add    (%esi),%edx$/;"	l
b7c	kernel.asm	/^ b7c:	11 01                	adc    %eax,(%ecx)$/;"	l
b7d	kernel.asm	/^     b7d:	9b                   	fwait$/;"	l
b7d	kernel.asm	/^ b7d:	4a                   	dec    %edx$/;"	l
b7e	kernel.asm	/^     b7e:	00 00                	add    %al,(%eax)$/;"	l
b7e	kernel.asm	/^     b7e:	01 00                	add    %eax,(%eax)$/;"	l
b7e	kernel.asm	/^ b7e:	04 02                	add    $0x2,%al$/;"	l
b7e	kernel.asm	/^ b7e:	12 01                	adc    (%ecx),%al$/;"	l
b8	kernel.asm	/^      b8:	00 00                	add    %al,(%eax)$/;"	l
b8	kernel.asm	/^  b8:	72 00                	jb     ba <memcpy-0xc00fff46>$/;"	l
b80	kernel.asm	/^     b80:	00 01                	add    %al,(%ecx)$/;"	l
b80	kernel.asm	/^     b80:	00 02                	add    %al,(%edx)$/;"	l
b80	kernel.asm	/^ b80:	03 66 08             	add    0x8(%esi),%esp$/;"	l
b80	kernel.asm	/^ b80:	10 06                	adc    %al,(%esi)$/;"	l
b82	kernel.asm	/^     b82:	00 50 a1             	add    %dl,-0x5f(%eax)$/;"	l
b82	kernel.asm	/^     b82:	91                   	xchg   %eax,%ecx$/;"	l
b82	kernel.asm	/^ b82:	00 00                	add    %al,(%eax)$/;"	l
b83	kernel.asm	/^     b83:	00 0f                	add    %cl,(%edi)$/;"	l
b83	kernel.asm	/^ b83:	2e                   	cs$/;"	l
b84	kernel.asm	/^ b84:	02 16                	add    (%esi),%dl$/;"	l
b84	kernel.asm	/^ b84:	04 01                	add    $0x1,%al$/;"	l
b85	kernel.asm	/^     b85:	00 00                	add    %al,(%eax)$/;"	l
b85	kernel.asm	/^     b85:	06                   	push   %es$/;"	l
b86	kernel.asm	/^     b86:	02 00                	add    (%eax),%al$/;"	l
b86	kernel.asm	/^ b86:	00 03                	add    %al,(%ebx)$/;"	l
b86	kernel.asm	/^ b86:	03 1d 08 74 75 04    	add    0x4757408,%ebx$/;"	l
b87	kernel.asm	/^     b87:	00 bb 00 00 00 01    	add    %bh,0x1000000(%ebx)$/;"	l
b88	kernel.asm	/^     b88:	00 01                	add    %al,(%ecx)$/;"	l
b88	kernel.asm	/^ b88:	0e                   	push   %cs$/;"	l
b89	kernel.asm	/^ b89:	3a 0b                	cmp    (%ebx),%cl$/;"	l
b8a	kernel.asm	/^     b8a:	66 25 00 00          	and    $0x0,%ax$/;"	l
b8b	kernel.asm	/^ b8b:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
b8c	kernel.asm	/^ b8c:	02 03                	add    (%ebx),%al$/;"	l
b8d	kernel.asm	/^     b8d:	00 50 be             	add    %dl,-0x42(%eax)$/;"	l
b8d	kernel.asm	/^ b8d:	49                   	dec    %ecx$/;"	l
b8e	kernel.asm	/^     b8e:	00 3c 09             	add    %bh,(%ecx,%ecx,1)$/;"	l
b8e	kernel.asm	/^ b8e:	13 00                	adc    (%eax),%eax$/;"	l
b8e	kernel.asm	/^ b8e:	75 66                	jne    bf6 <memcpy-0xc00ff40a>$/;"	l
b9	kernel.asm	/^  b9:	00 00                	add    %al,(%eax)$/;"	l
b90	kernel.asm	/^     b90:	00 00                	add    %al,(%eax)$/;"	l
b90	kernel.asm	/^ b90:	00 03                	add    %al,(%ebx)$/;"	l
b90	kernel.asm	/^ b90:	59                   	pop    %ecx$/;"	l
b91	kernel.asm	/^     b91:	00 00                	add    %al,(%eax)$/;"	l
b91	kernel.asm	/^ b91:	3d 3d 75 04 01       	cmp    $0x104753d,%eax$/;"	l
b92	kernel.asm	/^     b92:	00 d8                	add    %bl,%al$/;"	l
b92	kernel.asm	/^ b92:	24 00                	and    $0x0,%al$/;"	l
b93	kernel.asm	/^     b93:	0f f4 01             	pmuludq (%ecx),%mm0$/;"	l
b94	kernel.asm	/^     b94:	00 00                	add    %al,(%eax)$/;"	l
b94	kernel.asm	/^ b94:	0b 0b                	or     (%ebx),%ecx$/;"	l
b96	kernel.asm	/^     b96:	00 00                	add    %al,(%eax)$/;"	l
b96	kernel.asm	/^     b96:	00 01                	add    %al,(%ecx)$/;"	l
b96	kernel.asm	/^ b96:	3e 0b 03             	or     %ds:(%ebx),%eax$/;"	l
b96	kernel.asm	/^ b96:	6e                   	outsb  %ds:(%esi),(%dx)$/;"	l
b97	kernel.asm	/^ b97:	2f                   	das    $/;"	l
b98	kernel.asm	/^     b98:	00 50 d8             	add    %dl,-0x28(%eax)$/;"	l
b98	kernel.asm	/^     b98:	01 67 59             	add    %esp,0x59(%edi)$/;"	l
b98	kernel.asm	/^ b98:	04 02                	add    $0x2,%al$/;"	l
b99	kernel.asm	/^ b99:	0e                   	push   %cs$/;"	l
b9a	kernel.asm	/^ b9a:	00 00                	add    %al,(%eax)$/;"	l
b9a	kernel.asm	/^ b9a:	03 73 90             	add    -0x70(%ebx),%esi$/;"	l
b9b	kernel.asm	/^     b9b:	00 00                	add    %al,(%eax)$/;"	l
b9b	kernel.asm	/^     b9b:	01 00                	add    %eax,(%eax)$/;"	l
b9c	kernel.asm	/^ b9c:	04 24                	add    $0x24,%al$/;"	l
b9d	kernel.asm	/^     b9d:	00 5e 09             	add    %bl,0x9(%esi)$/;"	l
b9d	kernel.asm	/^     b9d:	00 e5                	add    %ah,%ch$/;"	l
b9d	kernel.asm	/^ b9d:	02 16                	add    (%esi),%dl$/;"	l
b9e	kernel.asm	/^ b9e:	00 0b                	add    %cl,(%ebx)$/;"	l
b9f	kernel.asm	/^     b9f:	00 00                	add    %al,(%eax)$/;"	l
b9f	kernel.asm	/^ b9f:	00 01                	add    %al,(%ecx)$/;"	l
ba	kernel.asm	/^      ba:	08 72 65             	or     %dh,0x65(%edx)$/;"	l
ba	kernel.asm	/^  ba:	00 00                	add    %al,(%eax)$/;"	l
ba	kernel.asm	/^  ba:	02 0a                	add    (%edx),%cl$/;"	l
ba	kernel.asm	/^  ba:	73 74                	jae    130 <memcpy-0xc00ffed0>$/;"	l
ba0	kernel.asm	/^     ba0:	00 00                	add    %al,(%eax)$/;"	l
ba0	kernel.asm	/^ ba0:	0b 3e                	or     (%esi),%edi$/;"	l
ba1	kernel.asm	/^     ba1:	00 02                	add    %al,(%edx)$/;"	l
ba1	kernel.asm	/^ ba1:	01                   	.byte 0x1$/;"	l
ba2	kernel.asm	/^     ba2:	00 13                	add    %dl,(%ebx)$/;"	l
ba2	kernel.asm	/^ ba2:	0b 03                	or     (%ebx),%eax$/;"	l
ba3	kernel.asm	/^     ba3:	00 73 7f             	add    %dh,0x7f(%ebx)$/;"	l
ba4	kernel.asm	/^     ba4:	59                   	pop    %ecx$/;"	l
ba4	kernel.asm	/^ ba4:	08 00                	or     %al,(%eax)$/;"	l
ba5	kernel.asm	/^     ba5:	01 00                	add    %eax,(%eax)$/;"	l
ba6	kernel.asm	/^     ba6:	ef                   	out    %eax,(%dx)$/;"	l
ba6	kernel.asm	/^ ba6:	00 05 13 01 03 0e    	add    %al,0xe030113$/;"	l
ba7	kernel.asm	/^     ba7:	00 00                	add    %al,(%eax)$/;"	l
ba7	kernel.asm	/^     ba7:	00 ff                	add    %bh,%bh$/;"	l
ba9	kernel.asm	/^     ba9:	00 f9                	add    %bh,%cl$/;"	l
ba9	kernel.asm	/^     ba9:	01 00                	add    %eax,(%eax)$/;"	l
bab	kernel.asm	/^     bab:	00 00                	add    %al,(%eax)$/;"	l
bab	kernel.asm	/^     bab:	00 14 30             	add    %dl,(%eax,%esi,1)$/;"	l
bac	kernel.asm	/^ bac:	0b 0b                	or     (%ebx),%ecx$/;"	l
backsp	src/drivers/tty/console.c	/^backsp(Console *c) {$/;"	f	file:
bad	kernel.asm	/^     bad:	00 02                	add    %al,(%edx)$/;"	l
bae	kernel.asm	/^     bae:	00 00                	add    %al,(%eax)$/;"	l
bae	kernel.asm	/^ bae:	3a 0b                	cmp    (%ebx),%cl$/;"	l
baf	kernel.asm	/^     baf:	00 70 00             	add    %dh,0x0(%eax)$/;"	l
banner	src/drivers/tty/console.c	/^char banner[SCR_W + 1];$/;"	v
base_15_0	include/x86.h	/^	uint32_t base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:SegDesc
base_23_16	include/x86.h	/^	uint32_t base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:SegDesc
base_31_24	include/x86.h	/^	uint32_t base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:SegDesc
bb	kernel.asm	/^  bb:	00 06                	add    %al,(%esi)$/;"	l
bb	kernel.asm	/^  bb:	01 00                	add    %eax,(%eax)$/;"	l
bb0	kernel.asm	/^     bb0:	00 0b                	add    %cl,(%ebx)$/;"	l
bb0	kernel.asm	/^ bb0:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
bb2	kernel.asm	/^     bb2:	00 15 34 02 00 00    	add    %dl,0x234$/;"	l
bb2	kernel.asm	/^     bb2:	f9                   	stc    $/;"	l
bb2	kernel.asm	/^ bb2:	01 13                	add    %edx,(%ebx)$/;"	l
bb3	kernel.asm	/^     bb3:	00 00                	add    %al,(%eax)$/;"	l
bb4	kernel.asm	/^ bb4:	00 00                	add    %al,(%eax)$/;"	l
bb5	kernel.asm	/^     bb5:	00 0a                	add    %cl,(%edx)$/;"	l
bb6	kernel.asm	/^ bb6:	06                   	push   %es$/;"	l
bb7	kernel.asm	/^     bb7:	01 00                	add    %eax,(%eax)$/;"	l
bb7	kernel.asm	/^ bb7:	0d 00 03 08 3a       	or     $0x3a080300,%eax$/;"	l
bb8	kernel.asm	/^     bb8:	01 1c ef             	add    %ebx,(%edi,%ebp,8)$/;"	l
bb9	kernel.asm	/^     bb9:	00 01                	add    %al,(%ecx)$/;"	l
bbb	kernel.asm	/^     bbb:	00 52 0f             	add    %dl,0xf(%edx)$/;"	l
bbb	kernel.asm	/^     bbb:	01 00                	add    %eax,(%eax)$/;"	l
bbc	kernel.asm	/^ bbc:	0b 3b                	or     (%ebx),%edi$/;"	l
bbd	kernel.asm	/^     bbd:	00 05 03 80 30 10    	add    %al,0x10308003$/;"	l
bbe	kernel.asm	/^     bbe:	01 00                	add    %eax,(%eax)$/;"	l
bbe	kernel.asm	/^ bbe:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
bc	kernel.asm	/^      bc:	30 00                	xor    %al,(%eax)$/;"	l
bc	kernel.asm	/^  bc:	00 00                	add    %al,(%eax)$/;"	l
bc	kernel.asm	/^  bc:	61                   	popa   $/;"	l
bc0	kernel.asm	/^     bc0:	00 19                	add    %bl,(%ecx)$/;"	l
bc1	kernel.asm	/^ bc1:	38 0a                	cmp    %cl,(%edx)$/;"	l
bc2	kernel.asm	/^     bc2:	01 00                	add    %eax,(%eax)$/;"	l
bc3	kernel.asm	/^     bc3:	c0 13 25             	rclb   $0x25,(%ebx)$/;"	l
bc3	kernel.asm	/^ bc3:	00 00                	add    %al,(%eax)$/;"	l
bc4	kernel.asm	/^     bc4:	00 05 00 73 00 77    	add    %al,0x77007300$/;"	l
bc5	kernel.asm	/^ bc5:	07                   	pop    %es$/;"	l
bc6	kernel.asm	/^     bc6:	00 00                	add    %al,(%eax)$/;"	l
bc6	kernel.asm	/^ bc6:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax$/;"	l
bc8	kernel.asm	/^     bc8:	00 20                	add    %ah,(%eax)$/;"	l
bca	kernel.asm	/^     bca:	00 22                	add    %ah,(%edx)$/;"	l
bca	kernel.asm	/^     bca:	02 00                	add    (%eax),%al$/;"	l
bcb	kernel.asm	/^ bcb:	0b 3b                	or     (%ebx),%edi$/;"	l
bcc	kernel.asm	/^     bcc:	00 14 30             	add    %dl,(%eax,%esi,1)$/;"	l
bcc	kernel.asm	/^     bcc:	21 01                	and    %eax,(%ecx)$/;"	l
bcd	kernel.asm	/^ bcd:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
bce	kernel.asm	/^     bce:	00 00                	add    %al,(%eax)$/;"	l
bcf	kernel.asm	/^     bcf:	00 00                	add    %al,(%eax)$/;"	l
bd	kernel.asm	/^      bd:	74 00                	je     bf <memcpy-0xc00fff41>$/;"	l
bd	kernel.asm	/^  bd:	00 00                	add    %al,(%eax)$/;"	l
bd	kernel.asm	/^  bd:	00 01                	add    %al,(%ecx)$/;"	l
bd	kernel.asm	/^  bd:	72 74                	jb     133 <memcpy-0xc00ffecd>$/;"	l
bd0	kernel.asm	/^     bd0:	38 01                	cmp    %al,(%ecx)$/;"	l
bd0	kernel.asm	/^ bd0:	38 0a                	cmp    %cl,(%edx)$/;"	l
bd1	kernel.asm	/^     bd1:	00 0b                	add    %cl,(%ebx)$/;"	l
bd2	kernel.asm	/^     bd2:	00 00                	add    %al,(%eax)$/;"	l
bd2	kernel.asm	/^ bd2:	00 00                	add    %al,(%eax)$/;"	l
bd3	kernel.asm	/^     bd3:	00 15 19 02 00 00    	add    %dl,0x219$/;"	l
bd4	kernel.asm	/^     bd4:	01 00                	add    %eax,(%eax)$/;"	l
bd4	kernel.asm	/^ bd4:	08 0f                	or     %cl,(%edi)$/;"	l
bd6	kernel.asm	/^     bd6:	50                   	push   %eax$/;"	l
bd6	kernel.asm	/^ bd6:	00 0b                	add    %cl,(%ebx)$/;"	l
bd7	kernel.asm	/^     bd7:	38 01                	cmp    %al,(%ecx)$/;"	l
bd8	kernel.asm	/^ bd8:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
bd9	kernel.asm	/^     bd9:	00 00                	add    %al,(%eax)$/;"	l
bd9	kernel.asm	/^     bd9:	01 1d 10 02 00 00    	add    %ebx,0x210$/;"	l
bdb	kernel.asm	/^     bdb:	45                   	inc    %ebp$/;"	l
bdb	kernel.asm	/^ bdb:	00 00                	add    %al,(%eax)$/;"	l
bdc	kernel.asm	/^     bdc:	01 00                	add    %eax,(%eax)$/;"	l
bdd	kernel.asm	/^ bdd:	09 13                	or     %edx,(%ebx)$/;"	l
bde	kernel.asm	/^     bde:	00 02                	add    %al,(%edx)$/;"	l
bdf	kernel.asm	/^     bdf:	05 03 c0 30 10       	add    $0x1030c003,%eax$/;"	l
bdf	kernel.asm	/^ bdf:	01 03                	add    %eax,(%ebx)$/;"	l
be	kernel.asm	/^      be:	00 00                	add    %al,(%eax)$/;"	l
be	kernel.asm	/^  be:	00 00                	add    %al,(%eax)$/;"	l
be	kernel.asm	/^  be:	0f 01 01             	sgdtl  (%ecx)$/;"	l
be0	kernel.asm	/^     be0:	00 73 7f             	add    %dh,0x7f(%ebx)$/;"	l
be1	kernel.asm	/^ be1:	08 0b                	or     %cl,(%ebx)$/;"	l
be3	kernel.asm	/^     be3:	4f                   	dec    %edi$/;"	l
be3	kernel.asm	/^ be3:	05 3a 0b 3b 0b       	add    $0xb3b0b3a,%eax$/;"	l
be4	kernel.asm	/^     be4:	01 00                	add    %eax,(%eax)$/;"	l
be4	kernel.asm	/^     be4:	c0 15 e8 01 00 00 01 	rclb   $0x1,0x1e8$/;"	l
be6	kernel.asm	/^     be6:	00 59 01             	add    %bl,0x1(%ecx)$/;"	l
be8	kernel.asm	/^ be8:	01 13                	add    %edx,(%ebx)$/;"	l
be9	kernel.asm	/^     be9:	00 00                	add    %al,(%eax)$/;"	l
bea	kernel.asm	/^ bea:	00 00                	add    %al,(%eax)$/;"	l
beb	kernel.asm	/^     beb:	02 00                	add    (%eax),%al$/;"	l
beb	kernel.asm	/^     beb:	1e                   	push   %ds$/;"	l
bec	kernel.asm	/^     bec:	65 00 00             	add    %al,%gs:(%eax)$/;"	l
bec	kernel.asm	/^ bec:	0a 01                	or     (%ecx),%al$/;"	l
bed	kernel.asm	/^     bed:	70 00                	jo     bef <memcpy-0xc00ff411>$/;"	l
bee	kernel.asm	/^ bee:	01 49 13             	add    %ecx,0x13(%ecx)$/;"	l
bef	kernel.asm	/^     bef:	00 05 03 f0 30 10    	add    %al,0x1030f003$/;"	l
bef	kernel.asm	/^     bef:	59                   	pop    %ecx$/;"	l
bf	kernel.asm	/^      bf:	01 07                	add    %eax,(%edi)$/;"	l
bf	kernel.asm	/^  bf:	00 10                	add    %dl,(%eax)$/;"	l
bf	kernel.asm	/^  bf:	00 73 68             	add    %dh,0x68(%ebx)$/;"	l
bf	kernel.asm	/^  bf:	73 72                	jae    133 <memcpy-0xc00ffecd>$/;"	l
bf0	kernel.asm	/^     bf0:	01 00                	add    %eax,(%eax)$/;"	l
bf1	kernel.asm	/^ bf1:	01 13                	add    %edx,(%ebx)$/;"	l
bf2	kernel.asm	/^     bf2:	00 6a 01             	add    %ch,0x1(%edx)$/;"	l
bf3	kernel.asm	/^ bf3:	00 00                	add    %al,(%eax)$/;"	l
bf5	kernel.asm	/^     bf5:	00 00                	add    %al,(%eax)$/;"	l
bf5	kernel.asm	/^     bf5:	c0 13 4c             	rclb   $0x4c,(%ebx)$/;"	l
bf5	kernel.asm	/^ bf5:	0b 21                	or     (%ecx),%esp$/;"	l
bf7	kernel.asm	/^     bf7:	01 00                	add    %eax,(%eax)$/;"	l
bf7	kernel.asm	/^ bf7:	00 49 13             	add    %cl,0x13(%ecx)$/;"	l
bf8	kernel.asm	/^     bf8:	00 00                	add    %al,(%eax)$/;"	l
bf9	kernel.asm	/^     bf9:	52                   	push   %edx$/;"	l
bfa	kernel.asm	/^     bfa:	00 55 02             	add    %dl,0x2(%ebp)$/;"	l
bfa	kernel.asm	/^     bfa:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
bfa	kernel.asm	/^ bfa:	2f                   	das    $/;"	l
bfb	kernel.asm	/^     bfb:	01 00                	add    %eax,(%eax)$/;"	l
bfb	kernel.asm	/^ bfb:	05 00 00 0c 2e       	add    $0x2e0c0000,%eax$/;"	l
bfd	kernel.asm	/^     bfd:	00 00                	add    %al,(%eax)$/;"	l
bfd	kernel.asm	/^     bfd:	00 79 01             	add    %bh,0x1(%ecx)$/;"	l
bff	kernel.asm	/^     bff:	16                   	push   %ss$/;"	l
block	include/process.h	/^    ListHead semq , block;$/;"	m	struct:PCB
boolean	include/types.h	/^typedef unsigned char  boolean;$/;"	t
bootmain	boot/main.c	/^bootmain(void) {$/;"	f
buf	include/driver/hal.h	/^	void *buf;$/;"	m	struct:DevMessage
buf	src/kernel/main.c	/^int buf[NBUF], f = 0, r = 0, g = 1, tid = 1;$/;"	v
c	kernel.asm	/^       c:	01 00                	add    %eax,(%eax)$/;"	l
c	kernel.asm	/^       c:	8c 00                	mov    %es,(%eax)$/;"	l
c	kernel.asm	/^   c:	00 00                	add    %al,(%eax)$/;"	l
c	kernel.asm	/^   c:	2f                   	das    $/;"	l
c	kernel.asm	/^   c:	fb                   	sti    $/;"	l
c0	kernel.asm	/^      c0:	44                   	inc    %esp$/;"	l
c0	kernel.asm	/^  c0:	1c 00                	sbb    $0x0,%al$/;"	l
c00	kernel.asm	/^     c00:	00 00                	add    %al,(%eax)$/;"	l
c00	kernel.asm	/^     c00:	30 00                	xor    %al,(%eax)$/;"	l
c00	kernel.asm	/^ c00:	00 03                	add    %al,(%ebx)$/;"	l
c0100000	kernel.asm	/^c0100000 <memcpy>:$/;"	l
c0100000	kernel.asm	/^c0100000:	55                   	push   %ebp$/;"	l
c0100001	kernel.asm	/^c0100001:	89 e5                	mov    %esp,%ebp$/;"	l
c0100003	kernel.asm	/^c0100003:	56                   	push   %esi$/;"	l
c0100004	kernel.asm	/^c0100004:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100007	kernel.asm	/^c0100007:	53                   	push   %ebx$/;"	l
c0100008	kernel.asm	/^c0100008:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
c010000b	kernel.asm	/^c010000b:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
c010000e	kernel.asm	/^c010000e:	85 db                	test   %ebx,%ebx$/;"	l
c0100010	kernel.asm	/^c0100010:	74 14                	je     c0100026 <memcpy+0x26>$/;"	l
c0100012	kernel.asm	/^c0100012:	31 d2                	xor    %edx,%edx$/;"	l
c0100014	kernel.asm	/^c0100014:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100018	kernel.asm	/^c0100018:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx$/;"	l
c010001c	kernel.asm	/^c010001c:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
c010001f	kernel.asm	/^c010001f:	83 c2 01             	add    $0x1,%edx$/;"	l
c0100022	kernel.asm	/^c0100022:	39 da                	cmp    %ebx,%edx$/;"	l
c0100024	kernel.asm	/^c0100024:	75 f2                	jne    c0100018 <memcpy+0x18>$/;"	l
c0100026	kernel.asm	/^c0100026:	5b                   	pop    %ebx$/;"	l
c0100027	kernel.asm	/^c0100027:	5e                   	pop    %esi$/;"	l
c0100028	kernel.asm	/^c0100028:	5d                   	pop    %ebp$/;"	l
c0100029	kernel.asm	/^c0100029:	c3                   	ret    $/;"	l
c010002a	kernel.asm	/^c010002a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0100030	kernel.asm	/^c0100030 <memset>:$/;"	l
c0100030	kernel.asm	/^c0100030:	55                   	push   %ebp$/;"	l
c0100031	kernel.asm	/^c0100031:	89 e5                	mov    %esp,%ebp$/;"	l
c0100033	kernel.asm	/^c0100033:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0100036	kernel.asm	/^c0100036:	53                   	push   %ebx$/;"	l
c0100037	kernel.asm	/^c0100037:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010003a	kernel.asm	/^c010003a:	85 d2                	test   %edx,%edx$/;"	l
c010003c	kernel.asm	/^c010003c:	74 14                	je     c0100052 <memset+0x22>$/;"	l
c010003e	kernel.asm	/^c010003e:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
c0100042	kernel.asm	/^c0100042:	89 c1                	mov    %eax,%ecx$/;"	l
c0100044	kernel.asm	/^c0100044:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100048	kernel.asm	/^c0100048:	88 19                	mov    %bl,(%ecx)$/;"	l
c010004a	kernel.asm	/^c010004a:	83 c1 01             	add    $0x1,%ecx$/;"	l
c010004d	kernel.asm	/^c010004d:	83 ea 01             	sub    $0x1,%edx$/;"	l
c0100050	kernel.asm	/^c0100050:	75 f6                	jne    c0100048 <memset+0x18>$/;"	l
c0100052	kernel.asm	/^c0100052:	5b                   	pop    %ebx$/;"	l
c0100053	kernel.asm	/^c0100053:	5d                   	pop    %ebp$/;"	l
c0100054	kernel.asm	/^c0100054:	c3                   	ret    $/;"	l
c0100055	kernel.asm	/^c0100055:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100059	kernel.asm	/^c0100059:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
c0100060	kernel.asm	/^c0100060 <utoa_buf>:$/;"	l
c0100060	kernel.asm	/^c0100060:	55                   	push   %ebp$/;"	l
c0100061	kernel.asm	/^c0100061:	89 e5                	mov    %esp,%ebp$/;"	l
c0100063	kernel.asm	/^c0100063:	56                   	push   %esi$/;"	l
c0100064	kernel.asm	/^c0100064:	53                   	push   %ebx$/;"	l
c0100065	kernel.asm	/^c0100065:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0100068	kernel.asm	/^c0100068:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
c010006b	kernel.asm	/^c010006b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010006e	kernel.asm	/^c010006e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
c0100071	kernel.asm	/^c0100071:	8d 53 fe             	lea    -0x2(%ebx),%edx$/;"	l
c0100074	kernel.asm	/^c0100074:	83 fa 0e             	cmp    $0xe,%edx$/;"	l
c0100077	kernel.asm	/^c0100077:	77 27                	ja     c01000a0 <utoa_buf+0x40>$/;"	l
c0100079	kernel.asm	/^c0100079:	8d 4e 22             	lea    0x22(%esi),%ecx$/;"	l
c010007c	kernel.asm	/^c010007c:	c6 46 22 00          	movb   $0x0,0x22(%esi)$/;"	l
c0100080	kernel.asm	/^c0100080:	31 d2                	xor    %edx,%edx$/;"	l
c0100082	kernel.asm	/^c0100082:	83 e9 01             	sub    $0x1,%ecx$/;"	l
c0100085	kernel.asm	/^c0100085:	f7 f3                	div    %ebx$/;"	l
c0100087	kernel.asm	/^c0100087:	0f b6 92 29 18 10 c0 	movzbl -0x3fefe7d7(%edx),%edx$/;"	l
c010008e	kernel.asm	/^c010008e:	85 c0                	test   %eax,%eax$/;"	l
c0100090	kernel.asm	/^c0100090:	88 11                	mov    %dl,(%ecx)$/;"	l
c0100092	kernel.asm	/^c0100092:	75 ec                	jne    c0100080 <utoa_buf+0x20>$/;"	l
c0100094	kernel.asm	/^c0100094:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100097	kernel.asm	/^c0100097:	89 c8                	mov    %ecx,%eax$/;"	l
c0100099	kernel.asm	/^c0100099:	5b                   	pop    %ebx$/;"	l
c010009a	kernel.asm	/^c010009a:	5e                   	pop    %esi$/;"	l
c010009b	kernel.asm	/^c010009b:	5d                   	pop    %ebp$/;"	l
c010009c	kernel.asm	/^c010009c:	c3                   	ret    $/;"	l
c010009d	kernel.asm	/^c010009d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c01000a0	kernel.asm	/^c01000a0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01000a3	kernel.asm	/^c01000a3:	c7 44 24 04 2b 00 00 	movl   $0x2b,0x4(%esp)$/;"	l
c01000aa	kernel.asm	/^c01000aa:	00 $/;"	l
c01000ab	kernel.asm	/^c01000ab:	c7 04 24 18 18 10 c0 	movl   $0xc0101818,(%esp)$/;"	l
c01000b2	kernel.asm	/^c01000b2:	e8 f9 00 00 00       	call   c01001b0 <abort>$/;"	l
c01000b7	kernel.asm	/^c01000b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01000ba	kernel.asm	/^c01000ba:	eb bd                	jmp    c0100079 <utoa_buf+0x19>$/;"	l
c01000bc	kernel.asm	/^c01000bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c01000c0	kernel.asm	/^c01000c0 <itoa_buf>:$/;"	l
c01000c0	kernel.asm	/^c01000c0:	55                   	push   %ebp$/;"	l
c01000c1	kernel.asm	/^c01000c1:	89 e5                	mov    %esp,%ebp$/;"	l
c01000c3	kernel.asm	/^c01000c3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01000c6	kernel.asm	/^c01000c6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01000c9	kernel.asm	/^c01000c9:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c01000cc	kernel.asm	/^c01000cc:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01000cf	kernel.asm	/^c01000cf:	83 c1 01             	add    $0x1,%ecx$/;"	l
c01000d2	kernel.asm	/^c01000d2:	85 c0                	test   %eax,%eax$/;"	l
c01000d4	kernel.asm	/^c01000d4:	78 12                	js     c01000e8 <itoa_buf+0x28>$/;"	l
c01000d6	kernel.asm	/^c01000d6:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c01000d9	kernel.asm	/^c01000d9:	89 4d 0c             	mov    %ecx,0xc(%ebp)$/;"	l
c01000dc	kernel.asm	/^c01000dc:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
c01000df	kernel.asm	/^c01000df:	c9                   	leave  $/;"	l
c01000e0	kernel.asm	/^c01000e0:	e9 7b ff ff ff       	jmp    c0100060 <utoa_buf>$/;"	l
c01000e5	kernel.asm	/^c01000e5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c01000e8	kernel.asm	/^c01000e8:	f7 d8                	neg    %eax$/;"	l
c01000ea	kernel.asm	/^c01000ea:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01000ee	kernel.asm	/^c01000ee:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c01000f2	kernel.asm	/^c01000f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01000f5	kernel.asm	/^c01000f5:	e8 66 ff ff ff       	call   c0100060 <utoa_buf>$/;"	l
c01000fa	kernel.asm	/^c01000fa:	89 c2                	mov    %eax,%edx$/;"	l
c01000fc	kernel.asm	/^c01000fc:	c6 42 ff 2d          	movb   $0x2d,-0x1(%edx)$/;"	l
c0100100	kernel.asm	/^c0100100:	8d 40 ff             	lea    -0x1(%eax),%eax$/;"	l
c0100103	kernel.asm	/^c0100103:	c9                   	leave  $/;"	l
c0100104	kernel.asm	/^c0100104:	c3                   	ret    $/;"	l
c0100105	kernel.asm	/^c0100105:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100109	kernel.asm	/^c0100109:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
c0100110	kernel.asm	/^c0100110 <toupper>:$/;"	l
c0100110	kernel.asm	/^c0100110:	55                   	push   %ebp$/;"	l
c0100111	kernel.asm	/^c0100111:	89 e5                	mov    %esp,%ebp$/;"	l
c0100113	kernel.asm	/^c0100113:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100116	kernel.asm	/^c0100116:	5d                   	pop    %ebp$/;"	l
c0100117	kernel.asm	/^c0100117:	8d 48 9f             	lea    -0x61(%eax),%ecx$/;"	l
c010011a	kernel.asm	/^c010011a:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
c010011d	kernel.asm	/^c010011d:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
c0100120	kernel.asm	/^c0100120:	0f 46 c2             	cmovbe %edx,%eax$/;"	l
c0100123	kernel.asm	/^c0100123:	c3                   	ret    $/;"	l
c0100124	kernel.asm	/^c0100124:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c010012a	kernel.asm	/^c010012a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi$/;"	l
c0100130	kernel.asm	/^c0100130 <tolower>:$/;"	l
c0100130	kernel.asm	/^c0100130:	55                   	push   %ebp$/;"	l
c0100131	kernel.asm	/^c0100131:	89 e5                	mov    %esp,%ebp$/;"	l
c0100133	kernel.asm	/^c0100133:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100136	kernel.asm	/^c0100136:	5d                   	pop    %ebp$/;"	l
c0100137	kernel.asm	/^c0100137:	8d 48 bf             	lea    -0x41(%eax),%ecx$/;"	l
c010013a	kernel.asm	/^c010013a:	8d 50 20             	lea    0x20(%eax),%edx$/;"	l
c010013d	kernel.asm	/^c010013d:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
c0100140	kernel.asm	/^c0100140:	0f 46 c2             	cmovbe %edx,%eax$/;"	l
c0100143	kernel.asm	/^c0100143:	c3                   	ret    $/;"	l
c0100144	kernel.asm	/^c0100144:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c010014a	kernel.asm	/^c010014a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi$/;"	l
c0100150	kernel.asm	/^c0100150 <itoa>:$/;"	l
c0100150	kernel.asm	/^c0100150:	55                   	push   %ebp$/;"	l
c0100151	kernel.asm	/^c0100151:	89 e5                	mov    %esp,%ebp$/;"	l
c0100153	kernel.asm	/^c0100153:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100156	kernel.asm	/^c0100156:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100159	kernel.asm	/^c0100159:	c7 44 24 04 00 30 10 	movl   $0xc0103000,0x4(%esp)$/;"	l
c0100160	kernel.asm	/^c0100160:	c0 $/;"	l
c0100161	kernel.asm	/^c0100161:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100165	kernel.asm	/^c0100165:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100168	kernel.asm	/^c0100168:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010016b	kernel.asm	/^c010016b:	e8 50 ff ff ff       	call   c01000c0 <itoa_buf>$/;"	l
c0100170	kernel.asm	/^c0100170:	c9                   	leave  $/;"	l
c0100171	kernel.asm	/^c0100171:	c3                   	ret    $/;"	l
c0100172	kernel.asm	/^c0100172:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100179	kernel.asm	/^c0100179:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
c0100180	kernel.asm	/^c0100180 <utoa>:$/;"	l
c0100180	kernel.asm	/^c0100180:	55                   	push   %ebp$/;"	l
c0100181	kernel.asm	/^c0100181:	89 e5                	mov    %esp,%ebp$/;"	l
c0100183	kernel.asm	/^c0100183:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100186	kernel.asm	/^c0100186:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100189	kernel.asm	/^c0100189:	c7 44 24 04 40 30 10 	movl   $0xc0103040,0x4(%esp)$/;"	l
c0100190	kernel.asm	/^c0100190:	c0 $/;"	l
c0100191	kernel.asm	/^c0100191:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100195	kernel.asm	/^c0100195:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100198	kernel.asm	/^c0100198:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010019b	kernel.asm	/^c010019b:	e8 c0 fe ff ff       	call   c0100060 <utoa_buf>$/;"	l
c01001a0	kernel.asm	/^c01001a0:	c9                   	leave  $/;"	l
c01001a1	kernel.asm	/^c01001a1:	c3                   	ret    $/;"	l
c01001a2	kernel.asm	/^c01001a2:	90                   	nop$/;"	l
c01001a3	kernel.asm	/^c01001a3:	90                   	nop$/;"	l
c01001a4	kernel.asm	/^c01001a4:	90                   	nop$/;"	l
c01001a5	kernel.asm	/^c01001a5:	90                   	nop$/;"	l
c01001a6	kernel.asm	/^c01001a6:	90                   	nop$/;"	l
c01001a7	kernel.asm	/^c01001a7:	90                   	nop$/;"	l
c01001a8	kernel.asm	/^c01001a8:	90                   	nop$/;"	l
c01001a9	kernel.asm	/^c01001a9:	90                   	nop$/;"	l
c01001aa	kernel.asm	/^c01001aa:	90                   	nop$/;"	l
c01001ab	kernel.asm	/^c01001ab:	90                   	nop$/;"	l
c01001ac	kernel.asm	/^c01001ac:	90                   	nop$/;"	l
c01001ad	kernel.asm	/^c01001ad:	90                   	nop$/;"	l
c01001ae	kernel.asm	/^c01001ae:	90                   	nop$/;"	l
c01001af	kernel.asm	/^c01001af:	90                   	nop$/;"	l
c01001b0	kernel.asm	/^c01001b0 <abort>:$/;"	l
c01001b0	kernel.asm	/^c01001b0:	55                   	push   %ebp$/;"	l
c01001b1	kernel.asm	/^c01001b1:	89 e5                	mov    %esp,%ebp$/;"	l
c01001b3	kernel.asm	/^c01001b3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01001b6	kernel.asm	/^c01001b6:	fa                   	cli    $/;"	l
c01001b7	kernel.asm	/^c01001b7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01001ba	kernel.asm	/^c01001ba:	c7 04 24 3c 18 10 c0 	movl   $0xc010183c,(%esp)$/;"	l
c01001c1	kernel.asm	/^c01001c1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01001c5	kernel.asm	/^c01001c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01001c8	kernel.asm	/^c01001c8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001cc	kernel.asm	/^c01001cc:	e8 cf 07 00 00       	call   c01009a0 <printk>$/;"	l
c01001d1	kernel.asm	/^c01001d1:	f4                   	hlt    $/;"	l
c01001d2	kernel.asm	/^c01001d2:	c9                   	leave  $/;"	l
c01001d3	kernel.asm	/^c01001d3:	c3                   	ret    $/;"	l
c01001d4	kernel.asm	/^c01001d4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c01001da	kernel.asm	/^c01001da:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi$/;"	l
c01001e0	kernel.asm	/^c01001e0 <panic>:$/;"	l
c01001e0	kernel.asm	/^c01001e0:	55                   	push   %ebp$/;"	l
c01001e1	kernel.asm	/^c01001e1:	89 e5                	mov    %esp,%ebp$/;"	l
c01001e3	kernel.asm	/^c01001e3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01001e6	kernel.asm	/^c01001e6:	fa                   	cli    $/;"	l
c01001e7	kernel.asm	/^c01001e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01001ea	kernel.asm	/^c01001ea:	c7 04 24 68 18 10 c0 	movl   $0xc0101868,(%esp)$/;"	l
c01001f1	kernel.asm	/^c01001f1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001f5	kernel.asm	/^c01001f5:	e8 a6 07 00 00       	call   c01009a0 <printk>$/;"	l
c01001fa	kernel.asm	/^c01001fa:	f4                   	hlt    $/;"	l
c01001fb	kernel.asm	/^c01001fb:	c9                   	leave  $/;"	l
c01001fc	kernel.asm	/^c01001fc:	c3                   	ret    $/;"	l
c01001fd	kernel.asm	/^c01001fd:	90                   	nop$/;"	l
c01001fe	kernel.asm	/^c01001fe:	90                   	nop$/;"	l
c01001ff	kernel.asm	/^c01001ff:	90                   	nop$/;"	l
c0100200	kernel.asm	/^c0100200 <lock>:$/;"	l
c0100200	kernel.asm	/^c0100200:	55                   	push   %ebp$/;"	l
c0100201	kernel.asm	/^c0100201:	89 e5                	mov    %esp,%ebp$/;"	l
c0100203	kernel.asm	/^c0100203:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100206	kernel.asm	/^c0100206:	a1 0c 31 10 c0       	mov    0xc010310c,%eax$/;"	l
c010020b	kernel.asm	/^c010020b:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010020e	kernel.asm	/^c010020e:	85 d2                	test   %edx,%edx$/;"	l
c0100210	kernel.asm	/^c0100210:	78 56                	js     c0100268 <lock+0x68>$/;"	l
c0100212	kernel.asm	/^c0100212:	83 c2 01             	add    $0x1,%edx$/;"	l
c0100215	kernel.asm	/^c0100215:	83 fa 01             	cmp    $0x1,%edx$/;"	l
c0100218	kernel.asm	/^c0100218:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010021b	kernel.asm	/^c010021b:	74 2b                	je     c0100248 <lock+0x48>$/;"	l
c010021d	kernel.asm	/^c010021d:	9c                   	pushf  $/;"	l
c010021e	kernel.asm	/^c010021e:	58                   	pop    %eax$/;"	l
c010021f	kernel.asm	/^c010021f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100222	kernel.asm	/^c0100222:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100225	kernel.asm	/^c0100225:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100228	kernel.asm	/^c0100228:	75 06                	jne    c0100230 <lock+0x30>$/;"	l
c010022a	kernel.asm	/^c010022a:	c9                   	leave  $/;"	l
c010022b	kernel.asm	/^c010022b:	c3                   	ret    $/;"	l
c010022c	kernel.asm	/^c010022c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100230	kernel.asm	/^c0100230:	c7 44 24 04 21 00 00 	movl   $0x21,0x4(%esp)$/;"	l
c0100237	kernel.asm	/^c0100237:	00 $/;"	l
c0100238	kernel.asm	/^c0100238:	c7 04 24 8c 18 10 c0 	movl   $0xc010188c,(%esp)$/;"	l
c010023f	kernel.asm	/^c010023f:	e8 6c ff ff ff       	call   c01001b0 <abort>$/;"	l
c0100244	kernel.asm	/^c0100244:	c9                   	leave  $/;"	l
c0100245	kernel.asm	/^c0100245:	c3                   	ret    $/;"	l
c0100246	kernel.asm	/^c0100246:	66 90                	xchg   %ax,%ax$/;"	l
c0100248	kernel.asm	/^c0100248:	9c                   	pushf  $/;"	l
c0100249	kernel.asm	/^c0100249:	5a                   	pop    %edx$/;"	l
c010024a	kernel.asm	/^c010024a:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010024d	kernel.asm	/^c010024d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100250	kernel.asm	/^c0100250:	80 e6 02             	and    $0x2,%dh$/;"	l
c0100253	kernel.asm	/^c0100253:	74 0b                	je     c0100260 <lock+0x60>$/;"	l
c0100255	kernel.asm	/^c0100255:	c6 40 1c 01          	movb   $0x1,0x1c(%eax)$/;"	l
c0100259	kernel.asm	/^c0100259:	fa                   	cli    $/;"	l
c010025a	kernel.asm	/^c010025a:	c9                   	leave  $/;"	l
c010025b	kernel.asm	/^c010025b:	c3                   	ret    $/;"	l
c010025c	kernel.asm	/^c010025c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100260	kernel.asm	/^c0100260:	c6 40 1c 00          	movb   $0x0,0x1c(%eax)$/;"	l
c0100264	kernel.asm	/^c0100264:	c9                   	leave  $/;"	l
c0100265	kernel.asm	/^c0100265:	c3                   	ret    $/;"	l
c0100266	kernel.asm	/^c0100266:	66 90                	xchg   %ax,%ax$/;"	l
c0100268	kernel.asm	/^c0100268:	c7 44 24 04 17 00 00 	movl   $0x17,0x4(%esp)$/;"	l
c010026f	kernel.asm	/^c010026f:	00 $/;"	l
c0100270	kernel.asm	/^c0100270:	c7 04 24 8c 18 10 c0 	movl   $0xc010188c,(%esp)$/;"	l
c0100277	kernel.asm	/^c0100277:	e8 34 ff ff ff       	call   c01001b0 <abort>$/;"	l
c010027c	kernel.asm	/^c010027c:	a1 0c 31 10 c0       	mov    0xc010310c,%eax$/;"	l
c0100281	kernel.asm	/^c0100281:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c0100284	kernel.asm	/^c0100284:	eb 8c                	jmp    c0100212 <lock+0x12>$/;"	l
c0100286	kernel.asm	/^c0100286:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c0100289	kernel.asm	/^c0100289:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
c0100290	kernel.asm	/^c0100290 <unlock>:$/;"	l
c0100290	kernel.asm	/^c0100290:	55                   	push   %ebp$/;"	l
c0100291	kernel.asm	/^c0100291:	89 e5                	mov    %esp,%ebp$/;"	l
c0100293	kernel.asm	/^c0100293:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100296	kernel.asm	/^c0100296:	a1 0c 31 10 c0       	mov    0xc010310c,%eax$/;"	l
c010029b	kernel.asm	/^c010029b:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010029e	kernel.asm	/^c010029e:	85 d2                	test   %edx,%edx$/;"	l
c01002a0	kernel.asm	/^c01002a0:	7e 26                	jle    c01002c8 <unlock+0x38>$/;"	l
c01002a2	kernel.asm	/^c01002a2:	83 ea 01             	sub    $0x1,%edx$/;"	l
c01002a5	kernel.asm	/^c01002a5:	85 d2                	test   %edx,%edx$/;"	l
c01002a7	kernel.asm	/^c01002a7:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c01002aa	kernel.asm	/^c01002aa:	75 06                	jne    c01002b2 <unlock+0x22>$/;"	l
c01002ac	kernel.asm	/^c01002ac:	80 78 1c 01          	cmpb   $0x1,0x1c(%eax)$/;"	l
c01002b0	kernel.asm	/^c01002b0:	74 06                	je     c01002b8 <unlock+0x28>$/;"	l
c01002b2	kernel.asm	/^c01002b2:	c9                   	leave  $/;"	l
c01002b3	kernel.asm	/^c01002b3:	c3                   	ret    $/;"	l
c01002b4	kernel.asm	/^c01002b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c01002b8	kernel.asm	/^c01002b8:	fb                   	sti    $/;"	l
c01002b9	kernel.asm	/^c01002b9:	c9                   	leave  $/;"	l
c01002ba	kernel.asm	/^c01002ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c01002c0	kernel.asm	/^c01002c0:	c3                   	ret    $/;"	l
c01002c1	kernel.asm	/^c01002c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c01002c8	kernel.asm	/^c01002c8:	c7 44 24 04 26 00 00 	movl   $0x26,0x4(%esp)$/;"	l
c01002cf	kernel.asm	/^c01002cf:	00 $/;"	l
c01002d0	kernel.asm	/^c01002d0:	c7 04 24 8c 18 10 c0 	movl   $0xc010188c,(%esp)$/;"	l
c01002d7	kernel.asm	/^c01002d7:	e8 d4 fe ff ff       	call   c01001b0 <abort>$/;"	l
c01002dc	kernel.asm	/^c01002dc:	a1 0c 31 10 c0       	mov    0xc010310c,%eax$/;"	l
c01002e1	kernel.asm	/^c01002e1:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c01002e4	kernel.asm	/^c01002e4:	eb bc                	jmp    c01002a2 <unlock+0x12>$/;"	l
c01002e6	kernel.asm	/^c01002e6:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c01002e9	kernel.asm	/^c01002e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
c01002f0	kernel.asm	/^c01002f0 <new_sem>:$/;"	l
c01002f0	kernel.asm	/^c01002f0:	55                   	push   %ebp$/;"	l
c01002f1	kernel.asm	/^c01002f1:	89 e5                	mov    %esp,%ebp$/;"	l
c01002f3	kernel.asm	/^c01002f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01002f6	kernel.asm	/^c01002f6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01002f9	kernel.asm	/^c01002f9:	89 10                	mov    %edx,(%eax)$/;"	l
c01002fb	kernel.asm	/^c01002fb:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c01002fe	kernel.asm	/^c01002fe:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0100301	kernel.asm	/^c0100301:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0100304	kernel.asm	/^c0100304:	5d                   	pop    %ebp$/;"	l
c0100305	kernel.asm	/^c0100305:	c3                   	ret    $/;"	l
c0100306	kernel.asm	/^c0100306:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c0100309	kernel.asm	/^c0100309:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
c0100310	kernel.asm	/^c0100310 <P>:$/;"	l
c0100310	kernel.asm	/^c0100310:	55                   	push   %ebp$/;"	l
c0100311	kernel.asm	/^c0100311:	89 e5                	mov    %esp,%ebp$/;"	l
c0100313	kernel.asm	/^c0100313:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0100316	kernel.asm	/^c0100316:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
c0100319	kernel.asm	/^c0100319:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
c010031c	kernel.asm	/^c010031c:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
c010031f	kernel.asm	/^c010031f:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
c0100322	kernel.asm	/^c0100322:	e8 d9 fe ff ff       	call   c0100200 <lock>$/;"	l
c0100327	kernel.asm	/^c0100327:	8b 03                	mov    (%ebx),%eax$/;"	l
c0100329	kernel.asm	/^c0100329:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010032c	kernel.asm	/^c010032c:	85 c0                	test   %eax,%eax$/;"	l
c010032e	kernel.asm	/^c010032e:	89 03                	mov    %eax,(%ebx)$/;"	l
c0100330	kernel.asm	/^c0100330:	78 16                	js     c0100348 <P+0x38>$/;"	l
c0100332	kernel.asm	/^c0100332:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
c0100335	kernel.asm	/^c0100335:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
c0100338	kernel.asm	/^c0100338:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
c010033b	kernel.asm	/^c010033b:	89 ec                	mov    %ebp,%esp$/;"	l
c010033d	kernel.asm	/^c010033d:	5d                   	pop    %ebp$/;"	l
c010033e	kernel.asm	/^c010033e:	e9 4d ff ff ff       	jmp    c0100290 <unlock>$/;"	l
c0100343	kernel.asm	/^c0100343:	90                   	nop$/;"	l
c0100344	kernel.asm	/^c0100344:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100348	kernel.asm	/^c0100348:	8b 35 0c 31 10 c0    	mov    0xc010310c,%esi$/;"	l
c010034e	kernel.asm	/^c010034e:	8d 53 04             	lea    0x4(%ebx),%edx$/;"	l
c0100351	kernel.asm	/^c0100351:	8b 7b 04             	mov    0x4(%ebx),%edi$/;"	l
c0100354	kernel.asm	/^c0100354:	89 f0                	mov    %esi,%eax$/;"	l
c0100356	kernel.asm	/^c0100356:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0100359	kernel.asm	/^c0100359:	74 1d                	je     c0100378 <P+0x68>$/;"	l
c010035b	kernel.asm	/^c010035b:	85 ff                	test   %edi,%edi$/;"	l
c010035d	kernel.asm	/^c010035d:	89 7e 0c             	mov    %edi,0xc(%esi)$/;"	l
c0100360	kernel.asm	/^c0100360:	89 56 10             	mov    %edx,0x10(%esi)$/;"	l
c0100363	kernel.asm	/^c0100363:	74 03                	je     c0100368 <P+0x58>$/;"	l
c0100365	kernel.asm	/^c0100365:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
c0100368	kernel.asm	/^c0100368:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
c010036b	kernel.asm	/^c010036b:	e8 c0 13 00 00       	call   c0101730 <sleep>$/;"	l
c0100370	kernel.asm	/^c0100370:	eb c0                	jmp    c0100332 <P+0x22>$/;"	l
c0100372	kernel.asm	/^c0100372:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0100378	kernel.asm	/^c0100378:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010037b	kernel.asm	/^c010037b:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c010037e	kernel.asm	/^c010037e:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c0100385	kernel.asm	/^c0100385:	00 $/;"	l
c0100386	kernel.asm	/^c0100386:	c7 04 24 9b 18 10 c0 	movl   $0xc010189b,(%esp)$/;"	l
c010038d	kernel.asm	/^c010038d:	e8 1e fe ff ff       	call   c01001b0 <abort>$/;"	l
c0100392	kernel.asm	/^c0100392:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0100395	kernel.asm	/^c0100395:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100398	kernel.asm	/^c0100398:	eb c1                	jmp    c010035b <P+0x4b>$/;"	l
c010039a	kernel.asm	/^c010039a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c01003a0	kernel.asm	/^c01003a0 <V>:$/;"	l
c01003a0	kernel.asm	/^c01003a0:	55                   	push   %ebp$/;"	l
c01003a1	kernel.asm	/^c01003a1:	89 e5                	mov    %esp,%ebp$/;"	l
c01003a3	kernel.asm	/^c01003a3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01003a6	kernel.asm	/^c01003a6:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
c01003a9	kernel.asm	/^c01003a9:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
c01003ac	kernel.asm	/^c01003ac:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
c01003af	kernel.asm	/^c01003af:	e8 4c fe ff ff       	call   c0100200 <lock>$/;"	l
c01003b4	kernel.asm	/^c01003b4:	8b 03                	mov    (%ebx),%eax$/;"	l
c01003b6	kernel.asm	/^c01003b6:	83 c0 01             	add    $0x1,%eax$/;"	l
c01003b9	kernel.asm	/^c01003b9:	85 c0                	test   %eax,%eax$/;"	l
c01003bb	kernel.asm	/^c01003bb:	89 03                	mov    %eax,(%ebx)$/;"	l
c01003bd	kernel.asm	/^c01003bd:	7e 11                	jle    c01003d0 <V+0x30>$/;"	l
c01003bf	kernel.asm	/^c01003bf:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
c01003c2	kernel.asm	/^c01003c2:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
c01003c5	kernel.asm	/^c01003c5:	89 ec                	mov    %ebp,%esp$/;"	l
c01003c7	kernel.asm	/^c01003c7:	5d                   	pop    %ebp$/;"	l
c01003c8	kernel.asm	/^c01003c8:	e9 c3 fe ff ff       	jmp    c0100290 <unlock>$/;"	l
c01003cd	kernel.asm	/^c01003cd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c01003d0	kernel.asm	/^c01003d0:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
c01003d3	kernel.asm	/^c01003d3:	8d 43 04             	lea    0x4(%ebx),%eax$/;"	l
c01003d6	kernel.asm	/^c01003d6:	39 c6                	cmp    %eax,%esi$/;"	l
c01003d8	kernel.asm	/^c01003d8:	74 36                	je     c0100410 <V+0x70>$/;"	l
c01003da	kernel.asm	/^c01003da:	85 f6                	test   %esi,%esi$/;"	l
c01003dc	kernel.asm	/^c01003dc:	8d 5e f4             	lea    -0xc(%esi),%ebx$/;"	l
c01003df	kernel.asm	/^c01003df:	74 4f                	je     c0100430 <V+0x90>$/;"	l
c01003e1	kernel.asm	/^c01003e1:	8b 16                	mov    (%esi),%edx$/;"	l
c01003e3	kernel.asm	/^c01003e3:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
c01003e6	kernel.asm	/^c01003e6:	85 d2                	test   %edx,%edx$/;"	l
c01003e8	kernel.asm	/^c01003e8:	74 03                	je     c01003ed <V+0x4d>$/;"	l
c01003ea	kernel.asm	/^c01003ea:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c01003ed	kernel.asm	/^c01003ed:	85 c0                	test   %eax,%eax$/;"	l
c01003ef	kernel.asm	/^c01003ef:	74 02                	je     c01003f3 <V+0x53>$/;"	l
c01003f1	kernel.asm	/^c01003f1:	89 10                	mov    %edx,(%eax)$/;"	l
c01003f3	kernel.asm	/^c01003f3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c01003f6	kernel.asm	/^c01003f6:	e8 d5 12 00 00       	call   c01016d0 <wakeup>$/;"	l
c01003fb	kernel.asm	/^c01003fb:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
c01003fe	kernel.asm	/^c01003fe:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
c0100401	kernel.asm	/^c0100401:	89 ec                	mov    %ebp,%esp$/;"	l
c0100403	kernel.asm	/^c0100403:	5d                   	pop    %ebp$/;"	l
c0100404	kernel.asm	/^c0100404:	e9 87 fe ff ff       	jmp    c0100290 <unlock>$/;"	l
c0100409	kernel.asm	/^c0100409:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100410	kernel.asm	/^c0100410:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)$/;"	l
c0100417	kernel.asm	/^c0100417:	00 $/;"	l
c0100418	kernel.asm	/^c0100418:	c7 04 24 8c 18 10 c0 	movl   $0xc010188c,(%esp)$/;"	l
c010041f	kernel.asm	/^c010041f:	e8 8c fd ff ff       	call   c01001b0 <abort>$/;"	l
c0100424	kernel.asm	/^c0100424:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
c0100427	kernel.asm	/^c0100427:	eb b1                	jmp    c01003da <V+0x3a>$/;"	l
c0100429	kernel.asm	/^c0100429:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100430	kernel.asm	/^c0100430:	c7 44 24 04 23 00 00 	movl   $0x23,0x4(%esp)$/;"	l
c0100437	kernel.asm	/^c0100437:	00 $/;"	l
c0100438	kernel.asm	/^c0100438:	c7 04 24 9b 18 10 c0 	movl   $0xc010189b,(%esp)$/;"	l
c010043f	kernel.asm	/^c010043f:	e8 6c fd ff ff       	call   c01001b0 <abort>$/;"	l
c0100444	kernel.asm	/^c0100444:	eb 9b                	jmp    c01003e1 <V+0x41>$/;"	l
c0100446	kernel.asm	/^c0100446:	90                   	nop$/;"	l
c0100447	kernel.asm	/^c0100447:	90                   	nop$/;"	l
c0100448	kernel.asm	/^c0100448:	90                   	nop$/;"	l
c0100449	kernel.asm	/^c0100449:	90                   	nop$/;"	l
c010044a	kernel.asm	/^c010044a:	90                   	nop$/;"	l
c010044b	kernel.asm	/^c010044b:	90                   	nop$/;"	l
c010044c	kernel.asm	/^c010044c:	90                   	nop$/;"	l
c010044d	kernel.asm	/^c010044d:	90                   	nop$/;"	l
c010044e	kernel.asm	/^c010044e:	90                   	nop$/;"	l
c010044f	kernel.asm	/^c010044f:	90                   	nop$/;"	l
c0100450	kernel.asm	/^c0100450 <get_bucket>:$/;"	l
c0100450	kernel.asm	/^c0100450:	55                   	push   %ebp$/;"	l
c0100451	kernel.asm	/^c0100451:	89 e5                	mov    %esp,%ebp$/;"	l
c0100453	kernel.asm	/^c0100453:	56                   	push   %esi$/;"	l
c0100454	kernel.asm	/^c0100454:	53                   	push   %ebx$/;"	l
c0100455	kernel.asm	/^c0100455:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100458	kernel.asm	/^c0100458:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
c010045b	kernel.asm	/^c010045b:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
c010045e	kernel.asm	/^c010045e:	3d ff 3f 00 00       	cmp    $0x3fff,%eax$/;"	l
c0100463	kernel.asm	/^c0100463:	77 6b                	ja     c01004d0 <get_bucket+0x80>$/;"	l
c0100465	kernel.asm	/^c0100465:	31 c0                	xor    %eax,%eax$/;"	l
c0100467	kernel.asm	/^c0100467:	83 fb 08             	cmp    $0x8,%ebx$/;"	l
c010046a	kernel.asm	/^c010046a:	76 5d                	jbe    c01004c9 <get_bucket+0x79>$/;"	l
c010046c	kernel.asm	/^c010046c:	89 da                	mov    %ebx,%edx$/;"	l
c010046e	kernel.asm	/^c010046e:	b0 01                	mov    $0x1,%al$/;"	l
c0100470	kernel.asm	/^c0100470:	c1 ea 10             	shr    $0x10,%edx$/;"	l
c0100473	kernel.asm	/^c0100473:	85 d2                	test   %edx,%edx$/;"	l
c0100475	kernel.asm	/^c0100475:	75 05                	jne    c010047c <get_bucket+0x2c>$/;"	l
c0100477	kernel.asm	/^c0100477:	c1 e3 10             	shl    $0x10,%ebx$/;"	l
c010047a	kernel.asm	/^c010047a:	b0 11                	mov    $0x11,%al$/;"	l
c010047c	kernel.asm	/^c010047c:	89 da                	mov    %ebx,%edx$/;"	l
c010047e	kernel.asm	/^c010047e:	c1 ea 18             	shr    $0x18,%edx$/;"	l
c0100481	kernel.asm	/^c0100481:	85 d2                	test   %edx,%edx$/;"	l
c0100483	kernel.asm	/^c0100483:	75 06                	jne    c010048b <get_bucket+0x3b>$/;"	l
c0100485	kernel.asm	/^c0100485:	83 c0 08             	add    $0x8,%eax$/;"	l
c0100488	kernel.asm	/^c0100488:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
c010048b	kernel.asm	/^c010048b:	89 da                	mov    %ebx,%edx$/;"	l
c010048d	kernel.asm	/^c010048d:	c1 ea 1c             	shr    $0x1c,%edx$/;"	l
c0100490	kernel.asm	/^c0100490:	85 d2                	test   %edx,%edx$/;"	l
c0100492	kernel.asm	/^c0100492:	75 06                	jne    c010049a <get_bucket+0x4a>$/;"	l
c0100494	kernel.asm	/^c0100494:	83 c0 04             	add    $0x4,%eax$/;"	l
c0100497	kernel.asm	/^c0100497:	c1 e3 04             	shl    $0x4,%ebx$/;"	l
c010049a	kernel.asm	/^c010049a:	89 da                	mov    %ebx,%edx$/;"	l
c010049c	kernel.asm	/^c010049c:	c1 ea 1e             	shr    $0x1e,%edx$/;"	l
c010049f	kernel.asm	/^c010049f:	85 d2                	test   %edx,%edx$/;"	l
c01004a1	kernel.asm	/^c01004a1:	75 06                	jne    c01004a9 <get_bucket+0x59>$/;"	l
c01004a3	kernel.asm	/^c01004a3:	83 c0 02             	add    $0x2,%eax$/;"	l
c01004a6	kernel.asm	/^c01004a6:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
c01004a9	kernel.asm	/^c01004a9:	89 de                	mov    %ebx,%esi$/;"	l
c01004ab	kernel.asm	/^c01004ab:	b9 1f 00 00 00       	mov    $0x1f,%ecx$/;"	l
c01004b0	kernel.asm	/^c01004b0:	c1 fe 1f             	sar    $0x1f,%esi$/;"	l
c01004b3	kernel.asm	/^c01004b3:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c01004b8	kernel.asm	/^c01004b8:	01 c6                	add    %eax,%esi$/;"	l
c01004ba	kernel.asm	/^c01004ba:	b8 1d 00 00 00       	mov    $0x1d,%eax$/;"	l
c01004bf	kernel.asm	/^c01004bf:	29 f1                	sub    %esi,%ecx$/;"	l
c01004c1	kernel.asm	/^c01004c1:	29 f0                	sub    %esi,%eax$/;"	l
c01004c3	kernel.asm	/^c01004c3:	d3 e2                	shl    %cl,%edx$/;"	d
c01004c5	kernel.asm	/^c01004c5:	39 da                	cmp    %ebx,%edx$/;"	l
c01004c7	kernel.asm	/^c01004c7:	74 27                	je     c01004f0 <get_bucket+0xa0>$/;"	l
c01004c9	kernel.asm	/^c01004c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01004cc	kernel.asm	/^c01004cc:	5b                   	pop    %ebx$/;"	l
c01004cd	kernel.asm	/^c01004cd:	5e                   	pop    %esi$/;"	l
c01004ce	kernel.asm	/^c01004ce:	5d                   	pop    %ebp$/;"	l
c01004cf	kernel.asm	/^c01004cf:	c3                   	ret    $/;"	l
c01004d0	kernel.asm	/^c01004d0:	c7 44 24 04 25 00 00 	movl   $0x25,0x4(%esp)$/;"	l
c01004d7	kernel.asm	/^c01004d7:	00 $/;"	l
c01004d8	kernel.asm	/^c01004d8:	c7 04 24 b0 18 10 c0 	movl   $0xc01018b0,(%esp)$/;"	l
c01004df	kernel.asm	/^c01004df:	e8 cc fc ff ff       	call   c01001b0 <abort>$/;"	l
c01004e4	kernel.asm	/^c01004e4:	e9 7c ff ff ff       	jmp    c0100465 <get_bucket+0x15>$/;"	l
c01004e9	kernel.asm	/^c01004e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c01004f0	kernel.asm	/^c01004f0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01004f3	kernel.asm	/^c01004f3:	b8 1c 00 00 00       	mov    $0x1c,%eax$/;"	l
c01004f8	kernel.asm	/^c01004f8:	29 f0                	sub    %esi,%eax$/;"	l
c01004fa	kernel.asm	/^c01004fa:	5b                   	pop    %ebx$/;"	l
c01004fb	kernel.asm	/^c01004fb:	5e                   	pop    %esi$/;"	l
c01004fc	kernel.asm	/^c01004fc:	5d                   	pop    %ebp$/;"	l
c01004fd	kernel.asm	/^c01004fd:	c3                   	ret    $/;"	l
c01004fe	kernel.asm	/^c01004fe:	66 90                	xchg   %ax,%ax$/;"	l
c0100500	kernel.asm	/^c0100500 <page_init>:$/;"	l
c0100500	kernel.asm	/^c0100500:	55                   	push   %ebp$/;"	l
c0100501	kernel.asm	/^c0100501:	b9 03 00 00 00       	mov    $0x3,%ecx$/;"	l
c0100506	kernel.asm	/^c0100506:	89 e5                	mov    %esp,%ebp$/;"	l
c0100508	kernel.asm	/^c0100508:	b8 20 31 10 c0       	mov    $0xc0103120,%eax$/;"	l
c010050d	kernel.asm	/^c010050d:	57                   	push   %edi$/;"	l
c010050e	kernel.asm	/^c010050e:	56                   	push   %esi$/;"	l
c010050f	kernel.asm	/^c010050f:	53                   	push   %ebx$/;"	l
c0100510	kernel.asm	/^c0100510:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
c0100515	kernel.asm	/^c0100515:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c0100518	kernel.asm	/^c0100518:	89 da                	mov    %ebx,%edx$/;"	l
c010051a	kernel.asm	/^c010051a:	be 64 00 00 00       	mov    $0x64,%esi$/;"	l
c010051f	kernel.asm	/^c010051f:	d3 e2                	shl    %cl,%edx$/;"	d
c0100521	kernel.asm	/^c0100521:	d3 e6                	shl    %cl,%esi$/;"	d
c0100523	kernel.asm	/^c0100523:	83 c2 08             	add    $0x8,%edx$/;"	l
c0100526	kernel.asm	/^c0100526:	8d bc 30 20 03 00 00 	lea    0x320(%eax,%esi,1),%edi$/;"	l
c010052d	kernel.asm	/^c010052d:	89 d6                	mov    %edx,%esi$/;"	l
c010052f	kernel.asm	/^c010052f:	89 04 8d 74 30 10 c0 	mov    %eax,-0x3fefcf8c(,%ecx,4)$/;"	l
c0100536	kernel.asm	/^c0100536:	f7 de                	neg    %esi$/;"	l
c0100538	kernel.asm	/^c0100538:	c7 04 8d b4 30 10 c0 	movl   $0x64,-0x3fefcf4c(,%ecx,4)$/;"	l
c010053f	kernel.asm	/^c010053f:	64 00 00 00 $/;"	l
c0100543	kernel.asm	/^c0100543:	90                   	nop$/;"	l
c0100544	kernel.asm	/^c0100544:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100548	kernel.asm	/^c0100548:	01 d0                	add    %edx,%eax$/;"	l
c010054a	kernel.asm	/^c010054a:	39 c7                	cmp    %eax,%edi$/;"	l
c010054c	kernel.asm	/^c010054c:	89 04 30             	mov    %eax,(%eax,%esi,1)$/;"	l
c010054f	kernel.asm	/^c010054f:	77 f7                	ja     c0100548 <page_init+0x48>$/;"	l
c0100551	kernel.asm	/^c0100551:	83 c1 01             	add    $0x1,%ecx$/;"	l
c0100554	kernel.asm	/^c0100554:	83 f9 0f             	cmp    $0xf,%ecx$/;"	l
c0100557	kernel.asm	/^c0100557:	75 bf                	jne    c0100518 <page_init+0x18>$/;"	l
c0100559	kernel.asm	/^c0100559:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010055f	kernel.asm	/^c010055f:	5b                   	pop    %ebx$/;"	l
c0100560	kernel.asm	/^c0100560:	5e                   	pop    %esi$/;"	l
c0100561	kernel.asm	/^c0100561:	5f                   	pop    %edi$/;"	l
c0100562	kernel.asm	/^c0100562:	5d                   	pop    %ebp$/;"	l
c0100563	kernel.asm	/^c0100563:	c3                   	ret    $/;"	l
c0100564	kernel.asm	/^c0100564:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c010056a	kernel.asm	/^c010056a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi$/;"	l
c0100570	kernel.asm	/^c0100570 <malloc>:$/;"	l
c0100570	kernel.asm	/^c0100570:	55                   	push   %ebp$/;"	l
c0100571	kernel.asm	/^c0100571:	89 e5                	mov    %esp,%ebp$/;"	l
c0100573	kernel.asm	/^c0100573:	56                   	push   %esi$/;"	l
c0100574	kernel.asm	/^c0100574:	53                   	push   %ebx$/;"	l
c0100575	kernel.asm	/^c0100575:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100578	kernel.asm	/^c0100578:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
c010057b	kernel.asm	/^c010057b:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
c010057e	kernel.asm	/^c010057e:	3d ff 3f 00 00       	cmp    $0x3fff,%eax$/;"	l
c0100583	kernel.asm	/^c0100583:	77 53                	ja     c01005d8 <malloc+0x68>$/;"	l
c0100585	kernel.asm	/^c0100585:	80 3d f0 30 10 c0 00 	cmpb   $0x0,0xc01030f0$/;"	l
c010058c	kernel.asm	/^c010058c:	74 67                	je     c01005f5 <malloc+0x85>$/;"	l
c010058e	kernel.asm	/^c010058e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0100591	kernel.asm	/^c0100591:	e8 ba fe ff ff       	call   c0100450 <get_bucket>$/;"	l
c0100596	kernel.asm	/^c0100596:	83 f8 0b             	cmp    $0xb,%eax$/;"	l
c0100599	kernel.asm	/^c0100599:	89 c3                	mov    %eax,%ebx$/;"	l
c010059b	kernel.asm	/^c010059b:	77 73                	ja     c0100610 <malloc+0xa0>$/;"	l
c010059d	kernel.asm	/^c010059d:	8b 14 9d c0 30 10 c0 	mov    -0x3fefcf40(,%ebx,4),%edx$/;"	l
c01005a4	kernel.asm	/^c01005a4:	31 c0                	xor    %eax,%eax$/;"	l
c01005a6	kernel.asm	/^c01005a6:	85 d2                	test   %edx,%edx$/;"	l
c01005a8	kernel.asm	/^c01005a8:	74 27                	je     c01005d1 <malloc+0x61>$/;"	l
c01005aa	kernel.asm	/^c01005aa:	8b 34 9d 80 30 10 c0 	mov    -0x3fefcf80(,%ebx,4),%esi$/;"	l
c01005b1	kernel.asm	/^c01005b1:	83 ea 01             	sub    $0x1,%edx$/;"	l
c01005b4	kernel.asm	/^c01005b4:	89 14 9d c0 30 10 c0 	mov    %edx,-0x3fefcf40(,%ebx,4)$/;"	l
c01005bb	kernel.asm	/^c01005bb:	85 f6                	test   %esi,%esi$/;"	l
c01005bd	kernel.asm	/^c01005bd:	74 71                	je     c0100630 <malloc+0xc0>$/;"	l
c01005bf	kernel.asm	/^c01005bf:	8b 06                	mov    (%esi),%eax$/;"	l
c01005c1	kernel.asm	/^c01005c1:	89 04 9d 80 30 10 c0 	mov    %eax,-0x3fefcf80(,%ebx,4)$/;"	l
c01005c8	kernel.asm	/^c01005c8:	8d 46 08             	lea    0x8(%esi),%eax$/;"	l
c01005cb	kernel.asm	/^c01005cb:	c6 06 ef             	movb   $0xef,(%esi)$/;"	l
c01005ce	kernel.asm	/^c01005ce:	89 5e 04             	mov    %ebx,0x4(%esi)$/;"	l
c01005d1	kernel.asm	/^c01005d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01005d4	kernel.asm	/^c01005d4:	5b                   	pop    %ebx$/;"	l
c01005d5	kernel.asm	/^c01005d5:	5e                   	pop    %esi$/;"	l
c01005d6	kernel.asm	/^c01005d6:	5d                   	pop    %ebp$/;"	l
c01005d7	kernel.asm	/^c01005d7:	c3                   	ret    $/;"	l
c01005d8	kernel.asm	/^c01005d8:	c7 44 24 04 46 00 00 	movl   $0x46,0x4(%esp)$/;"	l
c01005df	kernel.asm	/^c01005df:	00 $/;"	l
c01005e0	kernel.asm	/^c01005e0:	c7 04 24 b0 18 10 c0 	movl   $0xc01018b0,(%esp)$/;"	l
c01005e7	kernel.asm	/^c01005e7:	e8 c4 fb ff ff       	call   c01001b0 <abort>$/;"	l
c01005ec	kernel.asm	/^c01005ec:	80 3d f0 30 10 c0 00 	cmpb   $0x0,0xc01030f0$/;"	l
c01005f3	kernel.asm	/^c01005f3:	75 99                	jne    c010058e <malloc+0x1e>$/;"	l
c01005f5	kernel.asm	/^c01005f5:	e8 06 ff ff ff       	call   c0100500 <page_init>$/;"	l
c01005fa	kernel.asm	/^c01005fa:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c01005fd	kernel.asm	/^c01005fd:	c6 05 f0 30 10 c0 01 	movb   $0x1,0xc01030f0$/;"	l
c0100604	kernel.asm	/^c0100604:	e8 47 fe ff ff       	call   c0100450 <get_bucket>$/;"	l
c0100609	kernel.asm	/^c0100609:	83 f8 0b             	cmp    $0xb,%eax$/;"	l
c010060c	kernel.asm	/^c010060c:	89 c3                	mov    %eax,%ebx$/;"	l
c010060e	kernel.asm	/^c010060e:	76 8d                	jbe    c010059d <malloc+0x2d>$/;"	l
c0100610	kernel.asm	/^c0100610:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
c0100617	kernel.asm	/^c0100617:	00 $/;"	l
c0100618	kernel.asm	/^c0100618:	c7 04 24 b0 18 10 c0 	movl   $0xc01018b0,(%esp)$/;"	l
c010061f	kernel.asm	/^c010061f:	e8 8c fb ff ff       	call   c01001b0 <abort>$/;"	l
c0100624	kernel.asm	/^c0100624:	e9 74 ff ff ff       	jmp    c010059d <malloc+0x2d>$/;"	l
c0100629	kernel.asm	/^c0100629:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100630	kernel.asm	/^c0100630:	c7 44 24 04 5b 00 00 	movl   $0x5b,0x4(%esp)$/;"	l
c0100637	kernel.asm	/^c0100637:	00 $/;"	l
c0100638	kernel.asm	/^c0100638:	c7 04 24 b0 18 10 c0 	movl   $0xc01018b0,(%esp)$/;"	l
c010063f	kernel.asm	/^c010063f:	e8 6c fb ff ff       	call   c01001b0 <abort>$/;"	l
c0100644	kernel.asm	/^c0100644:	e9 76 ff ff ff       	jmp    c01005bf <malloc+0x4f>$/;"	l
c0100649	kernel.asm	/^c0100649:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100650	kernel.asm	/^c0100650 <free>:$/;"	l
c0100650	kernel.asm	/^c0100650:	55                   	push   %ebp$/;"	l
c0100651	kernel.asm	/^c0100651:	89 e5                	mov    %esp,%ebp$/;"	l
c0100653	kernel.asm	/^c0100653:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100656	kernel.asm	/^c0100656:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
c0100659	kernel.asm	/^c0100659:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
c010065c	kernel.asm	/^c010065c:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
c010065f	kernel.asm	/^c010065f:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
c0100662	kernel.asm	/^c0100662:	80 7e f8 ef          	cmpb   $0xef,-0x8(%esi)$/;"	l
c0100666	kernel.asm	/^c0100666:	8d 7e f8             	lea    -0x8(%esi),%edi$/;"	l
c0100669	kernel.asm	/^c0100669:	74 14                	je     c010067f <free+0x2f>$/;"	l
c010066b	kernel.asm	/^c010066b:	c7 44 24 04 69 00 00 	movl   $0x69,0x4(%esp)$/;"	l
c0100672	kernel.asm	/^c0100672:	00 $/;"	l
c0100673	kernel.asm	/^c0100673:	c7 04 24 b0 18 10 c0 	movl   $0xc01018b0,(%esp)$/;"	l
c010067a	kernel.asm	/^c010067a:	e8 31 fb ff ff       	call   c01001b0 <abort>$/;"	l
c010067f	kernel.asm	/^c010067f:	8b 5e fc             	mov    -0x4(%esi),%ebx$/;"	l
c0100682	kernel.asm	/^c0100682:	8b 04 9d c0 30 10 c0 	mov    -0x3fefcf40(,%ebx,4),%eax$/;"	l
c0100689	kernel.asm	/^c0100689:	83 f8 63             	cmp    $0x63,%eax$/;"	l
c010068c	kernel.asm	/^c010068c:	76 1b                	jbe    c01006a9 <free+0x59>$/;"	l
c010068e	kernel.asm	/^c010068e:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
c0100695	kernel.asm	/^c0100695:	00 $/;"	l
c0100696	kernel.asm	/^c0100696:	c7 04 24 b0 18 10 c0 	movl   $0xc01018b0,(%esp)$/;"	l
c010069d	kernel.asm	/^c010069d:	e8 0e fb ff ff       	call   c01001b0 <abort>$/;"	l
c01006a2	kernel.asm	/^c01006a2:	8b 04 9d c0 30 10 c0 	mov    -0x3fefcf40(,%ebx,4),%eax$/;"	l
c01006a9	kernel.asm	/^c01006a9:	83 c0 01             	add    $0x1,%eax$/;"	l
c01006ac	kernel.asm	/^c01006ac:	89 04 9d c0 30 10 c0 	mov    %eax,-0x3fefcf40(,%ebx,4)$/;"	l
c01006b3	kernel.asm	/^c01006b3:	8b 04 9d 80 30 10 c0 	mov    -0x3fefcf80(,%ebx,4),%eax$/;"	l
c01006ba	kernel.asm	/^c01006ba:	89 46 f8             	mov    %eax,-0x8(%esi)$/;"	l
c01006bd	kernel.asm	/^c01006bd:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
c01006c0	kernel.asm	/^c01006c0:	89 3c 9d 80 30 10 c0 	mov    %edi,-0x3fefcf80(,%ebx,4)$/;"	l
c01006c7	kernel.asm	/^c01006c7:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
c01006ca	kernel.asm	/^c01006ca:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
c01006cd	kernel.asm	/^c01006cd:	89 ec                	mov    %ebp,%esp$/;"	l
c01006cf	kernel.asm	/^c01006cf:	5d                   	pop    %ebp$/;"	l
c01006d0	kernel.asm	/^c01006d0:	c3                   	ret    $/;"	l
c01006d1	kernel.asm	/^c01006d1:	90                   	nop$/;"	l
c01006d2	kernel.asm	/^c01006d2:	90                   	nop$/;"	l
c01006d3	kernel.asm	/^c01006d3:	90                   	nop$/;"	l
c01006d4	kernel.asm	/^c01006d4:	90                   	nop$/;"	l
c01006d5	kernel.asm	/^c01006d5:	90                   	nop$/;"	l
c01006d6	kernel.asm	/^c01006d6:	90                   	nop$/;"	l
c01006d7	kernel.asm	/^c01006d7:	90                   	nop$/;"	l
c01006d8	kernel.asm	/^c01006d8:	90                   	nop$/;"	l
c01006d9	kernel.asm	/^c01006d9:	90                   	nop$/;"	l
c01006da	kernel.asm	/^c01006da:	90                   	nop$/;"	l
c01006db	kernel.asm	/^c01006db:	90                   	nop$/;"	l
c01006dc	kernel.asm	/^c01006dc:	90                   	nop$/;"	l
c01006dd	kernel.asm	/^c01006dd:	90                   	nop$/;"	l
c01006de	kernel.asm	/^c01006de:	90                   	nop$/;"	l
c01006df	kernel.asm	/^c01006df:	90                   	nop$/;"	l
c01006e0	kernel.asm	/^c01006e0 <vfprintf>:$/;"	l
c01006e0	kernel.asm	/^c01006e0:	55                   	push   %ebp$/;"	l
c01006e1	kernel.asm	/^c01006e1:	89 e5                	mov    %esp,%ebp$/;"	l
c01006e3	kernel.asm	/^c01006e3:	57                   	push   %edi$/;"	l
c01006e4	kernel.asm	/^c01006e4:	31 ff                	xor    %edi,%edi$/;"	l
c01006e6	kernel.asm	/^c01006e6:	56                   	push   %esi$/;"	l
c01006e7	kernel.asm	/^c01006e7:	53                   	push   %ebx$/;"	l
c01006e8	kernel.asm	/^c01006e8:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
c01006eb	kernel.asm	/^c01006eb:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
c01006ee	kernel.asm	/^c01006ee:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c01006f1	kernel.asm	/^c01006f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c01006f8	kernel.asm	/^c01006f8:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
c01006fb	kernel.asm	/^c01006fb:	84 c0                	test   %al,%al$/;"	l
c01006fd	kernel.asm	/^c01006fd:	74 19                	je     c0100718 <vfprintf+0x38>$/;"	l
c01006ff	kernel.asm	/^c01006ff:	3c 25                	cmp    $0x25,%al$/;"	l
c0100701	kernel.asm	/^c0100701:	74 25                	je     c0100728 <vfprintf+0x48>$/;"	l
c0100703	kernel.asm	/^c0100703:	0f be c0             	movsbl %al,%eax$/;"	l
c0100706	kernel.asm	/^c0100706:	83 c3 01             	add    $0x1,%ebx$/;"	l
c0100709	kernel.asm	/^c0100709:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010070c	kernel.asm	/^c010070c:	83 c7 01             	add    $0x1,%edi$/;"	l
c010070f	kernel.asm	/^c010070f:	ff d6                	call   *%esi$/;"	l
c0100711	kernel.asm	/^c0100711:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
c0100714	kernel.asm	/^c0100714:	84 c0                	test   %al,%al$/;"	l
c0100716	kernel.asm	/^c0100716:	75 e7                	jne    c01006ff <vfprintf+0x1f>$/;"	l
c0100718	kernel.asm	/^c0100718:	83 c4 2c             	add    $0x2c,%esp$/;"	l
c010071b	kernel.asm	/^c010071b:	89 f8                	mov    %edi,%eax$/;"	l
c010071d	kernel.asm	/^c010071d:	5b                   	pop    %ebx$/;"	l
c010071e	kernel.asm	/^c010071e:	5e                   	pop    %esi$/;"	l
c010071f	kernel.asm	/^c010071f:	5f                   	pop    %edi$/;"	l
c0100720	kernel.asm	/^c0100720:	5d                   	pop    %ebp$/;"	l
c0100721	kernel.asm	/^c0100721:	c3                   	ret    $/;"	l
c0100722	kernel.asm	/^c0100722:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0100728	kernel.asm	/^c0100728:	0f b6 43 01          	movzbl 0x1(%ebx),%eax$/;"	l
c010072c	kernel.asm	/^c010072c:	83 c3 02             	add    $0x2,%ebx$/;"	l
c010072f	kernel.asm	/^c010072f:	84 c0                	test   %al,%al$/;"	l
c0100731	kernel.asm	/^c0100731:	74 55                	je     c0100788 <vfprintf+0xa8>$/;"	l
c0100733	kernel.asm	/^c0100733:	3c 73                	cmp    $0x73,%al$/;"	l
c0100735	kernel.asm	/^c0100735:	0f 84 b5 01 00 00    	je     c01008f0 <vfprintf+0x210>$/;"	l
c010073b	kernel.asm	/^c010073b:	7f 63                	jg     c01007a0 <vfprintf+0xc0>$/;"	l
c010073d	kernel.asm	/^c010073d:	3c 63                	cmp    $0x63,%al$/;"	l
c010073f	kernel.asm	/^c010073f:	90                   	nop$/;"	l
c0100740	kernel.asm	/^c0100740:	0f 84 22 01 00 00    	je     c0100868 <vfprintf+0x188>$/;"	l
c0100746	kernel.asm	/^c0100746:	3c 64                	cmp    $0x64,%al$/;"	l
c0100748	kernel.asm	/^c0100748:	0f 84 42 01 00 00    	je     c0100890 <vfprintf+0x1b0>$/;"	l
c010074e	kernel.asm	/^c010074e:	3c 25                	cmp    $0x25,%al$/;"	l
c0100750	kernel.asm	/^c0100750:	74 1e                	je     c0100770 <vfprintf+0x90>$/;"	l
c0100752	kernel.asm	/^c0100752:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0100758	kernel.asm	/^c0100758:	c7 44 24 04 2d 00 00 	movl   $0x2d,0x4(%esp)$/;"	l
c010075f	kernel.asm	/^c010075f:	00 $/;"	l
c0100760	kernel.asm	/^c0100760:	c7 04 24 c1 18 10 c0 	movl   $0xc01018c1,(%esp)$/;"	l
c0100767	kernel.asm	/^c0100767:	e8 44 fa ff ff       	call   c01001b0 <abort>$/;"	l
c010076c	kernel.asm	/^c010076c:	eb 8a                	jmp    c01006f8 <vfprintf+0x18>$/;"	l
c010076e	kernel.asm	/^c010076e:	66 90                	xchg   %ax,%ax$/;"	l
c0100770	kernel.asm	/^c0100770:	83 c7 01             	add    $0x1,%edi$/;"	l
c0100773	kernel.asm	/^c0100773:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
c010077a	kernel.asm	/^c010077a:	ff d6                	call   *%esi$/;"	l
c010077c	kernel.asm	/^c010077c:	e9 77 ff ff ff       	jmp    c01006f8 <vfprintf+0x18>$/;"	l
c0100781	kernel.asm	/^c0100781:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100788	kernel.asm	/^c0100788:	c7 44 24 04 22 00 00 	movl   $0x22,0x4(%esp)$/;"	l
c010078f	kernel.asm	/^c010078f:	00 $/;"	l
c0100790	kernel.asm	/^c0100790:	c7 04 24 c1 18 10 c0 	movl   $0xc01018c1,(%esp)$/;"	l
c0100797	kernel.asm	/^c0100797:	e8 14 fa ff ff       	call   c01001b0 <abort>$/;"	l
c010079c	kernel.asm	/^c010079c:	eb ba                	jmp    c0100758 <vfprintf+0x78>$/;"	l
c010079e	kernel.asm	/^c010079e:	66 90                	xchg   %ax,%ax$/;"	l
c01007a0	kernel.asm	/^c01007a0:	3c 75                	cmp    $0x75,%al$/;"	l
c01007a2	kernel.asm	/^c01007a2:	74 64                	je     c0100808 <vfprintf+0x128>$/;"	l
c01007a4	kernel.asm	/^c01007a4:	3c 78                	cmp    $0x78,%al$/;"	l
c01007a6	kernel.asm	/^c01007a6:	75 b0                	jne    c0100758 <vfprintf+0x78>$/;"	l
c01007a8	kernel.asm	/^c01007a8:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01007ab	kernel.asm	/^c01007ab:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c01007ae	kernel.asm	/^c01007ae:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c01007b5	kernel.asm	/^c01007b5:	00 $/;"	l
c01007b6	kernel.asm	/^c01007b6:	8b 02                	mov    (%edx),%eax$/;"	l
c01007b8	kernel.asm	/^c01007b8:	83 c1 04             	add    $0x4,%ecx$/;"	l
c01007bb	kernel.asm	/^c01007bb:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
c01007be	kernel.asm	/^c01007be:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01007c1	kernel.asm	/^c01007c1:	e8 ba f9 ff ff       	call   c0100180 <utoa>$/;"	l
c01007c6	kernel.asm	/^c01007c6:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c01007c9	kernel.asm	/^c01007c9:	89 4d 10             	mov    %ecx,0x10(%ebp)$/;"	l
c01007cc	kernel.asm	/^c01007cc:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c01007cf	kernel.asm	/^c01007cf:	84 d2                	test   %dl,%dl$/;"	l
c01007d1	kernel.asm	/^c01007d1:	0f 84 21 ff ff ff    	je     c01006f8 <vfprintf+0x18>$/;"	l
c01007d7	kernel.asm	/^c01007d7:	29 f8                	sub    %edi,%eax$/;"	l
c01007d9	kernel.asm	/^c01007d9:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
c01007dc	kernel.asm	/^c01007dc:	89 c3                	mov    %eax,%ebx$/;"	l
c01007de	kernel.asm	/^c01007de:	66 90                	xchg   %ax,%ax$/;"	l
c01007e0	kernel.asm	/^c01007e0:	0f be d2             	movsbl %dl,%edx$/;"	l
c01007e3	kernel.asm	/^c01007e3:	83 c7 01             	add    $0x1,%edi$/;"	l
c01007e6	kernel.asm	/^c01007e6:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01007e9	kernel.asm	/^c01007e9:	ff d6                	call   *%esi$/;"	l
c01007eb	kernel.asm	/^c01007eb:	0f b6 14 3b          	movzbl (%ebx,%edi,1),%edx$/;"	l
c01007ef	kernel.asm	/^c01007ef:	84 d2                	test   %dl,%dl$/;"	l
c01007f1	kernel.asm	/^c01007f1:	75 ed                	jne    c01007e0 <vfprintf+0x100>$/;"	l
c01007f3	kernel.asm	/^c01007f3:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01007f6	kernel.asm	/^c01007f6:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
c01007f9	kernel.asm	/^c01007f9:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c01007fc	kernel.asm	/^c01007fc:	e9 f7 fe ff ff       	jmp    c01006f8 <vfprintf+0x18>$/;"	l
c0100801	kernel.asm	/^c0100801:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100808	kernel.asm	/^c0100808:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010080b	kernel.asm	/^c010080b:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c010080e	kernel.asm	/^c010080e:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c0100815	kernel.asm	/^c0100815:	00 $/;"	l
c0100816	kernel.asm	/^c0100816:	8b 02                	mov    (%edx),%eax$/;"	l
c0100818	kernel.asm	/^c0100818:	83 c1 04             	add    $0x4,%ecx$/;"	l
c010081b	kernel.asm	/^c010081b:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
c010081e	kernel.asm	/^c010081e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100821	kernel.asm	/^c0100821:	e8 5a f9 ff ff       	call   c0100180 <utoa>$/;"	l
c0100826	kernel.asm	/^c0100826:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0100829	kernel.asm	/^c0100829:	89 4d 10             	mov    %ecx,0x10(%ebp)$/;"	l
c010082c	kernel.asm	/^c010082c:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010082f	kernel.asm	/^c010082f:	84 d2                	test   %dl,%dl$/;"	l
c0100831	kernel.asm	/^c0100831:	0f 84 c1 fe ff ff    	je     c01006f8 <vfprintf+0x18>$/;"	l
c0100837	kernel.asm	/^c0100837:	29 f8                	sub    %edi,%eax$/;"	l
c0100839	kernel.asm	/^c0100839:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
c010083c	kernel.asm	/^c010083c:	89 c3                	mov    %eax,%ebx$/;"	l
c010083e	kernel.asm	/^c010083e:	66 90                	xchg   %ax,%ax$/;"	l
c0100840	kernel.asm	/^c0100840:	0f be d2             	movsbl %dl,%edx$/;"	l
c0100843	kernel.asm	/^c0100843:	83 c7 01             	add    $0x1,%edi$/;"	l
c0100846	kernel.asm	/^c0100846:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0100849	kernel.asm	/^c0100849:	ff d6                	call   *%esi$/;"	l
c010084b	kernel.asm	/^c010084b:	0f b6 14 3b          	movzbl (%ebx,%edi,1),%edx$/;"	l
c010084f	kernel.asm	/^c010084f:	84 d2                	test   %dl,%dl$/;"	l
c0100851	kernel.asm	/^c0100851:	75 ed                	jne    c0100840 <vfprintf+0x160>$/;"	l
c0100853	kernel.asm	/^c0100853:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0100856	kernel.asm	/^c0100856:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
c0100859	kernel.asm	/^c0100859:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010085c	kernel.asm	/^c010085c:	e9 97 fe ff ff       	jmp    c01006f8 <vfprintf+0x18>$/;"	l
c0100861	kernel.asm	/^c0100861:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100868	kernel.asm	/^c0100868:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010086b	kernel.asm	/^c010086b:	83 c7 01             	add    $0x1,%edi$/;"	l
c010086e	kernel.asm	/^c010086e:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0100871	kernel.asm	/^c0100871:	83 c0 04             	add    $0x4,%eax$/;"	l
c0100874	kernel.asm	/^c0100874:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100877	kernel.asm	/^c0100877:	0f be 02             	movsbl (%edx),%eax$/;"	l
c010087a	kernel.asm	/^c010087a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010087d	kernel.asm	/^c010087d:	ff d6                	call   *%esi$/;"	l
c010087f	kernel.asm	/^c010087f:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0100882	kernel.asm	/^c0100882:	89 4d 10             	mov    %ecx,0x10(%ebp)$/;"	l
c0100885	kernel.asm	/^c0100885:	e9 6e fe ff ff       	jmp    c01006f8 <vfprintf+0x18>$/;"	l
c010088a	kernel.asm	/^c010088a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0100890	kernel.asm	/^c0100890:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c0100893	kernel.asm	/^c0100893:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0100896	kernel.asm	/^c0100896:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c010089d	kernel.asm	/^c010089d:	00 $/;"	l
c010089e	kernel.asm	/^c010089e:	8b 01                	mov    (%ecx),%eax$/;"	l
c01008a0	kernel.asm	/^c01008a0:	83 c2 04             	add    $0x4,%edx$/;"	l
c01008a3	kernel.asm	/^c01008a3:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c01008a6	kernel.asm	/^c01008a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01008a9	kernel.asm	/^c01008a9:	e8 a2 f8 ff ff       	call   c0100150 <itoa>$/;"	l
c01008ae	kernel.asm	/^c01008ae:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c01008b1	kernel.asm	/^c01008b1:	89 4d 10             	mov    %ecx,0x10(%ebp)$/;"	l
c01008b4	kernel.asm	/^c01008b4:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c01008b7	kernel.asm	/^c01008b7:	84 d2                	test   %dl,%dl$/;"	l
c01008b9	kernel.asm	/^c01008b9:	0f 84 39 fe ff ff    	je     c01006f8 <vfprintf+0x18>$/;"	l
c01008bf	kernel.asm	/^c01008bf:	29 f8                	sub    %edi,%eax$/;"	l
c01008c1	kernel.asm	/^c01008c1:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
c01008c4	kernel.asm	/^c01008c4:	89 c3                	mov    %eax,%ebx$/;"	l
c01008c6	kernel.asm	/^c01008c6:	66 90                	xchg   %ax,%ax$/;"	l
c01008c8	kernel.asm	/^c01008c8:	0f be d2             	movsbl %dl,%edx$/;"	l
c01008cb	kernel.asm	/^c01008cb:	83 c7 01             	add    $0x1,%edi$/;"	l
c01008ce	kernel.asm	/^c01008ce:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01008d1	kernel.asm	/^c01008d1:	ff d6                	call   *%esi$/;"	l
c01008d3	kernel.asm	/^c01008d3:	0f b6 14 3b          	movzbl (%ebx,%edi,1),%edx$/;"	l
c01008d7	kernel.asm	/^c01008d7:	84 d2                	test   %dl,%dl$/;"	l
c01008d9	kernel.asm	/^c01008d9:	75 ed                	jne    c01008c8 <vfprintf+0x1e8>$/;"	l
c01008db	kernel.asm	/^c01008db:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01008de	kernel.asm	/^c01008de:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
c01008e1	kernel.asm	/^c01008e1:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c01008e4	kernel.asm	/^c01008e4:	e9 0f fe ff ff       	jmp    c01006f8 <vfprintf+0x18>$/;"	l
c01008e9	kernel.asm	/^c01008e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c01008f0	kernel.asm	/^c01008f0:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c01008f3	kernel.asm	/^c01008f3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01008f6	kernel.asm	/^c01008f6:	8b 11                	mov    (%ecx),%edx$/;"	l
c01008f8	kernel.asm	/^c01008f8:	83 c0 04             	add    $0x4,%eax$/;"	l
c01008fb	kernel.asm	/^c01008fb:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01008fe	kernel.asm	/^c01008fe:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0100901	kernel.asm	/^c0100901:	0f b6 02             	movzbl (%edx),%eax$/;"	l
c0100904	kernel.asm	/^c0100904:	89 4d 10             	mov    %ecx,0x10(%ebp)$/;"	l
c0100907	kernel.asm	/^c0100907:	84 c0                	test   %al,%al$/;"	l
c0100909	kernel.asm	/^c0100909:	0f 84 e9 fd ff ff    	je     c01006f8 <vfprintf+0x18>$/;"	l
c010090f	kernel.asm	/^c010090f:	29 fa                	sub    %edi,%edx$/;"	l
c0100911	kernel.asm	/^c0100911:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
c0100914	kernel.asm	/^c0100914:	89 d3                	mov    %edx,%ebx$/;"	l
c0100916	kernel.asm	/^c0100916:	66 90                	xchg   %ax,%ax$/;"	l
c0100918	kernel.asm	/^c0100918:	0f be c0             	movsbl %al,%eax$/;"	l
c010091b	kernel.asm	/^c010091b:	83 c7 01             	add    $0x1,%edi$/;"	l
c010091e	kernel.asm	/^c010091e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100921	kernel.asm	/^c0100921:	ff d6                	call   *%esi$/;"	l
c0100923	kernel.asm	/^c0100923:	0f b6 04 3b          	movzbl (%ebx,%edi,1),%eax$/;"	l
c0100927	kernel.asm	/^c0100927:	84 c0                	test   %al,%al$/;"	l
c0100929	kernel.asm	/^c0100929:	75 ed                	jne    c0100918 <vfprintf+0x238>$/;"	l
c010092b	kernel.asm	/^c010092b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010092e	kernel.asm	/^c010092e:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
c0100931	kernel.asm	/^c0100931:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0100934	kernel.asm	/^c0100934:	e9 bf fd ff ff       	jmp    c01006f8 <vfprintf+0x18>$/;"	l
c0100939	kernel.asm	/^c0100939:	90                   	nop$/;"	l
c010093a	kernel.asm	/^c010093a:	90                   	nop$/;"	l
c010093b	kernel.asm	/^c010093b:	90                   	nop$/;"	l
c010093c	kernel.asm	/^c010093c:	90                   	nop$/;"	l
c010093d	kernel.asm	/^c010093d:	90                   	nop$/;"	l
c010093e	kernel.asm	/^c010093e:	90                   	nop$/;"	l
c010093f	kernel.asm	/^c010093f:	90                   	nop$/;"	l
c0100940	kernel.asm	/^c0100940 <serial_printc>:$/;"	l
c0100940	kernel.asm	/^c0100940:	55                   	push   %ebp$/;"	l
c0100941	kernel.asm	/^c0100941:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
c0100946	kernel.asm	/^c0100946:	89 e5                	mov    %esp,%ebp$/;"	l
c0100948	kernel.asm	/^c0100948:	0f b6 4d 08          	movzbl 0x8(%ebp),%ecx$/;"	l
c010094c	kernel.asm	/^c010094c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100950	kernel.asm	/^c0100950:	ec                   	in     (%dx),%al$/;"	l
c0100951	kernel.asm	/^c0100951:	a8 20                	test   $0x20,%al$/;"	l
c0100953	kernel.asm	/^c0100953:	74 fb                	je     c0100950 <serial_printc+0x10>$/;"	l
c0100955	kernel.asm	/^c0100955:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
c010095a	kernel.asm	/^c010095a:	89 c8                	mov    %ecx,%eax$/;"	l
c010095c	kernel.asm	/^c010095c:	ee                   	out    %al,(%dx)$/;"	l
c010095d	kernel.asm	/^c010095d:	5d                   	pop    %ebp$/;"	l
c010095e	kernel.asm	/^c010095e:	c3                   	ret    $/;"	l
c010095f	kernel.asm	/^c010095f:	90                   	nop$/;"	l
c0100960	kernel.asm	/^c0100960 <init_debug>:$/;"	l
c0100960	kernel.asm	/^c0100960:	55                   	push   %ebp$/;"	l
c0100961	kernel.asm	/^c0100961:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
c0100966	kernel.asm	/^c0100966:	89 e5                	mov    %esp,%ebp$/;"	l
c0100968	kernel.asm	/^c0100968:	31 c0                	xor    %eax,%eax$/;"	l
c010096a	kernel.asm	/^c010096a:	ee                   	out    %al,(%dx)$/;"	l
c010096b	kernel.asm	/^c010096b:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
c0100970	kernel.asm	/^c0100970:	b2 fb                	mov    $0xfb,%dl$/;"	l
c0100972	kernel.asm	/^c0100972:	ee                   	out    %al,(%dx)$/;"	l
c0100973	kernel.asm	/^c0100973:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0100978	kernel.asm	/^c0100978:	b2 f8                	mov    $0xf8,%dl$/;"	l
c010097a	kernel.asm	/^c010097a:	ee                   	out    %al,(%dx)$/;"	l
c010097b	kernel.asm	/^c010097b:	31 c0                	xor    %eax,%eax$/;"	l
c010097d	kernel.asm	/^c010097d:	b2 f9                	mov    $0xf9,%dl$/;"	l
c010097f	kernel.asm	/^c010097f:	ee                   	out    %al,(%dx)$/;"	l
c0100980	kernel.asm	/^c0100980:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
c0100985	kernel.asm	/^c0100985:	b2 fb                	mov    $0xfb,%dl$/;"	l
c0100987	kernel.asm	/^c0100987:	ee                   	out    %al,(%dx)$/;"	l
c0100988	kernel.asm	/^c0100988:	b8 c7 ff ff ff       	mov    $0xffffffc7,%eax$/;"	l
c010098d	kernel.asm	/^c010098d:	b2 fa                	mov    $0xfa,%dl$/;"	l
c010098f	kernel.asm	/^c010098f:	ee                   	out    %al,(%dx)$/;"	l
c0100990	kernel.asm	/^c0100990:	b8 0b 00 00 00       	mov    $0xb,%eax$/;"	l
c0100995	kernel.asm	/^c0100995:	b2 fc                	mov    $0xfc,%dl$/;"	l
c0100997	kernel.asm	/^c0100997:	ee                   	out    %al,(%dx)$/;"	l
c0100998	kernel.asm	/^c0100998:	5d                   	pop    %ebp$/;"	l
c0100999	kernel.asm	/^c0100999:	c3                   	ret    $/;"	l
c010099a	kernel.asm	/^c010099a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c01009a0	kernel.asm	/^c01009a0 <printk>:$/;"	l
c01009a0	kernel.asm	/^c01009a0:	55                   	push   %ebp$/;"	l
c01009a1	kernel.asm	/^c01009a1:	89 e5                	mov    %esp,%ebp$/;"	l
c01009a3	kernel.asm	/^c01009a3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01009a6	kernel.asm	/^c01009a6:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c01009a9	kernel.asm	/^c01009a9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01009ad	kernel.asm	/^c01009ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01009b0	kernel.asm	/^c01009b0:	c7 04 24 40 09 10 c0 	movl   $0xc0100940,(%esp)$/;"	l
c01009b7	kernel.asm	/^c01009b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01009bb	kernel.asm	/^c01009bb:	e8 20 fd ff ff       	call   c01006e0 <vfprintf>$/;"	l
c01009c0	kernel.asm	/^c01009c0:	c9                   	leave  $/;"	l
c01009c1	kernel.asm	/^c01009c1:	c3                   	ret    $/;"	l
c01009c2	kernel.asm	/^c01009c2:	90                   	nop$/;"	l
c01009c3	kernel.asm	/^c01009c3:	90                   	nop$/;"	l
c01009c4	kernel.asm	/^c01009c4:	90                   	nop$/;"	l
c01009c5	kernel.asm	/^c01009c5:	90                   	nop$/;"	l
c01009c6	kernel.asm	/^c01009c6:	90                   	nop$/;"	l
c01009c7	kernel.asm	/^c01009c7:	90                   	nop$/;"	l
c01009c8	kernel.asm	/^c01009c8:	90                   	nop$/;"	l
c01009c9	kernel.asm	/^c01009c9:	90                   	nop$/;"	l
c01009ca	kernel.asm	/^c01009ca:	90                   	nop$/;"	l
c01009cb	kernel.asm	/^c01009cb:	90                   	nop$/;"	l
c01009cc	kernel.asm	/^c01009cc:	90                   	nop$/;"	l
c01009cd	kernel.asm	/^c01009cd:	90                   	nop$/;"	l
c01009ce	kernel.asm	/^c01009ce:	90                   	nop$/;"	l
c01009cf	kernel.asm	/^c01009cf:	90                   	nop$/;"	l
c01009d0	kernel.asm	/^c01009d0 <init_kvm>:$/;"	l
c01009d0	kernel.asm	/^c01009d0:	55                   	push   %ebp$/;"	l
c01009d1	kernel.asm	/^c01009d1:	ba 00 70 42 00       	mov    $0x427000,%edx$/;"	l
c01009d6	kernel.asm	/^c01009d6:	89 e5                	mov    %esp,%ebp$/;"	l
c01009d8	kernel.asm	/^c01009d8:	31 c0                	xor    %eax,%eax$/;"	l
c01009da	kernel.asm	/^c01009da:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01009dd	kernel.asm	/^c01009dd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c01009e0	kernel.asm	/^c01009e0:	89 c1                	mov    %eax,%ecx$/;"	l
c01009e2	kernel.asm	/^c01009e2:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c01009e7	kernel.asm	/^c01009e7:	83 c9 03             	or     $0x3,%ecx$/;"	l
c01009ea	kernel.asm	/^c01009ea:	89 0a                	mov    %ecx,(%edx)$/;"	l
c01009ec	kernel.asm	/^c01009ec:	83 c2 04             	add    $0x4,%edx$/;"	l
c01009ef	kernel.asm	/^c01009ef:	3d 00 00 00 08       	cmp    $0x8000000,%eax$/;"	l
c01009f4	kernel.asm	/^c01009f4:	75 ea                	jne    c01009e0 <init_kvm+0x10>$/;"	l
c01009f6	kernel.asm	/^c01009f6:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c01009fd	kernel.asm	/^c01009fd:	00 $/;"	l
c01009fe	kernel.asm	/^c01009fe:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0100a05	kernel.asm	/^c0100a05:	00 $/;"	l
c0100a06	kernel.asm	/^c0100a06:	c7 04 24 00 70 44 40 	movl   $0x40447000,(%esp)$/;"	l
c0100a0d	kernel.asm	/^c0100a0d:	e8 1e f6 ff ff       	call   c0100030 <memset>$/;"	l
c0100a12	kernel.asm	/^c0100a12:	b9 00 70 44 00       	mov    $0x447000,%ecx$/;"	l
c0100a17	kernel.asm	/^c0100a17:	31 d2                	xor    %edx,%edx$/;"	l
c0100a19	kernel.asm	/^c0100a19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100a20	kernel.asm	/^c0100a20:	89 d0                	mov    %edx,%eax$/;"	l
c0100a22	kernel.asm	/^c0100a22:	81 c2 00 00 40 00    	add    $0x400000,%edx$/;"	l
c0100a28	kernel.asm	/^c0100a28:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0100a2b	kernel.asm	/^c0100a2b:	8d 04 85 00 70 42 00 	lea    0x427000(,%eax,4),%eax$/;"	l
c0100a32	kernel.asm	/^c0100a32:	83 c8 03             	or     $0x3,%eax$/;"	l
c0100a35	kernel.asm	/^c0100a35:	89 01                	mov    %eax,(%ecx)$/;"	l
c0100a37	kernel.asm	/^c0100a37:	89 81 00 0c 00 00    	mov    %eax,0xc00(%ecx)$/;"	l
c0100a3d	kernel.asm	/^c0100a3d:	83 c1 04             	add    $0x4,%ecx$/;"	l
c0100a40	kernel.asm	/^c0100a40:	81 fa 00 00 00 08    	cmp    $0x8000000,%edx$/;"	l
c0100a46	kernel.asm	/^c0100a46:	75 d8                	jne    c0100a20 <init_kvm+0x50>$/;"	l
c0100a48	kernel.asm	/^c0100a48:	b8 00 70 44 00       	mov    $0x447000,%eax$/;"	l
c0100a4d	kernel.asm	/^c0100a4d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0100a50	kernel.asm	/^c0100a50:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c0100a53	kernel.asm	/^c0100a53:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100a56	kernel.asm	/^c0100a56:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a59	kernel.asm	/^c0100a59:	0d 00 00 00 80       	or     $0x80000000,%eax$/;"	l
c0100a5e	kernel.asm	/^c0100a5e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c0100a61	kernel.asm	/^c0100a61:	c9                   	leave  $/;"	l
c0100a62	kernel.asm	/^c0100a62:	c3                   	ret    $/;"	l
c0100a63	kernel.asm	/^c0100a63:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0100a69	kernel.asm	/^c0100a69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
c0100a70	kernel.asm	/^c0100a70 <init_seg>:$/;"	l
c0100a70	kernel.asm	/^c0100a70:	b8 40 60 42 c0       	mov    $0xc0426040,%eax$/;"	l
c0100a75	kernel.asm	/^c0100a75:	66 a3 2a 60 42 c0    	mov    %ax,0xc042602a$/;"	l
c0100a7b	kernel.asm	/^c0100a7b:	89 c2                	mov    %eax,%edx$/;"	l
c0100a7d	kernel.asm	/^c0100a7d:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0100a80	kernel.asm	/^c0100a80:	a2 2f 60 42 c0       	mov    %al,0xc042602f$/;"	l
c0100a85	kernel.asm	/^c0100a85:	b8 00 60 42 c0       	mov    $0xc0426000,%eax$/;"	l
c0100a8a	kernel.asm	/^c0100a8a:	55                   	push   %ebp$/;"	l
c0100a8b	kernel.asm	/^c0100a8b:	c1 ea 10             	shr    $0x10,%edx$/;"	l
c0100a8e	kernel.asm	/^c0100a8e:	89 e5                	mov    %esp,%ebp$/;"	l
c0100a90	kernel.asm	/^c0100a90:	66 c7 05 f4 30 10 c0 	movw   $0x2f,0xc01030f4$/;"	l
c0100a97	kernel.asm	/^c0100a97:	2f 00 $/;"	l
c0100a99	kernel.asm	/^c0100a99:	66 a3 f6 30 10 c0    	mov    %ax,0xc01030f6$/;"	l
c0100a9f	kernel.asm	/^c0100a9f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100aa2	kernel.asm	/^c0100aa2:	88 15 2c 60 42 c0    	mov    %dl,0xc042602c$/;"	l
c0100aa8	kernel.asm	/^c0100aa8:	66 c7 05 08 60 42 c0 	movw   $0xffff,0xc0426008$/;"	l
c0100aaf	kernel.asm	/^c0100aaf:	ff ff $/;"	l
c0100ab1	kernel.asm	/^c0100ab1:	66 c7 05 0a 60 42 c0 	movw   $0x0,0xc042600a$/;"	l
c0100ab8	kernel.asm	/^c0100ab8:	00 00 $/;"	l
c0100aba	kernel.asm	/^c0100aba:	c6 05 0c 60 42 c0 00 	movb   $0x0,0xc042600c$/;"	l
c0100ac1	kernel.asm	/^c0100ac1:	c6 05 0d 60 42 c0 9a 	movb   $0x9a,0xc042600d$/;"	l
c0100ac8	kernel.asm	/^c0100ac8:	c6 05 0e 60 42 c0 cf 	movb   $0xcf,0xc042600e$/;"	l
c0100acf	kernel.asm	/^c0100acf:	c6 05 0f 60 42 c0 00 	movb   $0x0,0xc042600f$/;"	l
c0100ad6	kernel.asm	/^c0100ad6:	66 c7 05 10 60 42 c0 	movw   $0xffff,0xc0426010$/;"	l
c0100add	kernel.asm	/^c0100add:	ff ff $/;"	l
c0100adf	kernel.asm	/^c0100adf:	66 c7 05 12 60 42 c0 	movw   $0x0,0xc0426012$/;"	l
c0100ae6	kernel.asm	/^c0100ae6:	00 00 $/;"	l
c0100ae8	kernel.asm	/^c0100ae8:	c6 05 14 60 42 c0 00 	movb   $0x0,0xc0426014$/;"	l
c0100aef	kernel.asm	/^c0100aef:	c6 05 15 60 42 c0 92 	movb   $0x92,0xc0426015$/;"	l
c0100af6	kernel.asm	/^c0100af6:	c6 05 16 60 42 c0 cf 	movb   $0xcf,0xc0426016$/;"	l
c0100afd	kernel.asm	/^c0100afd:	c6 05 17 60 42 c0 00 	movb   $0x0,0xc0426017$/;"	l
c0100b04	kernel.asm	/^c0100b04:	66 c7 05 18 60 42 c0 	movw   $0xffff,0xc0426018$/;"	l
c0100b0b	kernel.asm	/^c0100b0b:	ff ff $/;"	l
c0100b0d	kernel.asm	/^c0100b0d:	66 c7 05 1a 60 42 c0 	movw   $0x0,0xc042601a$/;"	l
c0100b14	kernel.asm	/^c0100b14:	00 00 $/;"	l
c0100b16	kernel.asm	/^c0100b16:	c6 05 1c 60 42 c0 00 	movb   $0x0,0xc042601c$/;"	l
c0100b1d	kernel.asm	/^c0100b1d:	c6 05 1d 60 42 c0 fa 	movb   $0xfa,0xc042601d$/;"	l
c0100b24	kernel.asm	/^c0100b24:	c6 05 1e 60 42 c0 cf 	movb   $0xcf,0xc042601e$/;"	l
c0100b2b	kernel.asm	/^c0100b2b:	c6 05 1f 60 42 c0 00 	movb   $0x0,0xc042601f$/;"	l
c0100b32	kernel.asm	/^c0100b32:	66 c7 05 20 60 42 c0 	movw   $0xffff,0xc0426020$/;"	l
c0100b39	kernel.asm	/^c0100b39:	ff ff $/;"	l
c0100b3b	kernel.asm	/^c0100b3b:	66 c7 05 22 60 42 c0 	movw   $0x0,0xc0426022$/;"	l
c0100b42	kernel.asm	/^c0100b42:	00 00 $/;"	l
c0100b44	kernel.asm	/^c0100b44:	c6 05 24 60 42 c0 00 	movb   $0x0,0xc0426024$/;"	l
c0100b4b	kernel.asm	/^c0100b4b:	c6 05 25 60 42 c0 f2 	movb   $0xf2,0xc0426025$/;"	l
c0100b52	kernel.asm	/^c0100b52:	c6 05 26 60 42 c0 cf 	movb   $0xcf,0xc0426026$/;"	l
c0100b59	kernel.asm	/^c0100b59:	c6 05 27 60 42 c0 00 	movb   $0x0,0xc0426027$/;"	l
c0100b60	kernel.asm	/^c0100b60:	66 c7 05 28 60 42 c0 	movw   $0x63,0xc0426028$/;"	l
c0100b67	kernel.asm	/^c0100b67:	63 00 $/;"	l
c0100b69	kernel.asm	/^c0100b69:	c6 05 2d 60 42 c0 89 	movb   $0x89,0xc042602d$/;"	l
c0100b70	kernel.asm	/^c0100b70:	c6 05 2e 60 42 c0 40 	movb   $0x40,0xc042602e$/;"	l
c0100b77	kernel.asm	/^c0100b77:	66 a3 f8 30 10 c0    	mov    %ax,0xc01030f8$/;"	l
c0100b7d	kernel.asm	/^c0100b7d:	b8 f4 30 10 c0       	mov    $0xc01030f4,%eax$/;"	l
c0100b82	kernel.asm	/^c0100b82:	0f 01 10             	lgdtl  (%eax)$/;"	l
c0100b85	kernel.asm	/^c0100b85:	5d                   	pop    %ebp$/;"	l
c0100b86	kernel.asm	/^c0100b86:	c3                   	ret    $/;"	l
c0100b87	kernel.asm	/^c0100b87:	90                   	nop$/;"	l
c0100b88	kernel.asm	/^c0100b88:	90                   	nop$/;"	l
c0100b89	kernel.asm	/^c0100b89:	90                   	nop$/;"	l
c0100b8a	kernel.asm	/^c0100b8a:	90                   	nop$/;"	l
c0100b8b	kernel.asm	/^c0100b8b:	90                   	nop$/;"	l
c0100b8c	kernel.asm	/^c0100b8c:	90                   	nop$/;"	l
c0100b8d	kernel.asm	/^c0100b8d:	90                   	nop$/;"	l
c0100b8e	kernel.asm	/^c0100b8e:	90                   	nop$/;"	l
c0100b8f	kernel.asm	/^c0100b8f:	90                   	nop$/;"	l
c0100b90	kernel.asm	/^c0100b90 <test_consumer>:$/;"	l
c0100b90	kernel.asm	/^c0100b90:	55                   	push   %ebp$/;"	l
c0100b91	kernel.asm	/^c0100b91:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b93	kernel.asm	/^c0100b93:	56                   	push   %esi$/;"	l
c0100b94	kernel.asm	/^c0100b94:	be 67 66 66 66       	mov    $0x66666667,%esi$/;"	l
c0100b99	kernel.asm	/^c0100b99:	53                   	push   %ebx$/;"	l
c0100b9a	kernel.asm	/^c0100b9a:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0100b9d	kernel.asm	/^c0100b9d:	8b 1d 00 20 10 c0    	mov    0xc0102000,%ebx$/;"	l
c0100ba3	kernel.asm	/^c0100ba3:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
c0100ba6	kernel.asm	/^c0100ba6:	a3 00 20 10 c0       	mov    %eax,0xc0102000$/;"	l
c0100bab	kernel.asm	/^c0100bab:	e9 bb 00 00 00       	jmp    c0100c6b <test_consumer+0xdb>$/;"	l
c0100bb0	kernel.asm	/^c0100bb0:	c7 04 24 0c 80 44 c0 	movl   $0xc044800c,(%esp)$/;"	l
c0100bb7	kernel.asm	/^c0100bb7:	e8 54 f7 ff ff       	call   c0100310 <P>$/;"	l
c0100bbc	kernel.asm	/^c0100bbc:	9c                   	pushf  $/;"	l
c0100bbd	kernel.asm	/^c0100bbd:	58                   	pop    %eax$/;"	l
c0100bbe	kernel.asm	/^c0100bbe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100bc1	kernel.asm	/^c0100bc1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bc4	kernel.asm	/^c0100bc4:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100bc7	kernel.asm	/^c0100bc7:	0f 84 33 01 00 00    	je     c0100d00 <test_consumer+0x170>$/;"	l
c0100bcd	kernel.asm	/^c0100bcd:	a1 fc 30 10 c0       	mov    0xc01030fc,%eax$/;"	l
c0100bd2	kernel.asm	/^c0100bd2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c0100bd6	kernel.asm	/^c0100bd6:	c7 04 24 e6 18 10 c0 	movl   $0xc01018e6,(%esp)$/;"	l
c0100bdd	kernel.asm	/^c0100bdd:	8b 14 85 18 80 44 c0 	mov    -0x3fbb7fe8(,%eax,4),%edx$/;"	l
c0100be4	kernel.asm	/^c0100be4:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100be7	kernel.asm	/^c0100be7:	a3 fc 30 10 c0       	mov    %eax,0xc01030fc$/;"	l
c0100bec	kernel.asm	/^c0100bec:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100bf0	kernel.asm	/^c0100bf0:	e8 ab fd ff ff       	call   c01009a0 <printk>$/;"	l
c0100bf5	kernel.asm	/^c0100bf5:	9c                   	pushf  $/;"	l
c0100bf6	kernel.asm	/^c0100bf6:	58                   	pop    %eax$/;"	l
c0100bf7	kernel.asm	/^c0100bf7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100bfa	kernel.asm	/^c0100bfa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bfd	kernel.asm	/^c0100bfd:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100c00	kernel.asm	/^c0100c00:	0f 84 da 00 00 00    	je     c0100ce0 <test_consumer+0x150>$/;"	l
c0100c06	kernel.asm	/^c0100c06:	8b 0d fc 30 10 c0    	mov    0xc01030fc,%ecx$/;"	l
c0100c0c	kernel.asm	/^c0100c0c:	89 c8                	mov    %ecx,%eax$/;"	l
c0100c0e	kernel.asm	/^c0100c0e:	f7 ee                	imul   %esi$/;"	l
c0100c10	kernel.asm	/^c0100c10:	89 c8                	mov    %ecx,%eax$/;"	l
c0100c12	kernel.asm	/^c0100c12:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0100c15	kernel.asm	/^c0100c15:	d1 fa                	sar    %edx$/;"	d
c0100c17	kernel.asm	/^c0100c17:	29 c2                	sub    %eax,%edx$/;"	l
c0100c19	kernel.asm	/^c0100c19:	8d 04 92             	lea    (%edx,%edx,4),%eax$/;"	l
c0100c1c	kernel.asm	/^c0100c1c:	29 c1                	sub    %eax,%ecx$/;"	l
c0100c1e	kernel.asm	/^c0100c1e:	89 0d fc 30 10 c0    	mov    %ecx,0xc01030fc$/;"	l
c0100c24	kernel.asm	/^c0100c24:	9c                   	pushf  $/;"	l
c0100c25	kernel.asm	/^c0100c25:	58                   	pop    %eax$/;"	l
c0100c26	kernel.asm	/^c0100c26:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100c29	kernel.asm	/^c0100c29:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c2c	kernel.asm	/^c0100c2c:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100c2f	kernel.asm	/^c0100c2f:	0f 84 8b 00 00 00    	je     c0100cc0 <test_consumer+0x130>$/;"	l
c0100c35	kernel.asm	/^c0100c35:	c7 04 24 0c 80 44 c0 	movl   $0xc044800c,(%esp)$/;"	l
c0100c3c	kernel.asm	/^c0100c3c:	e8 5f f7 ff ff       	call   c01003a0 <V>$/;"	l
c0100c41	kernel.asm	/^c0100c41:	9c                   	pushf  $/;"	l
c0100c42	kernel.asm	/^c0100c42:	58                   	pop    %eax$/;"	l
c0100c43	kernel.asm	/^c0100c43:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100c46	kernel.asm	/^c0100c46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c49	kernel.asm	/^c0100c49:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100c4c	kernel.asm	/^c0100c4c:	74 5a                	je     c0100ca8 <test_consumer+0x118>$/;"	l
c0100c4e	kernel.asm	/^c0100c4e:	c7 04 24 2c 80 44 c0 	movl   $0xc044802c,(%esp)$/;"	l
c0100c55	kernel.asm	/^c0100c55:	e8 46 f7 ff ff       	call   c01003a0 <V>$/;"	l
c0100c5a	kernel.asm	/^c0100c5a:	9c                   	pushf  $/;"	l
c0100c5b	kernel.asm	/^c0100c5b:	58                   	pop    %eax$/;"	l
c0100c5c	kernel.asm	/^c0100c5c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100c5f	kernel.asm	/^c0100c5f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c62	kernel.asm	/^c0100c62:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100c65	kernel.asm	/^c0100c65:	0f 84 b5 00 00 00    	je     c0100d20 <test_consumer+0x190>$/;"	l
c0100c6b	kernel.asm	/^c0100c6b:	c7 04 24 00 80 44 c0 	movl   $0xc0448000,(%esp)$/;"	l
c0100c72	kernel.asm	/^c0100c72:	e8 99 f6 ff ff       	call   c0100310 <P>$/;"	l
c0100c77	kernel.asm	/^c0100c77:	9c                   	pushf  $/;"	l
c0100c78	kernel.asm	/^c0100c78:	58                   	pop    %eax$/;"	l
c0100c79	kernel.asm	/^c0100c79:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100c7c	kernel.asm	/^c0100c7c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c7f	kernel.asm	/^c0100c7f:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100c82	kernel.asm	/^c0100c82:	0f 85 28 ff ff ff    	jne    c0100bb0 <test_consumer+0x20>$/;"	l
c0100c88	kernel.asm	/^c0100c88:	c7 44 24 04 1b 00 00 	movl   $0x1b,0x4(%esp)$/;"	l
c0100c8f	kernel.asm	/^c0100c8f:	00 $/;"	l
c0100c90	kernel.asm	/^c0100c90:	c7 04 24 d4 18 10 c0 	movl   $0xc01018d4,(%esp)$/;"	l
c0100c97	kernel.asm	/^c0100c97:	e8 14 f5 ff ff       	call   c01001b0 <abort>$/;"	l
c0100c9c	kernel.asm	/^c0100c9c:	e9 0f ff ff ff       	jmp    c0100bb0 <test_consumer+0x20>$/;"	l
c0100ca1	kernel.asm	/^c0100ca1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100ca8	kernel.asm	/^c0100ca8:	c7 44 24 04 1f 00 00 	movl   $0x1f,0x4(%esp)$/;"	l
c0100caf	kernel.asm	/^c0100caf:	00 $/;"	l
c0100cb0	kernel.asm	/^c0100cb0:	c7 04 24 d4 18 10 c0 	movl   $0xc01018d4,(%esp)$/;"	l
c0100cb7	kernel.asm	/^c0100cb7:	e8 f4 f4 ff ff       	call   c01001b0 <abort>$/;"	l
c0100cbc	kernel.asm	/^c0100cbc:	eb 90                	jmp    c0100c4e <test_consumer+0xbe>$/;"	l
c0100cbe	kernel.asm	/^c0100cbe:	66 90                	xchg   %ax,%ax$/;"	l
c0100cc0	kernel.asm	/^c0100cc0:	c7 44 24 04 1e 00 00 	movl   $0x1e,0x4(%esp)$/;"	l
c0100cc7	kernel.asm	/^c0100cc7:	00 $/;"	l
c0100cc8	kernel.asm	/^c0100cc8:	c7 04 24 d4 18 10 c0 	movl   $0xc01018d4,(%esp)$/;"	l
c0100ccf	kernel.asm	/^c0100ccf:	e8 dc f4 ff ff       	call   c01001b0 <abort>$/;"	l
c0100cd4	kernel.asm	/^c0100cd4:	e9 5c ff ff ff       	jmp    c0100c35 <test_consumer+0xa5>$/;"	l
c0100cd9	kernel.asm	/^c0100cd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100ce0	kernel.asm	/^c0100ce0:	c7 44 24 04 1d 00 00 	movl   $0x1d,0x4(%esp)$/;"	l
c0100ce7	kernel.asm	/^c0100ce7:	00 $/;"	l
c0100ce8	kernel.asm	/^c0100ce8:	c7 04 24 d4 18 10 c0 	movl   $0xc01018d4,(%esp)$/;"	l
c0100cef	kernel.asm	/^c0100cef:	e8 bc f4 ff ff       	call   c01001b0 <abort>$/;"	l
c0100cf4	kernel.asm	/^c0100cf4:	e9 0d ff ff ff       	jmp    c0100c06 <test_consumer+0x76>$/;"	l
c0100cf9	kernel.asm	/^c0100cf9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100d00	kernel.asm	/^c0100d00:	c7 44 24 04 1c 00 00 	movl   $0x1c,0x4(%esp)$/;"	l
c0100d07	kernel.asm	/^c0100d07:	00 $/;"	l
c0100d08	kernel.asm	/^c0100d08:	c7 04 24 d4 18 10 c0 	movl   $0xc01018d4,(%esp)$/;"	l
c0100d0f	kernel.asm	/^c0100d0f:	e8 9c f4 ff ff       	call   c01001b0 <abort>$/;"	l
c0100d14	kernel.asm	/^c0100d14:	e9 b4 fe ff ff       	jmp    c0100bcd <test_consumer+0x3d>$/;"	l
c0100d19	kernel.asm	/^c0100d19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100d20	kernel.asm	/^c0100d20:	c7 44 24 04 20 00 00 	movl   $0x20,0x4(%esp)$/;"	l
c0100d27	kernel.asm	/^c0100d27:	00 $/;"	l
c0100d28	kernel.asm	/^c0100d28:	c7 04 24 d4 18 10 c0 	movl   $0xc01018d4,(%esp)$/;"	l
c0100d2f	kernel.asm	/^c0100d2f:	e8 7c f4 ff ff       	call   c01001b0 <abort>$/;"	l
c0100d34	kernel.asm	/^c0100d34:	e9 32 ff ff ff       	jmp    c0100c6b <test_consumer+0xdb>$/;"	l
c0100d39	kernel.asm	/^c0100d39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100d40	kernel.asm	/^c0100d40 <test_producer>:$/;"	l
c0100d40	kernel.asm	/^c0100d40:	55                   	push   %ebp$/;"	l
c0100d41	kernel.asm	/^c0100d41:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d43	kernel.asm	/^c0100d43:	53                   	push   %ebx$/;"	l
c0100d44	kernel.asm	/^c0100d44:	bb 67 66 66 66       	mov    $0x66666667,%ebx$/;"	l
c0100d49	kernel.asm	/^c0100d49:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0100d4c	kernel.asm	/^c0100d4c:	e9 b7 00 00 00       	jmp    c0100e08 <test_producer+0xc8>$/;"	l
c0100d51	kernel.asm	/^c0100d51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100d58	kernel.asm	/^c0100d58:	c7 04 24 0c 80 44 c0 	movl   $0xc044800c,(%esp)$/;"	l
c0100d5f	kernel.asm	/^c0100d5f:	e8 ac f5 ff ff       	call   c0100310 <P>$/;"	l
c0100d64	kernel.asm	/^c0100d64:	9c                   	pushf  $/;"	l
c0100d65	kernel.asm	/^c0100d65:	58                   	pop    %eax$/;"	l
c0100d66	kernel.asm	/^c0100d66:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100d69	kernel.asm	/^c0100d69:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100d6c	kernel.asm	/^c0100d6c:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100d6f	kernel.asm	/^c0100d6f:	0f 84 23 01 00 00    	je     c0100e98 <test_producer+0x158>$/;"	l
c0100d75	kernel.asm	/^c0100d75:	8b 0d 00 31 10 c0    	mov    0xc0103100,%ecx$/;"	l
c0100d7b	kernel.asm	/^c0100d7b:	a1 04 20 10 c0       	mov    0xc0102004,%eax$/;"	l
c0100d80	kernel.asm	/^c0100d80:	89 04 8d 18 80 44 c0 	mov    %eax,-0x3fbb7fe8(,%ecx,4)$/;"	l
c0100d87	kernel.asm	/^c0100d87:	83 c1 01             	add    $0x1,%ecx$/;"	l
c0100d8a	kernel.asm	/^c0100d8a:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100d8d	kernel.asm	/^c0100d8d:	89 0d 00 31 10 c0    	mov    %ecx,0xc0103100$/;"	l
c0100d93	kernel.asm	/^c0100d93:	a3 04 20 10 c0       	mov    %eax,0xc0102004$/;"	l
c0100d98	kernel.asm	/^c0100d98:	9c                   	pushf  $/;"	l
c0100d99	kernel.asm	/^c0100d99:	58                   	pop    %eax$/;"	l
c0100d9a	kernel.asm	/^c0100d9a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100d9d	kernel.asm	/^c0100d9d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100da0	kernel.asm	/^c0100da0:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100da3	kernel.asm	/^c0100da3:	0f 84 cf 00 00 00    	je     c0100e78 <test_producer+0x138>$/;"	l
c0100da9	kernel.asm	/^c0100da9:	89 c8                	mov    %ecx,%eax$/;"	l
c0100dab	kernel.asm	/^c0100dab:	f7 eb                	imul   %ebx$/;"	l
c0100dad	kernel.asm	/^c0100dad:	89 c8                	mov    %ecx,%eax$/;"	l
c0100daf	kernel.asm	/^c0100daf:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0100db2	kernel.asm	/^c0100db2:	d1 fa                	sar    %edx$/;"	d
c0100db4	kernel.asm	/^c0100db4:	29 c2                	sub    %eax,%edx$/;"	l
c0100db6	kernel.asm	/^c0100db6:	8d 04 92             	lea    (%edx,%edx,4),%eax$/;"	l
c0100db9	kernel.asm	/^c0100db9:	29 c1                	sub    %eax,%ecx$/;"	l
c0100dbb	kernel.asm	/^c0100dbb:	89 0d 00 31 10 c0    	mov    %ecx,0xc0103100$/;"	l
c0100dc1	kernel.asm	/^c0100dc1:	9c                   	pushf  $/;"	l
c0100dc2	kernel.asm	/^c0100dc2:	58                   	pop    %eax$/;"	l
c0100dc3	kernel.asm	/^c0100dc3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100dc6	kernel.asm	/^c0100dc6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100dc9	kernel.asm	/^c0100dc9:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100dcc	kernel.asm	/^c0100dcc:	0f 84 86 00 00 00    	je     c0100e58 <test_producer+0x118>$/;"	l
c0100dd2	kernel.asm	/^c0100dd2:	c7 04 24 0c 80 44 c0 	movl   $0xc044800c,(%esp)$/;"	l
c0100dd9	kernel.asm	/^c0100dd9:	e8 c2 f5 ff ff       	call   c01003a0 <V>$/;"	l
c0100dde	kernel.asm	/^c0100dde:	9c                   	pushf  $/;"	l
c0100ddf	kernel.asm	/^c0100ddf:	58                   	pop    %eax$/;"	l
c0100de0	kernel.asm	/^c0100de0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100de3	kernel.asm	/^c0100de3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100de6	kernel.asm	/^c0100de6:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100de9	kernel.asm	/^c0100de9:	74 55                	je     c0100e40 <test_producer+0x100>$/;"	l
c0100deb	kernel.asm	/^c0100deb:	c7 04 24 00 80 44 c0 	movl   $0xc0448000,(%esp)$/;"	l
c0100df2	kernel.asm	/^c0100df2:	e8 a9 f5 ff ff       	call   c01003a0 <V>$/;"	l
c0100df7	kernel.asm	/^c0100df7:	9c                   	pushf  $/;"	l
c0100df8	kernel.asm	/^c0100df8:	58                   	pop    %eax$/;"	l
c0100df9	kernel.asm	/^c0100df9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100dfc	kernel.asm	/^c0100dfc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100dff	kernel.asm	/^c0100dff:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100e02	kernel.asm	/^c0100e02:	0f 84 b0 00 00 00    	je     c0100eb8 <test_producer+0x178>$/;"	l
c0100e08	kernel.asm	/^c0100e08:	c7 04 24 2c 80 44 c0 	movl   $0xc044802c,(%esp)$/;"	l
c0100e0f	kernel.asm	/^c0100e0f:	e8 fc f4 ff ff       	call   c0100310 <P>$/;"	l
c0100e14	kernel.asm	/^c0100e14:	9c                   	pushf  $/;"	l
c0100e15	kernel.asm	/^c0100e15:	58                   	pop    %eax$/;"	l
c0100e16	kernel.asm	/^c0100e16:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100e19	kernel.asm	/^c0100e19:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100e1c	kernel.asm	/^c0100e1c:	f6 c4 02             	test   $0x2,%ah$/;"	l
c0100e1f	kernel.asm	/^c0100e1f:	0f 85 33 ff ff ff    	jne    c0100d58 <test_producer+0x18>$/;"	l
c0100e25	kernel.asm	/^c0100e25:	c7 44 24 04 0e 00 00 	movl   $0xe,0x4(%esp)$/;"	l
c0100e2c	kernel.asm	/^c0100e2c:	00 $/;"	l
c0100e2d	kernel.asm	/^c0100e2d:	c7 04 24 d4 18 10 c0 	movl   $0xc01018d4,(%esp)$/;"	l
c0100e34	kernel.asm	/^c0100e34:	e8 77 f3 ff ff       	call   c01001b0 <abort>$/;"	l
c0100e39	kernel.asm	/^c0100e39:	e9 1a ff ff ff       	jmp    c0100d58 <test_producer+0x18>$/;"	l
c0100e3e	kernel.asm	/^c0100e3e:	66 90                	xchg   %ax,%ax$/;"	l
c0100e40	kernel.asm	/^c0100e40:	c7 44 24 04 12 00 00 	movl   $0x12,0x4(%esp)$/;"	l
c0100e47	kernel.asm	/^c0100e47:	00 $/;"	l
c0100e48	kernel.asm	/^c0100e48:	c7 04 24 d4 18 10 c0 	movl   $0xc01018d4,(%esp)$/;"	l
c0100e4f	kernel.asm	/^c0100e4f:	e8 5c f3 ff ff       	call   c01001b0 <abort>$/;"	l
c0100e54	kernel.asm	/^c0100e54:	eb 95                	jmp    c0100deb <test_producer+0xab>$/;"	l
c0100e56	kernel.asm	/^c0100e56:	66 90                	xchg   %ax,%ax$/;"	l
c0100e58	kernel.asm	/^c0100e58:	c7 44 24 04 11 00 00 	movl   $0x11,0x4(%esp)$/;"	l
c0100e5f	kernel.asm	/^c0100e5f:	00 $/;"	l
c0100e60	kernel.asm	/^c0100e60:	c7 04 24 d4 18 10 c0 	movl   $0xc01018d4,(%esp)$/;"	l
c0100e67	kernel.asm	/^c0100e67:	e8 44 f3 ff ff       	call   c01001b0 <abort>$/;"	l
c0100e6c	kernel.asm	/^c0100e6c:	e9 61 ff ff ff       	jmp    c0100dd2 <test_producer+0x92>$/;"	l
c0100e71	kernel.asm	/^c0100e71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100e78	kernel.asm	/^c0100e78:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c0100e7f	kernel.asm	/^c0100e7f:	00 $/;"	l
c0100e80	kernel.asm	/^c0100e80:	c7 04 24 d4 18 10 c0 	movl   $0xc01018d4,(%esp)$/;"	l
c0100e87	kernel.asm	/^c0100e87:	e8 24 f3 ff ff       	call   c01001b0 <abort>$/;"	l
c0100e8c	kernel.asm	/^c0100e8c:	8b 0d 00 31 10 c0    	mov    0xc0103100,%ecx$/;"	l
c0100e92	kernel.asm	/^c0100e92:	e9 12 ff ff ff       	jmp    c0100da9 <test_producer+0x69>$/;"	l
c0100e97	kernel.asm	/^c0100e97:	90                   	nop$/;"	l
c0100e98	kernel.asm	/^c0100e98:	c7 44 24 04 0f 00 00 	movl   $0xf,0x4(%esp)$/;"	l
c0100e9f	kernel.asm	/^c0100e9f:	00 $/;"	l
c0100ea0	kernel.asm	/^c0100ea0:	c7 04 24 d4 18 10 c0 	movl   $0xc01018d4,(%esp)$/;"	l
c0100ea7	kernel.asm	/^c0100ea7:	e8 04 f3 ff ff       	call   c01001b0 <abort>$/;"	l
c0100eac	kernel.asm	/^c0100eac:	e9 c4 fe ff ff       	jmp    c0100d75 <test_producer+0x35>$/;"	l
c0100eb1	kernel.asm	/^c0100eb1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100eb8	kernel.asm	/^c0100eb8:	c7 44 24 04 13 00 00 	movl   $0x13,0x4(%esp)$/;"	l
c0100ebf	kernel.asm	/^c0100ebf:	00 $/;"	l
c0100ec0	kernel.asm	/^c0100ec0:	c7 04 24 d4 18 10 c0 	movl   $0xc01018d4,(%esp)$/;"	l
c0100ec7	kernel.asm	/^c0100ec7:	e8 e4 f2 ff ff       	call   c01001b0 <abort>$/;"	l
c0100ecc	kernel.asm	/^c0100ecc:	e9 37 ff ff ff       	jmp    c0100e08 <test_producer+0xc8>$/;"	l
c0100ed1	kernel.asm	/^c0100ed1:	eb 0d                	jmp    c0100ee0 <test_setup>$/;"	l
c0100ed3	kernel.asm	/^c0100ed3:	90                   	nop$/;"	l
c0100ed4	kernel.asm	/^c0100ed4:	90                   	nop$/;"	l
c0100ed5	kernel.asm	/^c0100ed5:	90                   	nop$/;"	l
c0100ed6	kernel.asm	/^c0100ed6:	90                   	nop$/;"	l
c0100ed7	kernel.asm	/^c0100ed7:	90                   	nop$/;"	l
c0100ed8	kernel.asm	/^c0100ed8:	90                   	nop$/;"	l
c0100ed9	kernel.asm	/^c0100ed9:	90                   	nop$/;"	l
c0100eda	kernel.asm	/^c0100eda:	90                   	nop$/;"	l
c0100edb	kernel.asm	/^c0100edb:	90                   	nop$/;"	l
c0100edc	kernel.asm	/^c0100edc:	90                   	nop$/;"	l
c0100edd	kernel.asm	/^c0100edd:	90                   	nop$/;"	l
c0100ede	kernel.asm	/^c0100ede:	90                   	nop$/;"	l
c0100edf	kernel.asm	/^c0100edf:	90                   	nop$/;"	l
c0100ee0	kernel.asm	/^c0100ee0 <test_setup>:$/;"	l
c0100ee0	kernel.asm	/^c0100ee0:	55                   	push   %ebp$/;"	l
c0100ee1	kernel.asm	/^c0100ee1:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ee3	kernel.asm	/^c0100ee3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100ee6	kernel.asm	/^c0100ee6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0100eed	kernel.asm	/^c0100eed:	00 $/;"	l
c0100eee	kernel.asm	/^c0100eee:	c7 04 24 00 80 44 c0 	movl   $0xc0448000,(%esp)$/;"	l
c0100ef5	kernel.asm	/^c0100ef5:	e8 f6 f3 ff ff       	call   c01002f0 <new_sem>$/;"	l
c0100efa	kernel.asm	/^c0100efa:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
c0100f01	kernel.asm	/^c0100f01:	00 $/;"	l
c0100f02	kernel.asm	/^c0100f02:	c7 04 24 2c 80 44 c0 	movl   $0xc044802c,(%esp)$/;"	l
c0100f09	kernel.asm	/^c0100f09:	e8 e2 f3 ff ff       	call   c01002f0 <new_sem>$/;"	l
c0100f0e	kernel.asm	/^c0100f0e:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0100f15	kernel.asm	/^c0100f15:	00 $/;"	l
c0100f16	kernel.asm	/^c0100f16:	c7 04 24 0c 80 44 c0 	movl   $0xc044800c,(%esp)$/;"	l
c0100f1d	kernel.asm	/^c0100f1d:	e8 ce f3 ff ff       	call   c01002f0 <new_sem>$/;"	l
c0100f22	kernel.asm	/^c0100f22:	c7 04 24 40 0d 10 c0 	movl   $0xc0100d40,(%esp)$/;"	l
c0100f29	kernel.asm	/^c0100f29:	e8 c2 06 00 00       	call   c01015f0 <create_kthread>$/;"	l
c0100f2e	kernel.asm	/^c0100f2e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100f31	kernel.asm	/^c0100f31:	e8 9a 07 00 00       	call   c01016d0 <wakeup>$/;"	l
c0100f36	kernel.asm	/^c0100f36:	c7 04 24 40 0d 10 c0 	movl   $0xc0100d40,(%esp)$/;"	l
c0100f3d	kernel.asm	/^c0100f3d:	e8 ae 06 00 00       	call   c01015f0 <create_kthread>$/;"	l
c0100f42	kernel.asm	/^c0100f42:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100f45	kernel.asm	/^c0100f45:	e8 86 07 00 00       	call   c01016d0 <wakeup>$/;"	l
c0100f4a	kernel.asm	/^c0100f4a:	c7 04 24 40 0d 10 c0 	movl   $0xc0100d40,(%esp)$/;"	l
c0100f51	kernel.asm	/^c0100f51:	e8 9a 06 00 00       	call   c01015f0 <create_kthread>$/;"	l
c0100f56	kernel.asm	/^c0100f56:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100f59	kernel.asm	/^c0100f59:	e8 72 07 00 00       	call   c01016d0 <wakeup>$/;"	l
c0100f5e	kernel.asm	/^c0100f5e:	c7 04 24 90 0b 10 c0 	movl   $0xc0100b90,(%esp)$/;"	l
c0100f65	kernel.asm	/^c0100f65:	e8 86 06 00 00       	call   c01015f0 <create_kthread>$/;"	l
c0100f6a	kernel.asm	/^c0100f6a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100f6d	kernel.asm	/^c0100f6d:	e8 5e 07 00 00       	call   c01016d0 <wakeup>$/;"	l
c0100f72	kernel.asm	/^c0100f72:	c7 04 24 90 0b 10 c0 	movl   $0xc0100b90,(%esp)$/;"	l
c0100f79	kernel.asm	/^c0100f79:	e8 72 06 00 00       	call   c01015f0 <create_kthread>$/;"	l
c0100f7e	kernel.asm	/^c0100f7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100f81	kernel.asm	/^c0100f81:	e8 4a 07 00 00       	call   c01016d0 <wakeup>$/;"	l
c0100f86	kernel.asm	/^c0100f86:	c7 04 24 90 0b 10 c0 	movl   $0xc0100b90,(%esp)$/;"	l
c0100f8d	kernel.asm	/^c0100f8d:	e8 5e 06 00 00       	call   c01015f0 <create_kthread>$/;"	l
c0100f92	kernel.asm	/^c0100f92:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100f95	kernel.asm	/^c0100f95:	e8 36 07 00 00       	call   c01016d0 <wakeup>$/;"	l
c0100f9a	kernel.asm	/^c0100f9a:	c7 04 24 90 0b 10 c0 	movl   $0xc0100b90,(%esp)$/;"	l
c0100fa1	kernel.asm	/^c0100fa1:	e8 4a 06 00 00       	call   c01015f0 <create_kthread>$/;"	l
c0100fa6	kernel.asm	/^c0100fa6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100fa9	kernel.asm	/^c0100fa9:	e8 22 07 00 00       	call   c01016d0 <wakeup>$/;"	l
c0100fae	kernel.asm	/^c0100fae:	c9                   	leave  $/;"	l
c0100faf	kernel.asm	/^c0100faf:	c3                   	ret    $/;"	l
c0100fb0	kernel.asm	/^c0100fb0 <os_init>:$/;"	l
c0100fb0	kernel.asm	/^c0100fb0:	55                   	push   %ebp$/;"	l
c0100fb1	kernel.asm	/^c0100fb1:	89 e5                	mov    %esp,%ebp$/;"	l
c0100fb3	kernel.asm	/^c0100fb3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100fb6	kernel.asm	/^c0100fb6:	e8 b5 fa ff ff       	call   c0100a70 <init_seg>$/;"	l
c0100fbb	kernel.asm	/^c0100fbb:	e8 a0 f9 ff ff       	call   c0100960 <init_debug>$/;"	l
c0100fc0	kernel.asm	/^c0100fc0:	e8 4b 00 00 00       	call   c0101010 <init_idt>$/;"	l
c0100fc5	kernel.asm	/^c0100fc5:	e8 d6 04 00 00       	call   c01014a0 <init_i8259>$/;"	l
c0100fca	kernel.asm	/^c0100fca:	e8 41 05 00 00       	call   c0101510 <queue_init>$/;"	l
c0100fcf	kernel.asm	/^c0100fcf:	c7 04 24 f3 18 10 c0 	movl   $0xc01018f3,(%esp)$/;"	l
c0100fd6	kernel.asm	/^c0100fd6:	e8 c5 f9 ff ff       	call   c01009a0 <printk>$/;"	l
c0100fdb	kernel.asm	/^c0100fdb:	e8 00 ff ff ff       	call   c0100ee0 <test_setup>$/;"	l
c0100fe0	kernel.asm	/^c0100fe0:	fb                   	sti    $/;"	l
c0100fe1	kernel.asm	/^c0100fe1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100fe8	kernel.asm	/^c0100fe8:	f4                   	hlt    $/;"	l
c0100fe9	kernel.asm	/^c0100fe9:	eb fd                	jmp    c0100fe8 <os_init+0x38>$/;"	l
c0100feb	kernel.asm	/^c0100feb:	90                   	nop$/;"	l
c0100fec	kernel.asm	/^c0100fec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100ff0	kernel.asm	/^c0100ff0 <entry>:$/;"	l
c0100ff0	kernel.asm	/^c0100ff0:	55                   	push   %ebp$/;"	l
c0100ff1	kernel.asm	/^c0100ff1:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ff3	kernel.asm	/^c0100ff3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100ff6	kernel.asm	/^c0100ff6:	e8 d5 f9 ff ff       	call   c01009d0 <init_kvm>$/;"	l
c0100ffb	kernel.asm	/^c0100ffb:	81 c4 00 00 00 c0    	add    $0xc0000000,%esp$/;"	l
c0101001	kernel.asm	/^c0101001:	e8 aa ff ff ff       	call   c0100fb0 <os_init>$/;"	l
c0101006	kernel.asm	/^c0101006:	90                   	nop$/;"	l
c0101007	kernel.asm	/^c0101007:	90                   	nop$/;"	l
c0101008	kernel.asm	/^c0101008:	90                   	nop$/;"	l
c0101009	kernel.asm	/^c0101009:	90                   	nop$/;"	l
c010100a	kernel.asm	/^c010100a:	90                   	nop$/;"	l
c010100b	kernel.asm	/^c010100b:	90                   	nop$/;"	l
c010100c	kernel.asm	/^c010100c:	90                   	nop$/;"	l
c010100d	kernel.asm	/^c010100d:	90                   	nop$/;"	l
c010100e	kernel.asm	/^c010100e:	90                   	nop$/;"	l
c010100f	kernel.asm	/^c010100f:	90                   	nop$/;"	l
c0101010	kernel.asm	/^c0101010 <init_idt>:$/;"	l
c0101010	kernel.asm	/^c0101010:	55                   	push   %ebp$/;"	l
c0101011	kernel.asm	/^c0101011:	31 c0                	xor    %eax,%eax$/;"	l
c0101013	kernel.asm	/^c0101013:	89 e5                	mov    %esp,%ebp$/;"	l
c0101015	kernel.asm	/^c0101015:	ba 40 80 44 c0       	mov    $0xc0448040,%edx$/;"	l
c010101a	kernel.asm	/^c010101a:	56                   	push   %esi$/;"	l
c010101b	kernel.asm	/^c010101b:	53                   	push   %ebx$/;"	l
c010101c	kernel.asm	/^c010101c:	bb ea 17 10 c0       	mov    $0xc01017ea,%ebx$/;"	l
c0101021	kernel.asm	/^c0101021:	89 de                	mov    %ebx,%esi$/;"	l
c0101023	kernel.asm	/^c0101023:	c1 eb 10             	shr    $0x10,%ebx$/;"	l
c0101026	kernel.asm	/^c0101026:	66 90                	xchg   %ax,%ax$/;"	l
c0101028	kernel.asm	/^c0101028:	66 89 34 c5 40 80 44 	mov    %si,-0x3fbb7fc0(,%eax,8)$/;"	l
c010102f	kernel.asm	/^c010102f:	c0 $/;"	l
c0101030	kernel.asm	/^c0101030:	b9 40 80 44 c0       	mov    $0xc0448040,%ecx$/;"	l
c0101035	kernel.asm	/^c0101035:	66 c7 44 c2 02 08 00 	movw   $0x8,0x2(%edx,%eax,8)$/;"	l
c010103c	kernel.asm	/^c010103c:	c6 44 c2 04 00       	movb   $0x0,0x4(%edx,%eax,8)$/;"	l
c0101041	kernel.asm	/^c0101041:	c6 44 c2 05 8f       	movb   $0x8f,0x5(%edx,%eax,8)$/;"	l
c0101046	kernel.asm	/^c0101046:	66 89 5c c2 06       	mov    %bx,0x6(%edx,%eax,8)$/;"	l
c010104b	kernel.asm	/^c010104b:	83 c0 01             	add    $0x1,%eax$/;"	l
c010104e	kernel.asm	/^c010104e:	3d 00 01 00 00       	cmp    $0x100,%eax$/;"	l
c0101053	kernel.asm	/^c0101053:	75 d3                	jne    c0101028 <init_idt+0x18>$/;"	l
c0101055	kernel.asm	/^c0101055:	b8 78 17 10 c0       	mov    $0xc0101778,%eax$/;"	l
c010105a	kernel.asm	/^c010105a:	66 a3 40 80 44 c0    	mov    %ax,0xc0448040$/;"	l
c0101060	kernel.asm	/^c0101060:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101063	kernel.asm	/^c0101063:	66 a3 46 80 44 c0    	mov    %ax,0xc0448046$/;"	l
c0101069	kernel.asm	/^c0101069:	b8 7e 17 10 c0       	mov    $0xc010177e,%eax$/;"	l
c010106e	kernel.asm	/^c010106e:	66 a3 48 80 44 c0    	mov    %ax,0xc0448048$/;"	l
c0101074	kernel.asm	/^c0101074:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101077	kernel.asm	/^c0101077:	66 a3 4e 80 44 c0    	mov    %ax,0xc044804e$/;"	l
c010107d	kernel.asm	/^c010107d:	b8 84 17 10 c0       	mov    $0xc0101784,%eax$/;"	l
c0101082	kernel.asm	/^c0101082:	66 a3 50 80 44 c0    	mov    %ax,0xc0448050$/;"	l
c0101088	kernel.asm	/^c0101088:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010108b	kernel.asm	/^c010108b:	66 a3 56 80 44 c0    	mov    %ax,0xc0448056$/;"	l
c0101091	kernel.asm	/^c0101091:	b8 8a 17 10 c0       	mov    $0xc010178a,%eax$/;"	l
c0101096	kernel.asm	/^c0101096:	66 a3 58 80 44 c0    	mov    %ax,0xc0448058$/;"	l
c010109c	kernel.asm	/^c010109c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010109f	kernel.asm	/^c010109f:	66 a3 5e 80 44 c0    	mov    %ax,0xc044805e$/;"	l
c01010a5	kernel.asm	/^c01010a5:	b8 90 17 10 c0       	mov    $0xc0101790,%eax$/;"	l
c01010aa	kernel.asm	/^c01010aa:	66 a3 60 80 44 c0    	mov    %ax,0xc0448060$/;"	l
c01010b0	kernel.asm	/^c01010b0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01010b3	kernel.asm	/^c01010b3:	66 a3 66 80 44 c0    	mov    %ax,0xc0448066$/;"	l
c01010b9	kernel.asm	/^c01010b9:	b8 96 17 10 c0       	mov    $0xc0101796,%eax$/;"	l
c01010be	kernel.asm	/^c01010be:	66 a3 68 80 44 c0    	mov    %ax,0xc0448068$/;"	l
c01010c4	kernel.asm	/^c01010c4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01010c7	kernel.asm	/^c01010c7:	66 a3 6e 80 44 c0    	mov    %ax,0xc044806e$/;"	l
c01010cd	kernel.asm	/^c01010cd:	b8 9c 17 10 c0       	mov    $0xc010179c,%eax$/;"	l
c01010d2	kernel.asm	/^c01010d2:	66 a3 70 80 44 c0    	mov    %ax,0xc0448070$/;"	l
c01010d8	kernel.asm	/^c01010d8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01010db	kernel.asm	/^c01010db:	66 c7 05 42 80 44 c0 	movw   $0x8,0xc0448042$/;"	l
c01010e2	kernel.asm	/^c01010e2:	08 00 $/;"	l
c01010e4	kernel.asm	/^c01010e4:	c6 05 44 80 44 c0 00 	movb   $0x0,0xc0448044$/;"	l
c01010eb	kernel.asm	/^c01010eb:	c6 05 45 80 44 c0 8f 	movb   $0x8f,0xc0448045$/;"	l
c01010f2	kernel.asm	/^c01010f2:	66 c7 05 4a 80 44 c0 	movw   $0x8,0xc044804a$/;"	l
c01010f9	kernel.asm	/^c01010f9:	08 00 $/;"	l
c01010fb	kernel.asm	/^c01010fb:	c6 05 4c 80 44 c0 00 	movb   $0x0,0xc044804c$/;"	l
c0101102	kernel.asm	/^c0101102:	c6 05 4d 80 44 c0 8f 	movb   $0x8f,0xc044804d$/;"	l
c0101109	kernel.asm	/^c0101109:	66 c7 05 52 80 44 c0 	movw   $0x8,0xc0448052$/;"	l
c0101110	kernel.asm	/^c0101110:	08 00 $/;"	l
c0101112	kernel.asm	/^c0101112:	c6 05 54 80 44 c0 00 	movb   $0x0,0xc0448054$/;"	l
c0101119	kernel.asm	/^c0101119:	c6 05 55 80 44 c0 8f 	movb   $0x8f,0xc0448055$/;"	l
c0101120	kernel.asm	/^c0101120:	66 c7 05 5a 80 44 c0 	movw   $0x8,0xc044805a$/;"	l
c0101127	kernel.asm	/^c0101127:	08 00 $/;"	l
c0101129	kernel.asm	/^c0101129:	c6 05 5c 80 44 c0 00 	movb   $0x0,0xc044805c$/;"	l
c0101130	kernel.asm	/^c0101130:	c6 05 5d 80 44 c0 8f 	movb   $0x8f,0xc044805d$/;"	l
c0101137	kernel.asm	/^c0101137:	66 c7 05 62 80 44 c0 	movw   $0x8,0xc0448062$/;"	l
c010113e	kernel.asm	/^c010113e:	08 00 $/;"	l
c0101140	kernel.asm	/^c0101140:	c6 05 64 80 44 c0 00 	movb   $0x0,0xc0448064$/;"	l
c0101147	kernel.asm	/^c0101147:	c6 05 65 80 44 c0 8f 	movb   $0x8f,0xc0448065$/;"	l
c010114e	kernel.asm	/^c010114e:	66 c7 05 6a 80 44 c0 	movw   $0x8,0xc044806a$/;"	l
c0101155	kernel.asm	/^c0101155:	08 00 $/;"	l
c0101157	kernel.asm	/^c0101157:	c6 05 6c 80 44 c0 00 	movb   $0x0,0xc044806c$/;"	l
c010115e	kernel.asm	/^c010115e:	c6 05 6d 80 44 c0 8f 	movb   $0x8f,0xc044806d$/;"	l
c0101165	kernel.asm	/^c0101165:	66 c7 05 72 80 44 c0 	movw   $0x8,0xc0448072$/;"	l
c010116c	kernel.asm	/^c010116c:	08 00 $/;"	l
c010116e	kernel.asm	/^c010116e:	c6 05 74 80 44 c0 00 	movb   $0x0,0xc0448074$/;"	l
c0101175	kernel.asm	/^c0101175:	c6 05 75 80 44 c0 8f 	movb   $0x8f,0xc0448075$/;"	l
c010117c	kernel.asm	/^c010117c:	66 a3 76 80 44 c0    	mov    %ax,0xc0448076$/;"	l
c0101182	kernel.asm	/^c0101182:	b8 a2 17 10 c0       	mov    $0xc01017a2,%eax$/;"	l
c0101187	kernel.asm	/^c0101187:	66 a3 78 80 44 c0    	mov    %ax,0xc0448078$/;"	l
c010118d	kernel.asm	/^c010118d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101190	kernel.asm	/^c0101190:	66 a3 7e 80 44 c0    	mov    %ax,0xc044807e$/;"	l
c0101196	kernel.asm	/^c0101196:	b8 a8 17 10 c0       	mov    $0xc01017a8,%eax$/;"	l
c010119b	kernel.asm	/^c010119b:	66 a3 80 80 44 c0    	mov    %ax,0xc0448080$/;"	l
c01011a1	kernel.asm	/^c01011a1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01011a4	kernel.asm	/^c01011a4:	66 a3 86 80 44 c0    	mov    %ax,0xc0448086$/;"	l
c01011aa	kernel.asm	/^c01011aa:	b8 ac 17 10 c0       	mov    $0xc01017ac,%eax$/;"	l
c01011af	kernel.asm	/^c01011af:	66 a3 88 80 44 c0    	mov    %ax,0xc0448088$/;"	l
c01011b5	kernel.asm	/^c01011b5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01011b8	kernel.asm	/^c01011b8:	66 a3 8e 80 44 c0    	mov    %ax,0xc044808e$/;"	l
c01011be	kernel.asm	/^c01011be:	b8 b2 17 10 c0       	mov    $0xc01017b2,%eax$/;"	l
c01011c3	kernel.asm	/^c01011c3:	66 a3 90 80 44 c0    	mov    %ax,0xc0448090$/;"	l
c01011c9	kernel.asm	/^c01011c9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01011cc	kernel.asm	/^c01011cc:	66 a3 96 80 44 c0    	mov    %ax,0xc0448096$/;"	l
c01011d2	kernel.asm	/^c01011d2:	b8 b6 17 10 c0       	mov    $0xc01017b6,%eax$/;"	l
c01011d7	kernel.asm	/^c01011d7:	66 a3 98 80 44 c0    	mov    %ax,0xc0448098$/;"	l
c01011dd	kernel.asm	/^c01011dd:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01011e0	kernel.asm	/^c01011e0:	66 a3 9e 80 44 c0    	mov    %ax,0xc044809e$/;"	l
c01011e6	kernel.asm	/^c01011e6:	b8 ba 17 10 c0       	mov    $0xc01017ba,%eax$/;"	l
c01011eb	kernel.asm	/^c01011eb:	66 a3 a0 80 44 c0    	mov    %ax,0xc04480a0$/;"	l
c01011f1	kernel.asm	/^c01011f1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01011f4	kernel.asm	/^c01011f4:	66 a3 a6 80 44 c0    	mov    %ax,0xc04480a6$/;"	l
c01011fa	kernel.asm	/^c01011fa:	b8 be 17 10 c0       	mov    $0xc01017be,%eax$/;"	l
c01011ff	kernel.asm	/^c01011ff:	66 a3 a8 80 44 c0    	mov    %ax,0xc04480a8$/;"	l
c0101205	kernel.asm	/^c0101205:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101208	kernel.asm	/^c0101208:	66 c7 05 7a 80 44 c0 	movw   $0x8,0xc044807a$/;"	l
c010120f	kernel.asm	/^c010120f:	08 00 $/;"	l
c0101211	kernel.asm	/^c0101211:	c6 05 7c 80 44 c0 00 	movb   $0x0,0xc044807c$/;"	l
c0101218	kernel.asm	/^c0101218:	c6 05 7d 80 44 c0 8f 	movb   $0x8f,0xc044807d$/;"	l
c010121f	kernel.asm	/^c010121f:	66 c7 05 82 80 44 c0 	movw   $0x8,0xc0448082$/;"	l
c0101226	kernel.asm	/^c0101226:	08 00 $/;"	l
c0101228	kernel.asm	/^c0101228:	c6 05 84 80 44 c0 00 	movb   $0x0,0xc0448084$/;"	l
c010122f	kernel.asm	/^c010122f:	c6 05 85 80 44 c0 8f 	movb   $0x8f,0xc0448085$/;"	l
c0101236	kernel.asm	/^c0101236:	66 c7 05 8a 80 44 c0 	movw   $0x8,0xc044808a$/;"	l
c010123d	kernel.asm	/^c010123d:	08 00 $/;"	l
c010123f	kernel.asm	/^c010123f:	c6 05 8c 80 44 c0 00 	movb   $0x0,0xc044808c$/;"	l
c0101246	kernel.asm	/^c0101246:	c6 05 8d 80 44 c0 8f 	movb   $0x8f,0xc044808d$/;"	l
c010124d	kernel.asm	/^c010124d:	66 c7 05 92 80 44 c0 	movw   $0x8,0xc0448092$/;"	l
c0101254	kernel.asm	/^c0101254:	08 00 $/;"	l
c0101256	kernel.asm	/^c0101256:	c6 05 94 80 44 c0 00 	movb   $0x0,0xc0448094$/;"	l
c010125d	kernel.asm	/^c010125d:	c6 05 95 80 44 c0 8f 	movb   $0x8f,0xc0448095$/;"	l
c0101264	kernel.asm	/^c0101264:	66 c7 05 9a 80 44 c0 	movw   $0x8,0xc044809a$/;"	l
c010126b	kernel.asm	/^c010126b:	08 00 $/;"	l
c010126d	kernel.asm	/^c010126d:	c6 05 9c 80 44 c0 00 	movb   $0x0,0xc044809c$/;"	l
c0101274	kernel.asm	/^c0101274:	c6 05 9d 80 44 c0 8f 	movb   $0x8f,0xc044809d$/;"	l
c010127b	kernel.asm	/^c010127b:	66 c7 05 a2 80 44 c0 	movw   $0x8,0xc04480a2$/;"	l
c0101282	kernel.asm	/^c0101282:	08 00 $/;"	l
c0101284	kernel.asm	/^c0101284:	c6 05 a4 80 44 c0 00 	movb   $0x0,0xc04480a4$/;"	l
c010128b	kernel.asm	/^c010128b:	c6 05 a5 80 44 c0 8f 	movb   $0x8f,0xc04480a5$/;"	l
c0101292	kernel.asm	/^c0101292:	66 c7 05 aa 80 44 c0 	movw   $0x8,0xc04480aa$/;"	l
c0101299	kernel.asm	/^c0101299:	08 00 $/;"	l
c010129b	kernel.asm	/^c010129b:	c6 05 ac 80 44 c0 00 	movb   $0x0,0xc04480ac$/;"	l
c01012a2	kernel.asm	/^c01012a2:	66 a3 ae 80 44 c0    	mov    %ax,0xc04480ae$/;"	l
c01012a8	kernel.asm	/^c01012a8:	b8 c2 17 10 c0       	mov    $0xc01017c2,%eax$/;"	l
c01012ad	kernel.asm	/^c01012ad:	66 a3 b0 80 44 c0    	mov    %ax,0xc04480b0$/;"	l
c01012b3	kernel.asm	/^c01012b3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01012b6	kernel.asm	/^c01012b6:	66 a3 b6 80 44 c0    	mov    %ax,0xc04480b6$/;"	l
c01012bc	kernel.asm	/^c01012bc:	b8 cf 17 10 c0       	mov    $0xc01017cf,%eax$/;"	l
c01012c1	kernel.asm	/^c01012c1:	66 a3 40 81 44 c0    	mov    %ax,0xc0448140$/;"	l
c01012c7	kernel.asm	/^c01012c7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01012ca	kernel.asm	/^c01012ca:	66 a3 46 81 44 c0    	mov    %ax,0xc0448146$/;"	l
c01012d0	kernel.asm	/^c01012d0:	b8 d8 17 10 c0       	mov    $0xc01017d8,%eax$/;"	l
c01012d5	kernel.asm	/^c01012d5:	66 a3 48 81 44 c0    	mov    %ax,0xc0448148$/;"	l
c01012db	kernel.asm	/^c01012db:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01012de	kernel.asm	/^c01012de:	66 a3 4e 81 44 c0    	mov    %ax,0xc044814e$/;"	l
c01012e4	kernel.asm	/^c01012e4:	b8 e1 17 10 c0       	mov    $0xc01017e1,%eax$/;"	l
c01012e9	kernel.asm	/^c01012e9:	66 a3 b0 81 44 c0    	mov    %ax,0xc04481b0$/;"	l
c01012ef	kernel.asm	/^c01012ef:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01012f2	kernel.asm	/^c01012f2:	66 a3 b6 81 44 c0    	mov    %ax,0xc04481b6$/;"	l
c01012f8	kernel.asm	/^c01012f8:	b8 c6 17 10 c0       	mov    $0xc01017c6,%eax$/;"	l
c01012fd	kernel.asm	/^c01012fd:	66 c7 05 04 31 10 c0 	movw   $0x7ff,0xc0103104$/;"	l
c0101304	kernel.asm	/^c0101304:	ff 07 $/;"	l
c0101306	kernel.asm	/^c0101306:	66 a3 40 84 44 c0    	mov    %ax,0xc0448440$/;"	l
c010130c	kernel.asm	/^c010130c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010130f	kernel.asm	/^c010130f:	66 89 0d 06 31 10 c0 	mov    %cx,0xc0103106$/;"	l
c0101316	kernel.asm	/^c0101316:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
c0101319	kernel.asm	/^c0101319:	66 a3 46 84 44 c0    	mov    %ax,0xc0448446$/;"	l
c010131f	kernel.asm	/^c010131f:	b8 04 31 10 c0       	mov    $0xc0103104,%eax$/;"	l
c0101324	kernel.asm	/^c0101324:	66 89 0d 08 31 10 c0 	mov    %cx,0xc0103108$/;"	l
c010132b	kernel.asm	/^c010132b:	c6 05 ad 80 44 c0 8f 	movb   $0x8f,0xc04480ad$/;"	l
c0101332	kernel.asm	/^c0101332:	0f 01 18             	lidtl  (%eax)$/;"	l
c0101335	kernel.asm	/^c0101335:	66 c7 05 b2 80 44 c0 	movw   $0x8,0xc04480b2$/;"	l
c010133c	kernel.asm	/^c010133c:	08 00 $/;"	l
c010133e	kernel.asm	/^c010133e:	5b                   	pop    %ebx$/;"	l
c010133f	kernel.asm	/^c010133f:	c6 05 b4 80 44 c0 00 	movb   $0x0,0xc04480b4$/;"	l
c0101346	kernel.asm	/^c0101346:	5e                   	pop    %esi$/;"	l
c0101347	kernel.asm	/^c0101347:	c6 05 b5 80 44 c0 8f 	movb   $0x8f,0xc04480b5$/;"	l
c010134e	kernel.asm	/^c010134e:	66 c7 05 42 81 44 c0 	movw   $0x8,0xc0448142$/;"	l
c0101355	kernel.asm	/^c0101355:	08 00 $/;"	l
c0101357	kernel.asm	/^c0101357:	c6 05 44 81 44 c0 00 	movb   $0x0,0xc0448144$/;"	l
c010135e	kernel.asm	/^c010135e:	c6 05 45 81 44 c0 8e 	movb   $0x8e,0xc0448145$/;"	l
c0101365	kernel.asm	/^c0101365:	66 c7 05 4a 81 44 c0 	movw   $0x8,0xc044814a$/;"	l
c010136c	kernel.asm	/^c010136c:	08 00 $/;"	l
c010136e	kernel.asm	/^c010136e:	c6 05 4c 81 44 c0 00 	movb   $0x0,0xc044814c$/;"	l
c0101375	kernel.asm	/^c0101375:	c6 05 4d 81 44 c0 8e 	movb   $0x8e,0xc044814d$/;"	l
c010137c	kernel.asm	/^c010137c:	66 c7 05 b2 81 44 c0 	movw   $0x8,0xc04481b2$/;"	l
c0101383	kernel.asm	/^c0101383:	08 00 $/;"	l
c0101385	kernel.asm	/^c0101385:	c6 05 b4 81 44 c0 00 	movb   $0x0,0xc04481b4$/;"	l
c010138c	kernel.asm	/^c010138c:	c6 05 b5 81 44 c0 8e 	movb   $0x8e,0xc04481b5$/;"	l
c0101393	kernel.asm	/^c0101393:	66 c7 05 42 84 44 c0 	movw   $0x8,0xc0448442$/;"	l
c010139a	kernel.asm	/^c010139a:	08 00 $/;"	l
c010139c	kernel.asm	/^c010139c:	c6 05 44 84 44 c0 00 	movb   $0x0,0xc0448444$/;"	l
c01013a3	kernel.asm	/^c01013a3:	c6 05 45 84 44 c0 ef 	movb   $0xef,0xc0448445$/;"	l
c01013aa	kernel.asm	/^c01013aa:	5d                   	pop    %ebp$/;"	l
c01013ab	kernel.asm	/^c01013ab:	c3                   	ret    $/;"	l
c01013ac	kernel.asm	/^c01013ac:	90                   	nop$/;"	l
c01013ad	kernel.asm	/^c01013ad:	90                   	nop$/;"	l
c01013ae	kernel.asm	/^c01013ae:	90                   	nop$/;"	l
c01013af	kernel.asm	/^c01013af:	90                   	nop$/;"	l
c01013b0	kernel.asm	/^c01013b0 <irq_handle>:$/;"	l
c01013b0	kernel.asm	/^c01013b0:	55                   	push   %ebp$/;"	l
c01013b1	kernel.asm	/^c01013b1:	89 e5                	mov    %esp,%ebp$/;"	l
c01013b3	kernel.asm	/^c01013b3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01013b6	kernel.asm	/^c01013b6:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
c01013b9	kernel.asm	/^c01013b9:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
c01013bc	kernel.asm	/^c01013bc:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
c01013bf	kernel.asm	/^c01013bf:	8b 73 30             	mov    0x30(%ebx),%esi$/;"	l
c01013c2	kernel.asm	/^c01013c2:	85 f6                	test   %esi,%esi$/;"	l
c01013c4	kernel.asm	/^c01013c4:	0f 88 ae 00 00 00    	js     c0101478 <irq_handle+0xc8>$/;"	l
c01013ca	kernel.asm	/^c01013ca:	81 fe 80 00 00 00    	cmp    $0x80,%esi$/;"	l
c01013d0	kernel.asm	/^c01013d0:	75 46                	jne    c0101418 <irq_handle+0x68>$/;"	l
c01013d2	kernel.asm	/^c01013d2:	81 fe 80 00 00 00    	cmp    $0x80,%esi$/;"	l
c01013d8	kernel.asm	/^c01013d8:	75 26                	jne    c0101400 <irq_handle+0x50>$/;"	l
c01013da	kernel.asm	/^c01013da:	a1 0c 31 10 c0       	mov    0xc010310c,%eax$/;"	l
c01013df	kernel.asm	/^c01013df:	85 c0                	test   %eax,%eax$/;"	l
c01013e1	kernel.asm	/^c01013e1:	74 07                	je     c01013ea <irq_handle+0x3a>$/;"	l
c01013e3	kernel.asm	/^c01013e3:	89 18                	mov    %ebx,(%eax)$/;"	l
c01013e5	kernel.asm	/^c01013e5:	e8 46 01 00 00       	call   c0101530 <schedule>$/;"	l
c01013ea	kernel.asm	/^c01013ea:	e8 c1 01 00 00       	call   c01015b0 <next_process>$/;"	l
c01013ef	kernel.asm	/^c01013ef:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
c01013f2	kernel.asm	/^c01013f2:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
c01013f5	kernel.asm	/^c01013f5:	a3 0c 31 10 c0       	mov    %eax,0xc010310c$/;"	l
c01013fa	kernel.asm	/^c01013fa:	89 ec                	mov    %ebp,%esp$/;"	l
c01013fc	kernel.asm	/^c01013fc:	5d                   	pop    %ebp$/;"	l
c01013fd	kernel.asm	/^c01013fd:	c3                   	ret    $/;"	l
c01013fe	kernel.asm	/^c01013fe:	66 90                	xchg   %ax,%ax$/;"	l
c0101400	kernel.asm	/^c0101400:	81 fe e7 03 00 00    	cmp    $0x3e7,%esi$/;"	l
c0101406	kernel.asm	/^c0101406:	7f d2                	jg     c01013da <irq_handle+0x2a>$/;"	l
c0101408	kernel.asm	/^c0101408:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
c010140b	kernel.asm	/^c010140b:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
c010140e	kernel.asm	/^c010140e:	89 ec                	mov    %ebp,%esp$/;"	l
c0101410	kernel.asm	/^c0101410:	5d                   	pop    %ebp$/;"	l
c0101411	kernel.asm	/^c0101411:	c3                   	ret    $/;"	l
c0101412	kernel.asm	/^c0101412:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0101418	kernel.asm	/^c0101418:	81 fe e7 03 00 00    	cmp    $0x3e7,%esi$/;"	l
c010141e	kernel.asm	/^c010141e:	7f b2                	jg     c01013d2 <irq_handle+0x22>$/;"	l
c0101420	kernel.asm	/^c0101420:	fa                   	cli    $/;"	l
c0101421	kernel.asm	/^c0101421:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
c0101425	kernel.asm	/^c0101425:	c7 04 24 27 19 10 c0 	movl   $0xc0101927,(%esp)$/;"	l
c010142c	kernel.asm	/^c010142c:	e8 6f f5 ff ff       	call   c01009a0 <printk>$/;"	l
c0101431	kernel.asm	/^c0101431:	8b 43 34             	mov    0x34(%ebx),%eax$/;"	l
c0101434	kernel.asm	/^c0101434:	c7 04 24 41 19 10 c0 	movl   $0xc0101941,(%esp)$/;"	l
c010143b	kernel.asm	/^c010143b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010143f	kernel.asm	/^c010143f:	e8 5c f5 ff ff       	call   c01009a0 <printk>$/;"	l
c0101444	kernel.asm	/^c0101444:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0101448	kernel.asm	/^c0101448:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
c010144b	kernel.asm	/^c010144b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010144f	kernel.asm	/^c010144f:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
c0101452	kernel.asm	/^c0101452:	c7 04 24 50 19 10 c0 	movl   $0xc0101950,(%esp)$/;"	l
c0101459	kernel.asm	/^c0101459:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010145d	kernel.asm	/^c010145d:	e8 3e f5 ff ff       	call   c01009a0 <printk>$/;"	l
c0101462	kernel.asm	/^c0101462:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
c0101465	kernel.asm	/^c0101465:	c7 45 08 6a 19 10 c0 	movl   $0xc010196a,0x8(%ebp)$/;"	l
c010146c	kernel.asm	/^c010146c:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
c010146f	kernel.asm	/^c010146f:	89 ec                	mov    %ebp,%esp$/;"	l
c0101471	kernel.asm	/^c0101471:	5d                   	pop    %ebp$/;"	l
c0101472	kernel.asm	/^c0101472:	e9 69 ed ff ff       	jmp    c01001e0 <panic>$/;"	l
c0101477	kernel.asm	/^c0101477:	90                   	nop$/;"	l
c0101478	kernel.asm	/^c0101478:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
c010147f	kernel.asm	/^c010147f:	00 $/;"	l
c0101480	kernel.asm	/^c0101480:	c7 04 24 0b 19 10 c0 	movl   $0xc010190b,(%esp)$/;"	l
c0101487	kernel.asm	/^c0101487:	e8 24 ed ff ff       	call   c01001b0 <abort>$/;"	l
c010148c	kernel.asm	/^c010148c:	e9 39 ff ff ff       	jmp    c01013ca <irq_handle+0x1a>$/;"	l
c0101491	kernel.asm	/^c0101491:	90                   	nop$/;"	l
c0101492	kernel.asm	/^c0101492:	90                   	nop$/;"	l
c0101493	kernel.asm	/^c0101493:	90                   	nop$/;"	l
c0101494	kernel.asm	/^c0101494:	90                   	nop$/;"	l
c0101495	kernel.asm	/^c0101495:	90                   	nop$/;"	l
c0101496	kernel.asm	/^c0101496:	90                   	nop$/;"	l
c0101497	kernel.asm	/^c0101497:	90                   	nop$/;"	l
c0101498	kernel.asm	/^c0101498:	90                   	nop$/;"	l
c0101499	kernel.asm	/^c0101499:	90                   	nop$/;"	l
c010149a	kernel.asm	/^c010149a:	90                   	nop$/;"	l
c010149b	kernel.asm	/^c010149b:	90                   	nop$/;"	l
c010149c	kernel.asm	/^c010149c:	90                   	nop$/;"	l
c010149d	kernel.asm	/^c010149d:	90                   	nop$/;"	l
c010149e	kernel.asm	/^c010149e:	90                   	nop$/;"	l
c010149f	kernel.asm	/^c010149f:	90                   	nop$/;"	l
c01014a0	kernel.asm	/^c01014a0 <init_i8259>:$/;"	l
c01014a0	kernel.asm	/^c01014a0:	55                   	push   %ebp$/;"	l
c01014a1	kernel.asm	/^c01014a1:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
c01014a6	kernel.asm	/^c01014a6:	89 e5                	mov    %esp,%ebp$/;"	l
c01014a8	kernel.asm	/^c01014a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01014ad	kernel.asm	/^c01014ad:	ee                   	out    %al,(%dx)$/;"	l
c01014ae	kernel.asm	/^c01014ae:	b2 a1                	mov    $0xa1,%dl$/;"	l
c01014b0	kernel.asm	/^c01014b0:	ee                   	out    %al,(%dx)$/;"	l
c01014b1	kernel.asm	/^c01014b1:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
c01014b6	kernel.asm	/^c01014b6:	b2 20                	mov    $0x20,%dl$/;"	l
c01014b8	kernel.asm	/^c01014b8:	ee                   	out    %al,(%dx)$/;"	l
c01014b9	kernel.asm	/^c01014b9:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
c01014be	kernel.asm	/^c01014be:	b2 21                	mov    $0x21,%dl$/;"	l
c01014c0	kernel.asm	/^c01014c0:	ee                   	out    %al,(%dx)$/;"	l
c01014c1	kernel.asm	/^c01014c1:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
c01014c6	kernel.asm	/^c01014c6:	ee                   	out    %al,(%dx)$/;"	l
c01014c7	kernel.asm	/^c01014c7:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
c01014cc	kernel.asm	/^c01014cc:	ee                   	out    %al,(%dx)$/;"	l
c01014cd	kernel.asm	/^c01014cd:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
c01014d2	kernel.asm	/^c01014d2:	b2 a0                	mov    $0xa0,%dl$/;"	l
c01014d4	kernel.asm	/^c01014d4:	ee                   	out    %al,(%dx)$/;"	l
c01014d5	kernel.asm	/^c01014d5:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
c01014da	kernel.asm	/^c01014da:	b2 a1                	mov    $0xa1,%dl$/;"	l
c01014dc	kernel.asm	/^c01014dc:	ee                   	out    %al,(%dx)$/;"	l
c01014dd	kernel.asm	/^c01014dd:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
c01014e2	kernel.asm	/^c01014e2:	ee                   	out    %al,(%dx)$/;"	l
c01014e3	kernel.asm	/^c01014e3:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
c01014e8	kernel.asm	/^c01014e8:	ee                   	out    %al,(%dx)$/;"	l
c01014e9	kernel.asm	/^c01014e9:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
c01014ee	kernel.asm	/^c01014ee:	b2 20                	mov    $0x20,%dl$/;"	l
c01014f0	kernel.asm	/^c01014f0:	ee                   	out    %al,(%dx)$/;"	l
c01014f1	kernel.asm	/^c01014f1:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
c01014f6	kernel.asm	/^c01014f6:	ee                   	out    %al,(%dx)$/;"	l
c01014f7	kernel.asm	/^c01014f7:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
c01014fc	kernel.asm	/^c01014fc:	b2 a0                	mov    $0xa0,%dl$/;"	l
c01014fe	kernel.asm	/^c01014fe:	ee                   	out    %al,(%dx)$/;"	l
c01014ff	kernel.asm	/^c01014ff:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
c0101504	kernel.asm	/^c0101504:	ee                   	out    %al,(%dx)$/;"	l
c0101505	kernel.asm	/^c0101505:	5d                   	pop    %ebp$/;"	l
c0101506	kernel.asm	/^c0101506:	c3                   	ret    $/;"	l
c0101507	kernel.asm	/^c0101507:	90                   	nop$/;"	l
c0101508	kernel.asm	/^c0101508:	90                   	nop$/;"	l
c0101509	kernel.asm	/^c0101509:	90                   	nop$/;"	l
c010150a	kernel.asm	/^c010150a:	90                   	nop$/;"	l
c010150b	kernel.asm	/^c010150b:	90                   	nop$/;"	l
c010150c	kernel.asm	/^c010150c:	90                   	nop$/;"	l
c010150d	kernel.asm	/^c010150d:	90                   	nop$/;"	l
c010150e	kernel.asm	/^c010150e:	90                   	nop$/;"	l
c010150f	kernel.asm	/^c010150f:	90                   	nop$/;"	l
c0101510	kernel.asm	/^c0101510 <queue_init>:$/;"	l
c0101510	kernel.asm	/^c0101510:	55                   	push   %ebp$/;"	l
c0101511	kernel.asm	/^c0101511:	89 e5                	mov    %esp,%ebp$/;"	l
c0101513	kernel.asm	/^c0101513:	c7 05 44 88 44 c0 40 	movl   $0xc0448840,0xc0448844$/;"	l
c010151a	kernel.asm	/^c010151a:	88 44 c0 $/;"	l
c010151d	kernel.asm	/^c010151d:	c7 05 40 88 44 c0 40 	movl   $0xc0448840,0xc0448840$/;"	l
c0101524	kernel.asm	/^c0101524:	88 44 c0 $/;"	l
c0101527	kernel.asm	/^c0101527:	5d                   	pop    %ebp$/;"	l
c0101528	kernel.asm	/^c0101528:	c3                   	ret    $/;"	l
c0101529	kernel.asm	/^c0101529:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0101530	kernel.asm	/^c0101530 <schedule>:$/;"	l
c0101530	kernel.asm	/^c0101530:	55                   	push   %ebp$/;"	l
c0101531	kernel.asm	/^c0101531:	89 e5                	mov    %esp,%ebp$/;"	l
c0101533	kernel.asm	/^c0101533:	53                   	push   %ebx$/;"	l
c0101534	kernel.asm	/^c0101534:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0101537	kernel.asm	/^c0101537:	81 3d 44 88 44 c0 40 	cmpl   $0xc0448840,0xc0448844$/;"	l
c010153e	kernel.asm	/^c010153e:	88 44 c0 $/;"	l
c0101541	kernel.asm	/^c0101541:	74 3d                	je     c0101580 <schedule+0x50>$/;"	l
c0101543	kernel.asm	/^c0101543:	8b 1d 40 88 44 c0    	mov    0xc0448840,%ebx$/;"	l
c0101549	kernel.asm	/^c0101549:	85 db                	test   %ebx,%ebx$/;"	l
c010154b	kernel.asm	/^c010154b:	74 4b                	je     c0101598 <schedule+0x68>$/;"	l
c010154d	kernel.asm	/^c010154d:	8b 13                	mov    (%ebx),%edx$/;"	l
c010154f	kernel.asm	/^c010154f:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
c0101552	kernel.asm	/^c0101552:	85 d2                	test   %edx,%edx$/;"	l
c0101554	kernel.asm	/^c0101554:	74 03                	je     c0101559 <schedule+0x29>$/;"	l
c0101556	kernel.asm	/^c0101556:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0101559	kernel.asm	/^c0101559:	85 c0                	test   %eax,%eax$/;"	l
c010155b	kernel.asm	/^c010155b:	74 02                	je     c010155f <schedule+0x2f>$/;"	l
c010155d	kernel.asm	/^c010155d:	89 10                	mov    %edx,(%eax)$/;"	l
c010155f	kernel.asm	/^c010155f:	a1 44 88 44 c0       	mov    0xc0448844,%eax$/;"	l
c0101564	kernel.asm	/^c0101564:	c7 03 40 88 44 c0    	movl   $0xc0448840,(%ebx)$/;"	l
c010156a	kernel.asm	/^c010156a:	85 c0                	test   %eax,%eax$/;"	l
c010156c	kernel.asm	/^c010156c:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
c010156f	kernel.asm	/^c010156f:	89 1d 44 88 44 c0    	mov    %ebx,0xc0448844$/;"	l
c0101575	kernel.asm	/^c0101575:	74 02                	je     c0101579 <schedule+0x49>$/;"	l
c0101577	kernel.asm	/^c0101577:	89 18                	mov    %ebx,(%eax)$/;"	l
c0101579	kernel.asm	/^c0101579:	83 c4 14             	add    $0x14,%esp$/;"	l
c010157c	kernel.asm	/^c010157c:	5b                   	pop    %ebx$/;"	l
c010157d	kernel.asm	/^c010157d:	5d                   	pop    %ebp$/;"	l
c010157e	kernel.asm	/^c010157e:	c3                   	ret    $/;"	l
c010157f	kernel.asm	/^c010157f:	90                   	nop$/;"	l
c0101580	kernel.asm	/^c0101580:	c7 44 24 04 1e 00 00 	movl   $0x1e,0x4(%esp)$/;"	l
c0101587	kernel.asm	/^c0101587:	00 $/;"	l
c0101588	kernel.asm	/^c0101588:	c7 04 24 7f 19 10 c0 	movl   $0xc010197f,(%esp)$/;"	l
c010158f	kernel.asm	/^c010158f:	e8 1c ec ff ff       	call   c01001b0 <abort>$/;"	l
c0101594	kernel.asm	/^c0101594:	eb ad                	jmp    c0101543 <schedule+0x13>$/;"	l
c0101596	kernel.asm	/^c0101596:	66 90                	xchg   %ax,%ax$/;"	l
c0101598	kernel.asm	/^c0101598:	c7 44 24 04 23 00 00 	movl   $0x23,0x4(%esp)$/;"	l
c010159f	kernel.asm	/^c010159f:	00 $/;"	l
c01015a0	kernel.asm	/^c01015a0:	c7 04 24 9b 18 10 c0 	movl   $0xc010189b,(%esp)$/;"	l
c01015a7	kernel.asm	/^c01015a7:	e8 04 ec ff ff       	call   c01001b0 <abort>$/;"	l
c01015ac	kernel.asm	/^c01015ac:	eb 9f                	jmp    c010154d <schedule+0x1d>$/;"	l
c01015ae	kernel.asm	/^c01015ae:	66 90                	xchg   %ax,%ax$/;"	l
c01015b0	kernel.asm	/^c01015b0 <next_process>:$/;"	l
c01015b0	kernel.asm	/^c01015b0:	55                   	push   %ebp$/;"	l
c01015b1	kernel.asm	/^c01015b1:	89 e5                	mov    %esp,%ebp$/;"	l
c01015b3	kernel.asm	/^c01015b3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01015b6	kernel.asm	/^c01015b6:	a1 44 88 44 c0       	mov    0xc0448844,%eax$/;"	l
c01015bb	kernel.asm	/^c01015bb:	3d 40 88 44 c0       	cmp    $0xc0448840,%eax$/;"	l
c01015c0	kernel.asm	/^c01015c0:	74 06                	je     c01015c8 <next_process+0x18>$/;"	l
c01015c2	kernel.asm	/^c01015c2:	83 e8 04             	sub    $0x4,%eax$/;"	l
c01015c5	kernel.asm	/^c01015c5:	c9                   	leave  $/;"	l
c01015c6	kernel.asm	/^c01015c6:	c3                   	ret    $/;"	l
c01015c7	kernel.asm	/^c01015c7:	90                   	nop$/;"	l
c01015c8	kernel.asm	/^c01015c8:	c7 44 24 04 26 00 00 	movl   $0x26,0x4(%esp)$/;"	l
c01015cf	kernel.asm	/^c01015cf:	00 $/;"	l
c01015d0	kernel.asm	/^c01015d0:	c7 04 24 7f 19 10 c0 	movl   $0xc010197f,(%esp)$/;"	l
c01015d7	kernel.asm	/^c01015d7:	e8 d4 eb ff ff       	call   c01001b0 <abort>$/;"	l
c01015dc	kernel.asm	/^c01015dc:	a1 44 88 44 c0       	mov    0xc0448844,%eax$/;"	l
c01015e1	kernel.asm	/^c01015e1:	c9                   	leave  $/;"	l
c01015e2	kernel.asm	/^c01015e2:	83 e8 04             	sub    $0x4,%eax$/;"	l
c01015e5	kernel.asm	/^c01015e5:	c3                   	ret    $/;"	l
c01015e6	kernel.asm	/^c01015e6:	90                   	nop$/;"	l
c01015e7	kernel.asm	/^c01015e7:	90                   	nop$/;"	l
c01015e8	kernel.asm	/^c01015e8:	90                   	nop$/;"	l
c01015e9	kernel.asm	/^c01015e9:	90                   	nop$/;"	l
c01015ea	kernel.asm	/^c01015ea:	90                   	nop$/;"	l
c01015eb	kernel.asm	/^c01015eb:	90                   	nop$/;"	l
c01015ec	kernel.asm	/^c01015ec:	90                   	nop$/;"	l
c01015ed	kernel.asm	/^c01015ed:	90                   	nop$/;"	l
c01015ee	kernel.asm	/^c01015ee:	90                   	nop$/;"	l
c01015ef	kernel.asm	/^c01015ef:	90                   	nop$/;"	l
c01015f0	kernel.asm	/^c01015f0 <create_kthread>:$/;"	l
c01015f0	kernel.asm	/^c01015f0:	55                   	push   %ebp$/;"	l
c01015f1	kernel.asm	/^c01015f1:	89 e5                	mov    %esp,%ebp$/;"	l
c01015f3	kernel.asm	/^c01015f3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01015f6	kernel.asm	/^c01015f6:	c7 04 24 60 1f 00 00 	movl   $0x1f60,(%esp)$/;"	l
c01015fd	kernel.asm	/^c01015fd:	e8 6e ef ff ff       	call   c0100570 <malloc>$/;"	l
c0101602	kernel.asm	/^c0101602:	85 c0                	test   %eax,%eax$/;"	l
c0101604	kernel.asm	/^c0101604:	0f 84 9e 00 00 00    	je     c01016a8 <create_kthread+0xb8>$/;"	l
c010160a	kernel.asm	/^c010160a:	8b 15 10 31 10 c0    	mov    0xc0103110,%edx$/;"	l
c0101610	kernel.asm	/^c0101610:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0101617	kernel.asm	/^c0101617:	c7 80 2d 1f 00 00 00 	movl   $0x0,0x1f2d(%eax)$/;"	l
c010161e	kernel.asm	/^c010161e:	00 00 00 $/;"	l
c0101621	kernel.asm	/^c0101621:	c7 80 29 1f 00 00 00 	movl   $0x0,0x1f29(%eax)$/;"	l
c0101628	kernel.asm	/^c0101628:	00 00 00 $/;"	l
c010162b	kernel.asm	/^c010162b:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010162e	kernel.asm	/^c010162e:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101631	kernel.asm	/^c0101631:	89 15 10 31 10 c0    	mov    %edx,0xc0103110$/;"	l
c0101637	kernel.asm	/^c0101637:	8d 90 11 1f 00 00    	lea    0x1f11(%eax),%edx$/;"	l
c010163d	kernel.asm	/^c010163d:	89 10                	mov    %edx,(%eax)$/;"	l
c010163f	kernel.asm	/^c010163f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0101642	kernel.asm	/^c0101642:	c7 80 25 1f 00 00 00 	movl   $0x0,0x1f25(%eax)$/;"	l
c0101649	kernel.asm	/^c0101649:	00 00 00 $/;"	l
c010164c	kernel.asm	/^c010164c:	c7 80 21 1f 00 00 00 	movl   $0x0,0x1f21(%eax)$/;"	l
c0101653	kernel.asm	/^c0101653:	00 00 00 $/;"	l
c0101656	kernel.asm	/^c0101656:	c7 80 19 1f 00 00 00 	movl   $0x0,0x1f19(%eax)$/;"	l
c010165d	kernel.asm	/^c010165d:	00 00 00 $/;"	l
c0101660	kernel.asm	/^c0101660:	c7 80 15 1f 00 00 00 	movl   $0x0,0x1f15(%eax)$/;"	l
c0101667	kernel.asm	/^c0101667:	00 00 00 $/;"	l
c010166a	kernel.asm	/^c010166a:	c7 80 11 1f 00 00 00 	movl   $0x0,0x1f11(%eax)$/;"	l
c0101671	kernel.asm	/^c0101671:	00 00 00 $/;"	l
c0101674	kernel.asm	/^c0101674:	c7 80 39 1f 00 00 10 	movl   $0x10,0x1f39(%eax)$/;"	l
c010167b	kernel.asm	/^c010167b:	00 00 00 $/;"	l
c010167e	kernel.asm	/^c010167e:	c7 80 3d 1f 00 00 10 	movl   $0x10,0x1f3d(%eax)$/;"	l
c0101685	kernel.asm	/^c0101685:	00 00 00 $/;"	l
c0101688	kernel.asm	/^c0101688:	89 90 49 1f 00 00    	mov    %edx,0x1f49(%eax)$/;"	l
c010168e	kernel.asm	/^c010168e:	c7 80 4d 1f 00 00 08 	movl   $0x8,0x1f4d(%eax)$/;"	l
c0101695	kernel.asm	/^c0101695:	00 00 00 $/;"	l
c0101698	kernel.asm	/^c0101698:	c7 80 51 1f 00 00 00 	movl   $0x200,0x1f51(%eax)$/;"	l
c010169f	kernel.asm	/^c010169f:	02 00 00 $/;"	l
c01016a2	kernel.asm	/^c01016a2:	c9                   	leave  $/;"	l
c01016a3	kernel.asm	/^c01016a3:	c3                   	ret    $/;"	l
c01016a4	kernel.asm	/^c01016a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c01016a8	kernel.asm	/^c01016a8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01016ab	kernel.asm	/^c01016ab:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
c01016b2	kernel.asm	/^c01016b2:	00 $/;"	l
c01016b3	kernel.asm	/^c01016b3:	c7 04 24 96 19 10 c0 	movl   $0xc0101996,(%esp)$/;"	l
c01016ba	kernel.asm	/^c01016ba:	e8 f1 ea ff ff       	call   c01001b0 <abort>$/;"	l
c01016bf	kernel.asm	/^c01016bf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01016c2	kernel.asm	/^c01016c2:	e9 43 ff ff ff       	jmp    c010160a <create_kthread+0x1a>$/;"	l
c01016c7	kernel.asm	/^c01016c7:	89 f6                	mov    %esi,%esi$/;"	l
c01016c9	kernel.asm	/^c01016c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
c01016d0	kernel.asm	/^c01016d0 <wakeup>:$/;"	l
c01016d0	kernel.asm	/^c01016d0:	55                   	push   %ebp$/;"	l
c01016d1	kernel.asm	/^c01016d1:	89 e5                	mov    %esp,%ebp$/;"	l
c01016d3	kernel.asm	/^c01016d3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01016d6	kernel.asm	/^c01016d6:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
c01016d9	kernel.asm	/^c01016d9:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
c01016dc	kernel.asm	/^c01016dc:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
c01016df	kernel.asm	/^c01016df:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
c01016e2	kernel.asm	/^c01016e2:	8b 35 44 88 44 c0    	mov    0xc0448844,%esi$/;"	l
c01016e8	kernel.asm	/^c01016e8:	89 df                	mov    %ebx,%edi$/;"	l
c01016ea	kernel.asm	/^c01016ea:	83 c7 04             	add    $0x4,%edi$/;"	l
c01016ed	kernel.asm	/^c01016ed:	74 29                	je     c0101718 <wakeup+0x48>$/;"	l
c01016ef	kernel.asm	/^c01016ef:	85 f6                	test   %esi,%esi$/;"	l
c01016f1	kernel.asm	/^c01016f1:	c7 43 04 40 88 44 c0 	movl   $0xc0448840,0x4(%ebx)$/;"	l
c01016f8	kernel.asm	/^c01016f8:	89 73 08             	mov    %esi,0x8(%ebx)$/;"	l
c01016fb	kernel.asm	/^c01016fb:	89 3d 44 88 44 c0    	mov    %edi,0xc0448844$/;"	l
c0101701	kernel.asm	/^c0101701:	74 02                	je     c0101705 <wakeup+0x35>$/;"	l
c0101703	kernel.asm	/^c0101703:	89 3e                	mov    %edi,(%esi)$/;"	l
c0101705	kernel.asm	/^c0101705:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
c0101708	kernel.asm	/^c0101708:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
c010170b	kernel.asm	/^c010170b:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
c010170e	kernel.asm	/^c010170e:	89 ec                	mov    %ebp,%esp$/;"	l
c0101710	kernel.asm	/^c0101710:	5d                   	pop    %ebp$/;"	l
c0101711	kernel.asm	/^c0101711:	c3                   	ret    $/;"	l
c0101712	kernel.asm	/^c0101712:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0101718	kernel.asm	/^c0101718:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c010171f	kernel.asm	/^c010171f:	00 $/;"	l
c0101720	kernel.asm	/^c0101720:	c7 04 24 9b 18 10 c0 	movl   $0xc010189b,(%esp)$/;"	l
c0101727	kernel.asm	/^c0101727:	e8 84 ea ff ff       	call   c01001b0 <abort>$/;"	l
c010172c	kernel.asm	/^c010172c:	eb c1                	jmp    c01016ef <wakeup+0x1f>$/;"	l
c010172e	kernel.asm	/^c010172e:	66 90                	xchg   %ax,%ax$/;"	l
c0101730	kernel.asm	/^c0101730 <sleep>:$/;"	l
c0101730	kernel.asm	/^c0101730:	55                   	push   %ebp$/;"	l
c0101731	kernel.asm	/^c0101731:	89 e5                	mov    %esp,%ebp$/;"	l
c0101733	kernel.asm	/^c0101733:	53                   	push   %ebx$/;"	l
c0101734	kernel.asm	/^c0101734:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0101737	kernel.asm	/^c0101737:	8b 1d 0c 31 10 c0    	mov    0xc010310c,%ebx$/;"	l
c010173d	kernel.asm	/^c010173d:	83 fb fc             	cmp    $0xfffffffc,%ebx$/;"	l
c0101740	kernel.asm	/^c0101740:	74 1e                	je     c0101760 <sleep+0x30>$/;"	l
c0101742	kernel.asm	/^c0101742:	8b 53 04             	mov    0x4(%ebx),%edx$/;"	l
c0101745	kernel.asm	/^c0101745:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
c0101748	kernel.asm	/^c0101748:	85 d2                	test   %edx,%edx$/;"	l
c010174a	kernel.asm	/^c010174a:	74 03                	je     c010174f <sleep+0x1f>$/;"	l
c010174c	kernel.asm	/^c010174c:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c010174f	kernel.asm	/^c010174f:	85 c0                	test   %eax,%eax$/;"	l
c0101751	kernel.asm	/^c0101751:	74 02                	je     c0101755 <sleep+0x25>$/;"	l
c0101753	kernel.asm	/^c0101753:	89 10                	mov    %edx,(%eax)$/;"	l
c0101755	kernel.asm	/^c0101755:	cd 80                	int    $0x80$/;"	l
c0101757	kernel.asm	/^c0101757:	83 c4 14             	add    $0x14,%esp$/;"	l
c010175a	kernel.asm	/^c010175a:	5b                   	pop    %ebx$/;"	l
c010175b	kernel.asm	/^c010175b:	5d                   	pop    %ebp$/;"	l
c010175c	kernel.asm	/^c010175c:	c3                   	ret    $/;"	l
c010175d	kernel.asm	/^c010175d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c0101760	kernel.asm	/^c0101760:	c7 44 24 04 23 00 00 	movl   $0x23,0x4(%esp)$/;"	l
c0101767	kernel.asm	/^c0101767:	00 $/;"	l
c0101768	kernel.asm	/^c0101768:	c7 04 24 9b 18 10 c0 	movl   $0xc010189b,(%esp)$/;"	l
c010176f	kernel.asm	/^c010176f:	e8 3c ea ff ff       	call   c01001b0 <abort>$/;"	l
c0101774	kernel.asm	/^c0101774:	eb cc                	jmp    c0101742 <sleep+0x12>$/;"	l
c0101776	kernel.asm	/^c0101776:	90                   	nop$/;"	l
c0101777	kernel.asm	/^c0101777:	90                   	nop$/;"	l
c0101778	kernel.asm	/^c0101778 <vec0>:$/;"	l
c0101778	kernel.asm	/^c0101778:	6a 00                	push   $0x0$/;"	l
c010177a	kernel.asm	/^c010177a:	6a 00                	push   $0x0$/;"	l
c010177c	kernel.asm	/^c010177c:	eb 72                	jmp    c01017f0 <trap>$/;"	l
c010177e	kernel.asm	/^c010177e <vec1>:$/;"	l
c010177e	kernel.asm	/^c010177e:	6a 00                	push   $0x0$/;"	l
c0101780	kernel.asm	/^c0101780:	6a 01                	push   $0x1$/;"	l
c0101782	kernel.asm	/^c0101782:	eb 6c                	jmp    c01017f0 <trap>$/;"	l
c0101784	kernel.asm	/^c0101784 <vec2>:$/;"	l
c0101784	kernel.asm	/^c0101784:	6a 00                	push   $0x0$/;"	l
c0101786	kernel.asm	/^c0101786:	6a 02                	push   $0x2$/;"	l
c0101788	kernel.asm	/^c0101788:	eb 66                	jmp    c01017f0 <trap>$/;"	l
c010178a	kernel.asm	/^c010178a <vec3>:$/;"	l
c010178a	kernel.asm	/^c010178a:	6a 00                	push   $0x0$/;"	l
c010178c	kernel.asm	/^c010178c:	6a 03                	push   $0x3$/;"	l
c010178e	kernel.asm	/^c010178e:	eb 60                	jmp    c01017f0 <trap>$/;"	l
c0101790	kernel.asm	/^c0101790 <vec4>:$/;"	l
c0101790	kernel.asm	/^c0101790:	6a 00                	push   $0x0$/;"	l
c0101792	kernel.asm	/^c0101792:	6a 04                	push   $0x4$/;"	l
c0101794	kernel.asm	/^c0101794:	eb 5a                	jmp    c01017f0 <trap>$/;"	l
c0101796	kernel.asm	/^c0101796 <vec5>:$/;"	l
c0101796	kernel.asm	/^c0101796:	6a 00                	push   $0x0$/;"	l
c0101798	kernel.asm	/^c0101798:	6a 05                	push   $0x5$/;"	l
c010179a	kernel.asm	/^c010179a:	eb 54                	jmp    c01017f0 <trap>$/;"	l
c010179c	kernel.asm	/^c010179c <vec6>:$/;"	l
c010179c	kernel.asm	/^c010179c:	6a 00                	push   $0x0$/;"	l
c010179e	kernel.asm	/^c010179e:	6a 06                	push   $0x6$/;"	l
c01017a0	kernel.asm	/^c01017a0:	eb 4e                	jmp    c01017f0 <trap>$/;"	l
c01017a2	kernel.asm	/^c01017a2 <vec7>:$/;"	l
c01017a2	kernel.asm	/^c01017a2:	6a 00                	push   $0x0$/;"	l
c01017a4	kernel.asm	/^c01017a4:	6a 07                	push   $0x7$/;"	l
c01017a6	kernel.asm	/^c01017a6:	eb 48                	jmp    c01017f0 <trap>$/;"	l
c01017a8	kernel.asm	/^c01017a8 <vec8>:$/;"	l
c01017a8	kernel.asm	/^c01017a8:	6a 08                	push   $0x8$/;"	l
c01017aa	kernel.asm	/^c01017aa:	eb 44                	jmp    c01017f0 <trap>$/;"	l
c01017ac	kernel.asm	/^c01017ac <vec9>:$/;"	l
c01017ac	kernel.asm	/^c01017ac:	6a 00                	push   $0x0$/;"	l
c01017ae	kernel.asm	/^c01017ae:	6a 09                	push   $0x9$/;"	l
c01017b0	kernel.asm	/^c01017b0:	eb 3e                	jmp    c01017f0 <trap>$/;"	l
c01017b2	kernel.asm	/^c01017b2 <vec10>:$/;"	l
c01017b2	kernel.asm	/^c01017b2:	6a 0a                	push   $0xa$/;"	l
c01017b4	kernel.asm	/^c01017b4:	eb 3a                	jmp    c01017f0 <trap>$/;"	l
c01017b6	kernel.asm	/^c01017b6 <vec11>:$/;"	l
c01017b6	kernel.asm	/^c01017b6:	6a 0b                	push   $0xb$/;"	l
c01017b8	kernel.asm	/^c01017b8:	eb 36                	jmp    c01017f0 <trap>$/;"	l
c01017ba	kernel.asm	/^c01017ba <vec12>:$/;"	l
c01017ba	kernel.asm	/^c01017ba:	6a 0c                	push   $0xc$/;"	l
c01017bc	kernel.asm	/^c01017bc:	eb 32                	jmp    c01017f0 <trap>$/;"	l
c01017be	kernel.asm	/^c01017be <vec13>:$/;"	l
c01017be	kernel.asm	/^c01017be:	6a 0d                	push   $0xd$/;"	l
c01017c0	kernel.asm	/^c01017c0:	eb 2e                	jmp    c01017f0 <trap>$/;"	l
c01017c2	kernel.asm	/^c01017c2 <vec14>:$/;"	l
c01017c2	kernel.asm	/^c01017c2:	6a 0e                	push   $0xe$/;"	l
c01017c4	kernel.asm	/^c01017c4:	eb 2a                	jmp    c01017f0 <trap>$/;"	l
c01017c6	kernel.asm	/^c01017c6 <vecsys>:$/;"	l
c01017c6	kernel.asm	/^c01017c6:	6a 00                	push   $0x0$/;"	l
c01017c8	kernel.asm	/^c01017c8:	68 80 00 00 00       	push   $0x80$/;"	l
c01017cd	kernel.asm	/^c01017cd:	eb 21                	jmp    c01017f0 <trap>$/;"	l
c01017cf	kernel.asm	/^c01017cf <irq0>:$/;"	l
c01017cf	kernel.asm	/^c01017cf:	6a 00                	push   $0x0$/;"	l
c01017d1	kernel.asm	/^c01017d1:	68 e8 03 00 00       	push   $0x3e8$/;"	l
c01017d6	kernel.asm	/^c01017d6:	eb 18                	jmp    c01017f0 <trap>$/;"	l
c01017d8	kernel.asm	/^c01017d8 <irq1>:$/;"	l
c01017d8	kernel.asm	/^c01017d8:	6a 00                	push   $0x0$/;"	l
c01017da	kernel.asm	/^c01017da:	68 e9 03 00 00       	push   $0x3e9$/;"	l
c01017df	kernel.asm	/^c01017df:	eb 0f                	jmp    c01017f0 <trap>$/;"	l
c01017e1	kernel.asm	/^c01017e1 <irq14>:$/;"	l
c01017e1	kernel.asm	/^c01017e1:	6a 00                	push   $0x0$/;"	l
c01017e3	kernel.asm	/^c01017e3:	68 f6 03 00 00       	push   $0x3f6$/;"	l
c01017e8	kernel.asm	/^c01017e8:	eb 06                	jmp    c01017f0 <trap>$/;"	l
c01017ea	kernel.asm	/^c01017ea <irqall>:$/;"	l
c01017ea	kernel.asm	/^c01017ea:	6a 00                	push   $0x0$/;"	l
c01017ec	kernel.asm	/^c01017ec:	6a ff                	push   $0xffffffff$/;"	l
c01017ee	kernel.asm	/^c01017ee:	eb 00                	jmp    c01017f0 <trap>$/;"	l
c01017f0	kernel.asm	/^c01017f0 <trap>:$/;"	l
c01017f0	kernel.asm	/^c01017f0:	fa                   	cli    $/;"	l
c01017f1	kernel.asm	/^c01017f1:	1e                   	push   %ds$/;"	l
c01017f2	kernel.asm	/^c01017f2:	06                   	push   %es$/;"	l
c01017f3	kernel.asm	/^c01017f3:	0f a0                	push   %fs$/;"	l
c01017f5	kernel.asm	/^c01017f5:	0f a8                	push   %gs$/;"	l
c01017f7	kernel.asm	/^c01017f7:	60                   	pusha  $/;"	l
c01017f8	kernel.asm	/^c01017f8:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
c01017fc	kernel.asm	/^c01017fc:	8e d8                	mov    %eax,%ds$/;"	l
c01017fe	kernel.asm	/^c01017fe:	8e c0                	mov    %eax,%es$/;"	l
c0101800	kernel.asm	/^c0101800:	54                   	push   %esp$/;"	l
c0101801	kernel.asm	/^c0101801:	e8 aa fb ff ff       	call   c01013b0 <irq_handle>$/;"	l
c0101806	kernel.asm	/^c0101806:	a1 0c 31 10 c0       	mov    0xc010310c,%eax$/;"	l
c010180b	kernel.asm	/^c010180b:	8b 20                	mov    (%eax),%esp$/;"	l
c010180d	kernel.asm	/^c010180d:	61                   	popa   $/;"	l
c010180e	kernel.asm	/^c010180e:	0f a9                	pop    %gs$/;"	l
c0101810	kernel.asm	/^c0101810:	0f a1                	pop    %fs$/;"	l
c0101812	kernel.asm	/^c0101812:	07                   	pop    %es$/;"	l
c0101813	kernel.asm	/^c0101813:	1f                   	pop    %ds$/;"	l
c0101814	kernel.asm	/^c0101814:	83 c4 08             	add    $0x8,%esp$/;"	l
c0101817	kernel.asm	/^c0101817:	cf                   	iret   $/;"	l
c0101818	kernel.asm	/^c0101818 <digits.849-0x11>:$/;"	l
c0101818	kernel.asm	/^c0101818:	73 72                	jae    c010188c <digits.849+0x63>$/;"	l
c010181a	kernel.asm	/^c010181a:	63 2f                	arpl   %bp,(%edi)$/;"	l
c010181c	kernel.asm	/^c010181c:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c010181d	kernel.asm	/^c010181d:	69 62 2f 73 74 72 69 	imul   $0x69727473,0x2f(%edx),%esp$/;"	l
c0101824	kernel.asm	/^c0101824:	6e                   	outsb  %ds:(%esi),(%dx)$/;"	l
c0101825	kernel.asm	/^c0101825:	67 2e 63 00          	arpl   %ax,%cs:(%bx,%si)$/;"	l
c0101829	kernel.asm	/^c0101829 <digits.849>:$/;"	l
c0101829	kernel.asm	/^c0101829:	30 31                	xor    %dh,(%ecx)$/;"	l
c010182b	kernel.asm	/^c010182b:	32 33                	xor    (%ebx),%dh$/;"	l
c010182d	kernel.asm	/^c010182d:	34 35                	xor    $0x35,%al$/;"	l
c010182f	kernel.asm	/^c010182f:	36                   	ss$/;"	l
c0101830	kernel.asm	/^c0101830:	37                   	aaa    $/;"	l
c0101831	kernel.asm	/^c0101831:	38 39                	cmp    %bh,(%ecx)$/;"	l
c0101833	kernel.asm	/^c0101833:	61                   	popa   $/;"	l
c0101834	kernel.asm	/^c0101834:	62 63 64             	bound  %esp,0x64(%ebx)$/;"	l
c0101837	kernel.asm	/^c0101837:	65                   	gs$/;"	l
c0101838	kernel.asm	/^c0101838:	66                   	data16$/;"	l
c0101839	kernel.asm	/^c0101839:	00 00                	add    %al,(%eax)$/;"	l
c010183b	kernel.asm	/^c010183b:	00 0a                	add    %cl,(%edx)$/;"	l
c010183d	kernel.asm	/^c010183d:	0a 46 61             	or     0x61(%esi),%al$/;"	l
c0101840	kernel.asm	/^c0101840:	74 61                	je     c01018a3 <digits.849+0x7a>$/;"	l
c0101842	kernel.asm	/^c0101842:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c0101843	kernel.asm	/^c0101843:	20 65 72             	and    %ah,0x72(%ebp)$/;"	l
c0101846	kernel.asm	/^c0101846:	72 6f                	jb     c01018b7 <digits.849+0x8e>$/;"	l
c0101848	kernel.asm	/^c0101848:	72 20                	jb     c010186a <digits.849+0x41>$/;"	l
c010184a	kernel.asm	/^c010184a:	28 61 73             	sub    %ah,0x73(%ecx)$/;"	l
c010184d	kernel.asm	/^c010184d:	73 65                	jae    c01018b4 <digits.849+0x8b>$/;"	l
c010184f	kernel.asm	/^c010184f:	72 74                	jb     c01018c5 <digits.849+0x9c>$/;"	l
c0101851	kernel.asm	/^c0101851:	69 6f 6e 20 66 61 69 	imul   $0x69616620,0x6e(%edi),%ebp$/;"	l
c0101858	kernel.asm	/^c0101858:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c0101859	kernel.asm	/^c0101859:	75 72                	jne    c01018cd <digits.849+0xa4>$/;"	l
c010185b	kernel.asm	/^c010185b:	65 29 20             	sub    %esp,%gs:(%eax)$/;"	l
c010185e	kernel.asm	/^c010185e:	61                   	popa   $/;"	l
c010185f	kernel.asm	/^c010185f:	74 20                	je     c0101881 <digits.849+0x58>$/;"	l
c0101861	kernel.asm	/^c0101861:	25 73 3a 25 64       	and    $0x64253a73,%eax$/;"	l
c0101866	kernel.asm	/^c0101866:	0a 00                	or     (%eax),%al$/;"	l
c0101868	kernel.asm	/^c0101868:	0a 0a                	or     (%edx),%cl$/;"	l
c010186a	kernel.asm	/^c010186a:	46                   	inc    %esi$/;"	l
c010186b	kernel.asm	/^c010186b:	61                   	popa   $/;"	l
c010186c	kernel.asm	/^c010186c:	74 61                	je     c01018cf <digits.849+0xa6>$/;"	l
c010186e	kernel.asm	/^c010186e:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c010186f	kernel.asm	/^c010186f:	20 65 72             	and    %ah,0x72(%ebp)$/;"	l
c0101872	kernel.asm	/^c0101872:	72 6f                	jb     c01018e3 <digits.849+0xba>$/;"	l
c0101874	kernel.asm	/^c0101874:	72 20                	jb     c0101896 <digits.849+0x6d>$/;"	l
c0101876	kernel.asm	/^c0101876:	28 6b 65             	sub    %ch,0x65(%ebx)$/;"	l
c0101879	kernel.asm	/^c0101879:	72 6e                	jb     c01018e9 <digits.849+0xc0>$/;"	l
c010187b	kernel.asm	/^c010187b:	65                   	gs$/;"	l
c010187c	kernel.asm	/^c010187c:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c010187d	kernel.asm	/^c010187d:	20 70 61             	and    %dh,0x61(%eax)$/;"	l
c0101880	kernel.asm	/^c0101880:	6e                   	outsb  %ds:(%esi),(%dx)$/;"	l
c0101881	kernel.asm	/^c0101881:	69 63 29 3a 20 25 73 	imul   $0x7325203a,0x29(%ebx),%esp$/;"	l
c0101888	kernel.asm	/^c0101888:	0a 00                	or     (%eax),%al$/;"	l
c010188a	kernel.asm	/^c010188a:	00 00                	add    %al,(%eax)$/;"	l
c010188c	kernel.asm	/^c010188c:	73 72                	jae    c0101900 <digits.849+0xd7>$/;"	l
c010188e	kernel.asm	/^c010188e:	63 2f                	arpl   %bp,(%edi)$/;"	l
c0101890	kernel.asm	/^c0101890:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c0101891	kernel.asm	/^c0101891:	69 62 2f 73 79 6e 63 	imul   $0x636e7973,0x2f(%edx),%esp$/;"	l
c0101898	kernel.asm	/^c0101898:	2e 63 00             	arpl   %ax,%cs:(%eax)$/;"	l
c010189b	kernel.asm	/^c010189b:	2e                   	cs$/;"	l
c010189c	kernel.asm	/^c010189c:	2f                   	das    $/;"	l
c010189d	kernel.asm	/^c010189d:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp$/;"	l
c01018a4	kernel.asm	/^c01018a4:	2f                   	das    $/;"	l
c01018a5	kernel.asm	/^c01018a5:	61                   	popa   $/;"	l
c01018a6	kernel.asm	/^c01018a6:	64                   	fs$/;"	l
c01018a7	kernel.asm	/^c01018a7:	74 2f                	je     c01018d8 <digits.849+0xaf>$/;"	l
c01018a9	kernel.asm	/^c01018a9:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c01018aa	kernel.asm	/^c01018aa:	69 73 74 2e 68 00 73 	imul   $0x7300682e,0x74(%ebx),%esi$/;"	l
c01018b1	kernel.asm	/^c01018b1:	72 63                	jb     c0101916 <digits.849+0xed>$/;"	l
c01018b3	kernel.asm	/^c01018b3:	2f                   	das    $/;"	l
c01018b4	kernel.asm	/^c01018b4:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c01018b5	kernel.asm	/^c01018b5:	69 62 2f 6d 61 6c 6c 	imul   $0x6c6c616d,0x2f(%edx),%esp$/;"	l
c01018bc	kernel.asm	/^c01018bc:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
c01018bd	kernel.asm	/^c01018bd:	63 2e                	arpl   %bp,(%esi)$/;"	l
c01018bf	kernel.asm	/^c01018bf:	63 00                	arpl   %ax,(%eax)$/;"	l
c01018c1	kernel.asm	/^c01018c1:	73 72                	jae    c0101935 <digits.849+0x10c>$/;"	l
c01018c3	kernel.asm	/^c01018c3:	63 2f                	arpl   %bp,(%edi)$/;"	l
c01018c5	kernel.asm	/^c01018c5:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c01018c6	kernel.asm	/^c01018c6:	69 62 2f 76 66 70 72 	imul   $0x72706676,0x2f(%edx),%esp$/;"	l
c01018cd	kernel.asm	/^c01018cd:	69 6e 74 66 2e 63 00 	imul   $0x632e66,0x74(%esi),%ebp$/;"	l
c01018d4	kernel.asm	/^c01018d4:	73 72                	jae    c0101948 <digits.849+0x11f>$/;"	l
c01018d6	kernel.asm	/^c01018d6:	63 2f                	arpl   %bp,(%edi)$/;"	l
c01018d8	kernel.asm	/^c01018d8:	6b 65 72 6e          	imul   $0x6e,0x72(%ebp),%esp$/;"	l
c01018dc	kernel.asm	/^c01018dc:	65                   	gs$/;"	l
c01018dd	kernel.asm	/^c01018dd:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c01018de	kernel.asm	/^c01018de:	2f                   	das    $/;"	l
c01018df	kernel.asm	/^c01018df:	6d                   	insl   (%dx),%es:(%edi)$/;"	l
c01018e0	kernel.asm	/^c01018e0:	61                   	popa   $/;"	l
c01018e1	kernel.asm	/^c01018e1:	69 6e 2e 63 00 23 25 	imul   $0x25230063,0x2e(%esi),%ebp$/;"	l
c01018e8	kernel.asm	/^c01018e8:	64 20 47 6f          	and    %al,%fs:0x6f(%edi)$/;"	l
c01018ec	kernel.asm	/^c01018ec:	74 3a                	je     c0101928 <digits.849+0xff>$/;"	l
c01018ee	kernel.asm	/^c01018ee:	20 25 64 0a 00 54    	and    %ah,0x54000a64$/;"	l
c01018f4	kernel.asm	/^c01018f4:	68 65 20 4f 53       	push   $0x534f2065$/;"	l
c01018f9	kernel.asm	/^c01018f9:	20 69 73             	and    %ch,0x73(%ecx)$/;"	l
c01018fc	kernel.asm	/^c01018fc:	20 6e 6f             	and    %ch,0x6f(%esi)$/;"	l
c01018ff	kernel.asm	/^c01018ff:	77 20                	ja     c0101921 <digits.849+0xf8>$/;"	l
c0101901	kernel.asm	/^c0101901:	77 6f                	ja     c0101972 <digits.849+0x149>$/;"	l
c0101903	kernel.asm	/^c0101903:	72 6b                	jb     c0101970 <digits.849+0x147>$/;"	l
c0101905	kernel.asm	/^c0101905:	69 6e 67 21 0a 00 73 	imul   $0x73000a21,0x67(%esi),%ebp$/;"	l
c010190c	kernel.asm	/^c010190c:	72 63                	jb     c0101971 <digits.849+0x148>$/;"	l
c010190e	kernel.asm	/^c010190e:	2f                   	das    $/;"	l
c010190f	kernel.asm	/^c010190f:	6b 65 72 6e          	imul   $0x6e,0x72(%ebp),%esp$/;"	l
c0101913	kernel.asm	/^c0101913:	65                   	gs$/;"	l
c0101914	kernel.asm	/^c0101914:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c0101915	kernel.asm	/^c0101915:	2f                   	das    $/;"	l
c0101916	kernel.asm	/^c0101916:	69 72 71 2f 69 72 71 	imul   $0x7172692f,0x71(%edx),%esi$/;"	l
c010191d	kernel.asm	/^c010191d:	5f                   	pop    %edi$/;"	l
c010191e	kernel.asm	/^c010191e:	68 61 6e 64 6c       	push   $0x6c646e61$/;"	l
c0101923	kernel.asm	/^c0101923:	65 2e 63 00          	gs arpl %ax,%cs:%gs:(%eax)$/;"	l
c0101927	kernel.asm	/^c0101927:	55                   	push   %ebp$/;"	l
c0101928	kernel.asm	/^c0101928:	6e                   	outsb  %ds:(%esi),(%dx)$/;"	l
c0101929	kernel.asm	/^c0101929:	65                   	gs$/;"	l
c010192a	kernel.asm	/^c010192a:	78 70                	js     c010199c <digits.849+0x173>$/;"	l
c010192c	kernel.asm	/^c010192c:	65 63 74 65 64       	arpl   %si,%gs:0x64(%ebp,%eiz,2)$/;"	l
c0101931	kernel.asm	/^c0101931:	20 65 78             	and    %ah,0x78(%ebp)$/;"	l
c0101934	kernel.asm	/^c0101934:	63 65 70             	arpl   %sp,0x70(%ebp)$/;"	l
c0101937	kernel.asm	/^c0101937:	74 69                	je     c01019a2 <digits.849+0x179>$/;"	l
c0101939	kernel.asm	/^c0101939:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
c010193a	kernel.asm	/^c010193a:	6e                   	outsb  %ds:(%esi),(%dx)$/;"	l
c010193b	kernel.asm	/^c010193b:	20 23                	and    %ah,(%ebx)$/;"	l
c010193d	kernel.asm	/^c010193d:	25 64 0a 00 20       	and    $0x20000a64,%eax$/;"	l
c0101942	kernel.asm	/^c0101942:	65                   	gs$/;"	l
c0101943	kernel.asm	/^c0101943:	72 72                	jb     c01019b7 <digits.849+0x18e>$/;"	l
c0101945	kernel.asm	/^c0101945:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
c0101946	kernel.asm	/^c0101946:	72 63                	jb     c01019ab <digits.849+0x182>$/;"	l
c0101948	kernel.asm	/^c0101948:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
c0101949	kernel.asm	/^c0101949:	64 65 20 25 78 0a 00 	fs and %ah,%fs:%gs:0x20000a78$/;"	l
c0101950	kernel.asm	/^c0101950:	20 $/;"	l
c0101951	kernel.asm	/^c0101951:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c0101952	kernel.asm	/^c0101952:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
c0101953	kernel.asm	/^c0101953:	63 61 74             	arpl   %sp,0x74(%ecx)$/;"	l
c0101956	kernel.asm	/^c0101956:	69 6f 6e 20 20 25 64 	imul   $0x64252020,0x6e(%edi),%ebp$/;"	l
c010195d	kernel.asm	/^c010195d:	3a 25 78 2c 20 65    	cmp    0x65202c78,%ah$/;"	l
c0101963	kernel.asm	/^c0101963:	73 70                	jae    c01019d5 <digits.849+0x1ac>$/;"	l
c0101965	kernel.asm	/^c0101965:	20 25 78 0a 00 75    	and    %ah,0x75000a78$/;"	l
c010196b	kernel.asm	/^c010196b:	6e                   	outsb  %ds:(%esi),(%dx)$/;"	l
c010196c	kernel.asm	/^c010196c:	65                   	gs$/;"	l
c010196d	kernel.asm	/^c010196d:	78 70                	js     c01019df <digits.849+0x1b6>$/;"	l
c010196f	kernel.asm	/^c010196f:	65 63 74 65 64       	arpl   %si,%gs:0x64(%ebp,%eiz,2)$/;"	l
c0101974	kernel.asm	/^c0101974:	20 65 78             	and    %ah,0x78(%ebp)$/;"	l
c0101977	kernel.asm	/^c0101977:	63 65 70             	arpl   %sp,0x70(%ebp)$/;"	l
c010197a	kernel.asm	/^c010197a:	74 69                	je     c01019e5 <digits.849+0x1bc>$/;"	l
c010197c	kernel.asm	/^c010197c:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
c010197d	kernel.asm	/^c010197d:	6e                   	outsb  %ds:(%esi),(%dx)$/;"	l
c010197e	kernel.asm	/^c010197e:	00 73 72             	add    %dh,0x72(%ebx)$/;"	l
c0101981	kernel.asm	/^c0101981:	63 2f                	arpl   %bp,(%edi)$/;"	l
c0101983	kernel.asm	/^c0101983:	70 72                	jo     c01019f7 <digits.849+0x1ce>$/;"	l
c0101985	kernel.asm	/^c0101985:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
c0101986	kernel.asm	/^c0101986:	63 65 73             	arpl   %sp,0x73(%ebp)$/;"	l
c0101989	kernel.asm	/^c0101989:	73 2f                	jae    c01019ba <digits.849+0x191>$/;"	l
c010198b	kernel.asm	/^c010198b:	73 63                	jae    c01019f0 <digits.849+0x1c7>$/;"	l
c010198d	kernel.asm	/^c010198d:	68 65 64 75 6c       	push   $0x6c756465$/;"	l
c0101992	kernel.asm	/^c0101992:	65 2e 63 00          	gs arpl %ax,%cs:%gs:(%eax)$/;"	l
c0101996	kernel.asm	/^c0101996:	73 72                	jae    c0101a0a <digits.849+0x1e1>$/;"	l
c0101998	kernel.asm	/^c0101998:	63 2f                	arpl   %bp,(%edi)$/;"	l
c010199a	kernel.asm	/^c010199a:	70 72                	jo     c0101a0e <digits.849+0x1e5>$/;"	l
c010199c	kernel.asm	/^c010199c:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
c010199d	kernel.asm	/^c010199d:	63 65 73             	arpl   %sp,0x73(%ebp)$/;"	l
c01019a0	kernel.asm	/^c01019a0:	73 2f                	jae    c01019d1 <digits.849+0x1a8>$/;"	l
c01019a2	kernel.asm	/^c01019a2:	74 68                	je     c0101a0c <digits.849+0x1e3>$/;"	l
c01019a4	kernel.asm	/^c01019a4:	72 65                	jb     c0101a0b <digits.849+0x1e2>$/;"	l
c01019a6	kernel.asm	/^c01019a6:	61                   	popa   $/;"	l
c01019a7	kernel.asm	/^c01019a7:	64 2e 63 00          	fs arpl %ax,%cs:%fs:(%eax)$/;"	l
c01019ac	kernel.asm	/^c01019ac <.eh_frame>:$/;"	l
c01019ac	kernel.asm	/^c01019ac:	14 00                	adc    $0x0,%al$/;"	l
c01019ae	kernel.asm	/^c01019ae:	00 00                	add    %al,(%eax)$/;"	l
c01019b0	kernel.asm	/^c01019b0:	00 00                	add    %al,(%eax)$/;"	l
c01019b2	kernel.asm	/^c01019b2:	00 00                	add    %al,(%eax)$/;"	l
c01019b4	kernel.asm	/^c01019b4:	01 7a 52             	add    %edi,0x52(%edx)$/;"	l
c01019b7	kernel.asm	/^c01019b7:	00 01                	add    %al,(%ecx)$/;"	l
c01019b9	kernel.asm	/^c01019b9:	7c 08                	jl     c01019c3 <digits.849+0x19a>$/;"	l
c01019bb	kernel.asm	/^c01019bb:	01 1b                	add    %ebx,(%ebx)$/;"	l
c01019bd	kernel.asm	/^c01019bd:	0c 04                	or     $0x4,%al$/;"	l
c01019bf	kernel.asm	/^c01019bf:	04 88                	add    $0x88,%al$/;"	l
c01019c1	kernel.asm	/^c01019c1:	01 00                	add    %eax,(%eax)$/;"	l
c01019c3	kernel.asm	/^c01019c3:	00 24 00             	add    %ah,(%eax,%eax,1)$/;"	l
c01019c6	kernel.asm	/^c01019c6:	00 00                	add    %al,(%eax)$/;"	l
c01019c8	kernel.asm	/^c01019c8:	1c 00                	sbb    $0x0,%al$/;"	l
c01019ca	kernel.asm	/^c01019ca:	00 00                	add    %al,(%eax)$/;"	l
c01019cc	kernel.asm	/^c01019cc:	34 e6                	xor    $0xe6,%al$/;"	l
c01019ce	kernel.asm	/^c01019ce:	ff                   	(bad)  $/;"	l
c01019cf	kernel.asm	/^c01019cf:	ff 2a                	ljmp   *(%edx)$/;"	l
c01019d1	kernel.asm	/^c01019d1:	00 00                	add    %al,(%eax)$/;"	l
c01019d3	kernel.asm	/^c01019d3:	00 00                	add    %al,(%eax)$/;"	l
c01019d5	kernel.asm	/^c01019d5:	41                   	inc    %ecx$/;"	l
c01019d6	kernel.asm	/^c01019d6:	0e                   	push   %cs$/;"	l
c01019d7	kernel.asm	/^c01019d7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c01019dd	kernel.asm	/^c01019dd:	48                   	dec    %eax$/;"	l
c01019de	kernel.asm	/^c01019de:	83 04 86 03          	addl   $0x3,(%esi,%eax,4)$/;"	l
c01019e2	kernel.asm	/^c01019e2:	5c                   	pop    %esp$/;"	l
c01019e3	kernel.asm	/^c01019e3:	c3                   	ret    $/;"	l
c01019e4	kernel.asm	/^c01019e4:	41                   	inc    %ecx$/;"	l
c01019e5	kernel.asm	/^c01019e5:	c6 41 0c 04          	movb   $0x4,0xc(%ecx)$/;"	l
c01019e9	kernel.asm	/^c01019e9:	04 c5                	add    $0xc5,%al$/;"	l
c01019eb	kernel.asm	/^c01019eb:	00 20                	add    %ah,(%eax)$/;"	l
c01019ed	kernel.asm	/^c01019ed:	00 00                	add    %al,(%eax)$/;"	l
c01019ef	kernel.asm	/^c01019ef:	00 44 00 00          	add    %al,0x0(%eax,%eax,1)$/;"	l
c01019f3	kernel.asm	/^c01019f3:	00 3c e6             	add    %bh,(%esi,%eiz,8)$/;"	l
c01019f6	kernel.asm	/^c01019f6:	ff                   	(bad)  $/;"	l
c01019f7	kernel.asm	/^c01019f7:	ff 25 00 00 00 00    	jmp    *0x0$/;"	l
c01019fd	kernel.asm	/^c01019fd:	41                   	inc    %ecx$/;"	l
c01019fe	kernel.asm	/^c01019fe:	0e                   	push   %cs$/;"	l
c01019ff	kernel.asm	/^c01019ff:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101a05	kernel.asm	/^c0101a05:	4b                   	dec    %ebx$/;"	l
c0101a06	kernel.asm	/^c0101a06:	83 03 55             	addl   $0x55,(%ebx)$/;"	l
c0101a09	kernel.asm	/^c0101a09:	c3                   	ret    $/;"	l
c0101a0a	kernel.asm	/^c0101a0a:	41                   	inc    %ecx$/;"	l
c0101a0b	kernel.asm	/^c0101a0b:	0c 04                	or     $0x4,%al$/;"	l
c0101a0d	kernel.asm	/^c0101a0d:	04 c5                	add    $0xc5,%al$/;"	l
c0101a0f	kernel.asm	/^c0101a0f:	00 28                	add    %ch,(%eax)$/;"	l
c0101a11	kernel.asm	/^c0101a11:	00 00                	add    %al,(%eax)$/;"	l
c0101a13	kernel.asm	/^c0101a13:	00 68 00             	add    %ch,0x0(%eax)$/;"	l
c0101a16	kernel.asm	/^c0101a16:	00 00                	add    %al,(%eax)$/;"	l
c0101a18	kernel.asm	/^c0101a18:	48                   	dec    %eax$/;"	l
c0101a19	kernel.asm	/^c0101a19:	e6 ff                	out    %al,$0xff$/;"	l
c0101a1b	kernel.asm	/^c0101a1b:	ff 5c 00 00          	lcall  *0x0(%eax,%eax,1)$/;"	l
c0101a1f	kernel.asm	/^c0101a1f:	00 00                	add    %al,(%eax)$/;"	l
c0101a21	kernel.asm	/^c0101a21:	41                   	inc    %ecx$/;"	l
c0101a22	kernel.asm	/^c0101a22:	0e                   	push   %cs$/;"	l
c0101a23	kernel.asm	/^c0101a23:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101a29	kernel.asm	/^c0101a29:	48                   	dec    %eax$/;"	l
c0101a2a	kernel.asm	/^c0101a2a:	83 04 86 03          	addl   $0x3,(%esi,%eax,4)$/;"	l
c0101a2e	kernel.asm	/^c0101a2e:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
c0101a2f	kernel.asm	/^c0101a2f:	0a c3                	or     %bl,%al$/;"	l
c0101a31	kernel.asm	/^c0101a31:	41                   	inc    %ecx$/;"	l
c0101a32	kernel.asm	/^c0101a32:	c6 41 0c 04          	movb   $0x4,0xc(%ecx)$/;"	l
c0101a36	kernel.asm	/^c0101a36:	04 c5                	add    $0xc5,%al$/;"	l
c0101a38	kernel.asm	/^c0101a38:	44                   	inc    %esp$/;"	l
c0101a39	kernel.asm	/^c0101a39:	0b 00                	or     (%eax),%eax$/;"	l
c0101a3b	kernel.asm	/^c0101a3b:	00 24 00             	add    %ah,(%eax,%eax,1)$/;"	l
c0101a3e	kernel.asm	/^c0101a3e:	00 00                	add    %al,(%eax)$/;"	l
c0101a40	kernel.asm	/^c0101a40:	94                   	xchg   %eax,%esp$/;"	l
c0101a41	kernel.asm	/^c0101a41:	00 00                	add    %al,(%eax)$/;"	l
c0101a43	kernel.asm	/^c0101a43:	00 7c e6 ff          	add    %bh,-0x1(%esi,%eiz,8)$/;"	l
c0101a47	kernel.asm	/^c0101a47:	ff 45 00             	incl   0x0(%ebp)$/;"	l
c0101a4a	kernel.asm	/^c0101a4a:	00 00                	add    %al,(%eax)$/;"	l
c0101a4c	kernel.asm	/^c0101a4c:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101a4f	kernel.asm	/^c0101a4f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101a55	kernel.asm	/^c0101a55:	5d                   	pop    %ebp$/;"	l
c0101a56	kernel.asm	/^c0101a56:	0a c5                	or     %ch,%al$/;"	l
c0101a58	kernel.asm	/^c0101a58:	0c 04                	or     $0x4,%al$/;"	l
c0101a5a	kernel.asm	/^c0101a5a:	04 48                	add    $0x48,%al$/;"	l
c0101a5c	kernel.asm	/^c0101a5c:	0b 5c c5 0c          	or     0xc(%ebp,%eax,8),%ebx$/;"	l
c0101a60	kernel.asm	/^c0101a60:	04 04                	add    $0x4,%al$/;"	l
c0101a62	kernel.asm	/^c0101a62:	00 00                	add    %al,(%eax)$/;"	l
c0101a64	kernel.asm	/^c0101a64:	1c 00                	sbb    $0x0,%al$/;"	l
c0101a66	kernel.asm	/^c0101a66:	00 00                	add    %al,(%eax)$/;"	l
c0101a68	kernel.asm	/^c0101a68:	bc 00 00 00 a4       	mov    $0xa4000000,%esp$/;"	l
c0101a6d	kernel.asm	/^c0101a6d:	e6 ff                	out    %al,$0xff$/;"	l
c0101a6f	kernel.asm	/^c0101a6f:	ff 14 00             	call   *(%eax,%eax,1)$/;"	l
c0101a72	kernel.asm	/^c0101a72:	00 00                	add    %al,(%eax)$/;"	l
c0101a74	kernel.asm	/^c0101a74:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101a77	kernel.asm	/^c0101a77:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101a7d	kernel.asm	/^c0101a7d:	44                   	inc    %esp$/;"	l
c0101a7e	kernel.asm	/^c0101a7e:	0c 04                	or     $0x4,%al$/;"	l
c0101a80	kernel.asm	/^c0101a80:	04 c5                	add    $0xc5,%al$/;"	l
c0101a82	kernel.asm	/^c0101a82:	00 00                	add    %al,(%eax)$/;"	l
c0101a84	kernel.asm	/^c0101a84:	1c 00                	sbb    $0x0,%al$/;"	l
c0101a86	kernel.asm	/^c0101a86:	00 00                	add    %al,(%eax)$/;"	l
c0101a88	kernel.asm	/^c0101a88:	dc 00                	faddl  (%eax)$/;"	d
c0101a8a	kernel.asm	/^c0101a8a:	00 00                	add    %al,(%eax)$/;"	l
c0101a8c	kernel.asm	/^c0101a8c:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
c0101a8d	kernel.asm	/^c0101a8d:	e6 ff                	out    %al,$0xff$/;"	l
c0101a8f	kernel.asm	/^c0101a8f:	ff 14 00             	call   *(%eax,%eax,1)$/;"	l
c0101a92	kernel.asm	/^c0101a92:	00 00                	add    %al,(%eax)$/;"	l
c0101a94	kernel.asm	/^c0101a94:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101a97	kernel.asm	/^c0101a97:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101a9d	kernel.asm	/^c0101a9d:	44                   	inc    %esp$/;"	l
c0101a9e	kernel.asm	/^c0101a9e:	0c 04                	or     $0x4,%al$/;"	l
c0101aa0	kernel.asm	/^c0101aa0:	04 c5                	add    $0xc5,%al$/;"	l
c0101aa2	kernel.asm	/^c0101aa2:	00 00                	add    %al,(%eax)$/;"	l
c0101aa4	kernel.asm	/^c0101aa4:	1c 00                	sbb    $0x0,%al$/;"	l
c0101aa6	kernel.asm	/^c0101aa6:	00 00                	add    %al,(%eax)$/;"	l
c0101aa8	kernel.asm	/^c0101aa8:	fc                   	cld    $/;"	l
c0101aa9	kernel.asm	/^c0101aa9:	00 00                	add    %al,(%eax)$/;"	l
c0101aab	kernel.asm	/^c0101aab:	00 a4 e6 ff ff 22 00 	add    %ah,0x22ffff(%esi,%eiz,8)$/;"	l
c0101ab2	kernel.asm	/^c0101ab2:	00 00                	add    %al,(%eax)$/;"	l
c0101ab4	kernel.asm	/^c0101ab4:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101ab7	kernel.asm	/^c0101ab7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101abd	kernel.asm	/^c0101abd:	5e                   	pop    %esi$/;"	l
c0101abe	kernel.asm	/^c0101abe:	c5 0c 04             	lds    (%esp,%eax,1),%ecx$/;"	l
c0101ac1	kernel.asm	/^c0101ac1:	04 00                	add    $0x0,%al$/;"	l
c0101ac3	kernel.asm	/^c0101ac3:	00 1c 00             	add    %bl,(%eax,%eax,1)$/;"	l
c0101ac6	kernel.asm	/^c0101ac6:	00 00                	add    %al,(%eax)$/;"	l
c0101ac8	kernel.asm	/^c0101ac8:	1c 01                	sbb    $0x1,%al$/;"	l
c0101aca	kernel.asm	/^c0101aca:	00 00                	add    %al,(%eax)$/;"	l
c0101acc	kernel.asm	/^c0101acc:	b4 e6                	mov    $0xe6,%ah$/;"	l
c0101ace	kernel.asm	/^c0101ace:	ff                   	(bad)  $/;"	l
c0101acf	kernel.asm	/^c0101acf:	ff 22                	jmp    *(%edx)$/;"	l
c0101ad1	kernel.asm	/^c0101ad1:	00 00                	add    %al,(%eax)$/;"	l
c0101ad3	kernel.asm	/^c0101ad3:	00 00                	add    %al,(%eax)$/;"	l
c0101ad5	kernel.asm	/^c0101ad5:	41                   	inc    %ecx$/;"	l
c0101ad6	kernel.asm	/^c0101ad6:	0e                   	push   %cs$/;"	l
c0101ad7	kernel.asm	/^c0101ad7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101add	kernel.asm	/^c0101add:	5e                   	pop    %esi$/;"	l
c0101ade	kernel.asm	/^c0101ade:	c5 0c 04             	lds    (%esp,%eax,1),%ecx$/;"	l
c0101ae1	kernel.asm	/^c0101ae1:	04 00                	add    $0x0,%al$/;"	l
c0101ae3	kernel.asm	/^c0101ae3:	00 1c 00             	add    %bl,(%eax,%eax,1)$/;"	l
c0101ae6	kernel.asm	/^c0101ae6:	00 00                	add    %al,(%eax)$/;"	l
c0101ae8	kernel.asm	/^c0101ae8:	3c 01                	cmp    $0x1,%al$/;"	l
c0101aea	kernel.asm	/^c0101aea:	00 00                	add    %al,(%eax)$/;"	l
c0101aec	kernel.asm	/^c0101aec:	c4                   	(bad)  $/;"	l
c0101aed	kernel.asm	/^c0101aed:	e6 ff                	out    %al,$0xff$/;"	l
c0101aef	kernel.asm	/^c0101aef:	ff 24 00             	jmp    *(%eax,%eax,1)$/;"	l
c0101af2	kernel.asm	/^c0101af2:	00 00                	add    %al,(%eax)$/;"	l
c0101af4	kernel.asm	/^c0101af4:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101af7	kernel.asm	/^c0101af7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101afd	kernel.asm	/^c0101afd:	60                   	pusha  $/;"	l
c0101afe	kernel.asm	/^c0101afe:	c5 0c 04             	lds    (%esp,%eax,1),%ecx$/;"	l
c0101b01	kernel.asm	/^c0101b01:	04 00                	add    $0x0,%al$/;"	l
c0101b03	kernel.asm	/^c0101b03:	00 1c 00             	add    %bl,(%eax,%eax,1)$/;"	l
c0101b06	kernel.asm	/^c0101b06:	00 00                	add    %al,(%eax)$/;"	l
c0101b08	kernel.asm	/^c0101b08:	5c                   	pop    %esp$/;"	l
c0101b09	kernel.asm	/^c0101b09:	01 00                	add    %eax,(%eax)$/;"	l
c0101b0b	kernel.asm	/^c0101b0b:	00 d4                	add    %dl,%ah$/;"	l
c0101b0d	kernel.asm	/^c0101b0d:	e6 ff                	out    %al,$0xff$/;"	l
c0101b0f	kernel.asm	/^c0101b0f:	ff 1d 00 00 00 00    	lcall  *0x0$/;"	l
c0101b15	kernel.asm	/^c0101b15:	41                   	inc    %ecx$/;"	l
c0101b16	kernel.asm	/^c0101b16:	0e                   	push   %cs$/;"	l
c0101b17	kernel.asm	/^c0101b17:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101b1d	kernel.asm	/^c0101b1d:	59                   	pop    %ecx$/;"	l
c0101b1e	kernel.asm	/^c0101b1e:	c5 0c 04             	lds    (%esp,%eax,1),%ecx$/;"	l
c0101b21	kernel.asm	/^c0101b21:	04 00                	add    $0x0,%al$/;"	l
c0101b23	kernel.asm	/^c0101b23:	00 38                	add    %bh,(%eax)$/;"	l
c0101b25	kernel.asm	/^c0101b25:	00 00                	add    %al,(%eax)$/;"	l
c0101b27	kernel.asm	/^c0101b27:	00 7c 01 00          	add    %bh,0x0(%ecx,%eax,1)$/;"	l
c0101b2b	kernel.asm	/^c0101b2b:	00 d4                	add    %dl,%ah$/;"	l
c0101b2d	kernel.asm	/^c0101b2d:	e6 ff                	out    %al,$0xff$/;"	l
c0101b2f	kernel.asm	/^c0101b2f:	ff 86 00 00 00 00    	incl   0x0(%esi)$/;"	l
c0101b35	kernel.asm	/^c0101b35:	41                   	inc    %ecx$/;"	l
c0101b36	kernel.asm	/^c0101b36:	0e                   	push   %cs$/;"	l
c0101b37	kernel.asm	/^c0101b37:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101b3d	kernel.asm	/^c0101b3d:	68 0a c5 0c 04       	push   $0x40cc50a$/;"	l
c0101b42	kernel.asm	/^c0101b42:	04 45                	add    $0x45,%al$/;"	l
c0101b44	kernel.asm	/^c0101b44:	0b 55 0a             	or     0xa(%ebp),%edx$/;"	l
c0101b47	kernel.asm	/^c0101b47:	0c 04                	or     $0x4,%al$/;"	l
c0101b49	kernel.asm	/^c0101b49:	04 c5                	add    $0xc5,%al$/;"	l
c0101b4b	kernel.asm	/^c0101b4b:	43                   	inc    %ebx$/;"	l
c0101b4c	kernel.asm	/^c0101b4c:	0b 53 0a             	or     0xa(%ebx),%edx$/;"	l
c0101b4f	kernel.asm	/^c0101b4f:	0c 04                	or     $0x4,%al$/;"	l
c0101b51	kernel.asm	/^c0101b51:	04 c5                	add    $0xc5,%al$/;"	l
c0101b53	kernel.asm	/^c0101b53:	45                   	inc    %ebp$/;"	l
c0101b54	kernel.asm	/^c0101b54:	0b 45 0a             	or     0xa(%ebp),%eax$/;"	l
c0101b57	kernel.asm	/^c0101b57:	0c 04                	or     $0x4,%al$/;"	l
c0101b59	kernel.asm	/^c0101b59:	04 c5                	add    $0xc5,%al$/;"	l
c0101b5b	kernel.asm	/^c0101b5b:	43                   	inc    %ebx$/;"	l
c0101b5c	kernel.asm	/^c0101b5c:	0b 00                	or     (%eax),%eax$/;"	l
c0101b5e	kernel.asm	/^c0101b5e:	00 00                	add    %al,(%eax)$/;"	l
c0101b60	kernel.asm	/^c0101b60:	28 00                	sub    %al,(%eax)$/;"	l
c0101b62	kernel.asm	/^c0101b62:	00 00                	add    %al,(%eax)$/;"	l
c0101b64	kernel.asm	/^c0101b64:	b8 01 00 00 28       	mov    $0x28000001,%eax$/;"	l
c0101b69	kernel.asm	/^c0101b69:	e7 ff                	out    %eax,$0xff$/;"	l
c0101b6b	kernel.asm	/^c0101b6b:	ff 56 00             	call   *0x0(%esi)$/;"	l
c0101b6e	kernel.asm	/^c0101b6e:	00 00                	add    %al,(%eax)$/;"	l
c0101b70	kernel.asm	/^c0101b70:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101b73	kernel.asm	/^c0101b73:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101b79	kernel.asm	/^c0101b79:	60                   	pusha  $/;"	l
c0101b7a	kernel.asm	/^c0101b7a:	0a c5                	or     %ch,%al$/;"	l
c0101b7c	kernel.asm	/^c0101b7c:	0c 04                	or     $0x4,%al$/;"	l
c0101b7e	kernel.asm	/^c0101b7e:	04 45                	add    $0x45,%al$/;"	l
c0101b80	kernel.asm	/^c0101b80:	0b 42 0a             	or     0xa(%edx),%eax$/;"	l
c0101b83	kernel.asm	/^c0101b83:	0c 04                	or     $0x4,%al$/;"	l
c0101b85	kernel.asm	/^c0101b85:	04 c5                	add    $0xc5,%al$/;"	l
c0101b87	kernel.asm	/^c0101b87:	4e                   	dec    %esi$/;"	l
c0101b88	kernel.asm	/^c0101b88:	0b 00                	or     (%eax),%eax$/;"	l
c0101b8a	kernel.asm	/^c0101b8a:	00 00                	add    %al,(%eax)$/;"	l
c0101b8c	kernel.asm	/^c0101b8c:	1c 00                	sbb    $0x0,%al$/;"	l
c0101b8e	kernel.asm	/^c0101b8e:	00 00                	add    %al,(%eax)$/;"	l
c0101b90	kernel.asm	/^c0101b90:	e4 01                	in     $0x1,%al$/;"	l
c0101b92	kernel.asm	/^c0101b92:	00 00                	add    %al,(%eax)$/;"	l
c0101b94	kernel.asm	/^c0101b94:	5c                   	pop    %esp$/;"	l
c0101b95	kernel.asm	/^c0101b95:	e7 ff                	out    %eax,$0xff$/;"	l
c0101b97	kernel.asm	/^c0101b97:	ff 16                	call   *(%esi)$/;"	l
c0101b99	kernel.asm	/^c0101b99:	00 00                	add    %al,(%eax)$/;"	l
c0101b9b	kernel.asm	/^c0101b9b:	00 00                	add    %al,(%eax)$/;"	l
c0101b9d	kernel.asm	/^c0101b9d:	41                   	inc    %ecx$/;"	l
c0101b9e	kernel.asm	/^c0101b9e:	0e                   	push   %cs$/;"	l
c0101b9f	kernel.asm	/^c0101b9f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101ba5	kernel.asm	/^c0101ba5:	52                   	push   %edx$/;"	l
c0101ba6	kernel.asm	/^c0101ba6:	0c 04                	or     $0x4,%al$/;"	l
c0101ba8	kernel.asm	/^c0101ba8:	04 c5                	add    $0xc5,%al$/;"	l
c0101baa	kernel.asm	/^c0101baa:	00 00                	add    %al,(%eax)$/;"	l
c0101bac	kernel.asm	/^c0101bac:	2c 00                	sub    $0x0,%al$/;"	l
c0101bae	kernel.asm	/^c0101bae:	00 00                	add    %al,(%eax)$/;"	l
c0101bb0	kernel.asm	/^c0101bb0:	04 02                	add    $0x2,%al$/;"	l
c0101bb2	kernel.asm	/^c0101bb2:	00 00                	add    %al,(%eax)$/;"	l
c0101bb4	kernel.asm	/^c0101bb4:	5c                   	pop    %esp$/;"	l
c0101bb5	kernel.asm	/^c0101bb5:	e7 ff                	out    %eax,$0xff$/;"	l
c0101bb7	kernel.asm	/^c0101bb7:	ff 8a 00 00 00 00    	decl   0x0(%edx)$/;"	l
c0101bbd	kernel.asm	/^c0101bbd:	41                   	inc    %ecx$/;"	l
c0101bbe	kernel.asm	/^c0101bbe:	0e                   	push   %cs$/;"	l
c0101bbf	kernel.asm	/^c0101bbf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101bc5	kernel.asm	/^c0101bc5:	49                   	dec    %ecx$/;"	l
c0101bc6	kernel.asm	/^c0101bc6:	83 05 46 87 03 86 04 	addl   $0x4,0x86038746$/;"	l
c0101bcd	kernel.asm	/^c0101bcd:	5b                   	pop    %ebx$/;"	l
c0101bce	kernel.asm	/^c0101bce:	0a 0d 04 c7 c6 c3    	or     0xc3c6c704,%cl$/;"	l
c0101bd4	kernel.asm	/^c0101bd4:	41                   	inc    %ecx$/;"	l
c0101bd5	kernel.asm	/^c0101bd5:	0e                   	push   %cs$/;"	l
c0101bd6	kernel.asm	/^c0101bd6:	04 c5                	add    $0xc5,%al$/;"	l
c0101bd8	kernel.asm	/^c0101bd8:	4a                   	dec    %edx$/;"	l
c0101bd9	kernel.asm	/^c0101bd9:	0b 00                	or     (%eax),%eax$/;"	l
c0101bdb	kernel.asm	/^c0101bdb:	00 34 00             	add    %dh,(%eax,%eax,1)$/;"	l
c0101bde	kernel.asm	/^c0101bde:	00 00                	add    %al,(%eax)$/;"	l
c0101be0	kernel.asm	/^c0101be0:	34 02                	xor    $0x2,%al$/;"	l
c0101be2	kernel.asm	/^c0101be2:	00 00                	add    %al,(%eax)$/;"	l
c0101be4	kernel.asm	/^c0101be4:	bc e7 ff ff a6       	mov    $0xa6ffffe7,%esp$/;"	l
c0101be9	kernel.asm	/^c0101be9:	00 00                	add    %al,(%eax)$/;"	l
c0101beb	kernel.asm	/^c0101beb:	00 00                	add    %al,(%eax)$/;"	l
c0101bed	kernel.asm	/^c0101bed:	41                   	inc    %ecx$/;"	l
c0101bee	kernel.asm	/^c0101bee:	0e                   	push   %cs$/;"	l
c0101bef	kernel.asm	/^c0101bef:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101bf5	kernel.asm	/^c0101bf5:	49                   	dec    %ecx$/;"	l
c0101bf6	kernel.asm	/^c0101bf6:	83 04 43 86          	addl   $0xffffff86,(%ebx,%eax,2)$/;"	l
c0101bfa	kernel.asm	/^c0101bfa:	03 58 0a             	add    0xa(%eax),%ebx$/;"	l
c0101bfd	kernel.asm	/^c0101bfd:	0d 04 c6 c3 41       	or     $0x41c3c604,%eax$/;"	l
c0101c02	kernel.asm	/^c0101c02:	0e                   	push   %cs$/;"	l
c0101c03	kernel.asm	/^c0101c03:	04 c5                	add    $0xc5,%al$/;"	l
c0101c05	kernel.asm	/^c0101c05:	48                   	dec    %eax$/;"	l
c0101c06	kernel.asm	/^c0101c06:	0b 73 0a             	or     0xa(%ebx),%esi$/;"	l
c0101c09	kernel.asm	/^c0101c09:	c3                   	ret    $/;"	l
c0101c0a	kernel.asm	/^c0101c0a:	c6                   	(bad)  $/;"	l
c0101c0b	kernel.asm	/^c0101c0b:	0d 04 41 c5 0e       	or     $0xec54104,%eax$/;"	l
c0101c10	kernel.asm	/^c0101c10:	04 4c                	add    $0x4c,%al$/;"	l
c0101c12	kernel.asm	/^c0101c12:	0b 00                	or     (%eax),%eax$/;"	l
c0101c14	kernel.asm	/^c0101c14:	30 00                	xor    %al,(%eax)$/;"	l
c0101c16	kernel.asm	/^c0101c16:	00 00                	add    %al,(%eax)$/;"	l
c0101c18	kernel.asm	/^c0101c18:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c0101c19	kernel.asm	/^c0101c19:	02 00                	add    (%eax),%al$/;"	l
c0101c1b	kernel.asm	/^c0101c1b:	00 34 e8             	add    %dh,(%eax,%ebp,8)$/;"	l
c0101c1e	kernel.asm	/^c0101c1e:	ff                   	(bad)  $/;"	l
c0101c1f	kernel.asm	/^c0101c1f:	ff ae 00 00 00 00    	ljmp   *0x0(%esi)$/;"	l
c0101c25	kernel.asm	/^c0101c25:	41                   	inc    %ecx$/;"	l
c0101c26	kernel.asm	/^c0101c26:	0e                   	push   %cs$/;"	l
c0101c27	kernel.asm	/^c0101c27:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101c2d	kernel.asm	/^c0101c2d:	48                   	dec    %eax$/;"	l
c0101c2e	kernel.asm	/^c0101c2e:	83 04 86 03          	addl   $0x3,(%esi,%eax,4)$/;"	l
c0101c32	kernel.asm	/^c0101c32:	02 72 0a             	add    0xa(%edx),%dh$/;"	l
c0101c35	kernel.asm	/^c0101c35:	c3                   	ret    $/;"	l
c0101c36	kernel.asm	/^c0101c36:	41                   	inc    %ecx$/;"	l
c0101c37	kernel.asm	/^c0101c37:	c6 41 0c 04          	movb   $0x4,0xc(%ecx)$/;"	l
c0101c3b	kernel.asm	/^c0101c3b:	04 c5                	add    $0xc5,%al$/;"	l
c0101c3d	kernel.asm	/^c0101c3d:	41                   	inc    %ecx$/;"	l
c0101c3e	kernel.asm	/^c0101c3e:	0b 6b c3             	or     -0x3d(%ebx),%ebp$/;"	l
c0101c41	kernel.asm	/^c0101c41:	41                   	inc    %ecx$/;"	l
c0101c42	kernel.asm	/^c0101c42:	c6 41 c5 0c          	movb   $0xc,-0x3b(%ecx)$/;"	l
c0101c46	kernel.asm	/^c0101c46:	04 04                	add    $0x4,%al$/;"	l
c0101c48	kernel.asm	/^c0101c48:	28 00                	sub    %al,(%eax)$/;"	l
c0101c4a	kernel.asm	/^c0101c4a:	00 00                	add    %al,(%eax)$/;"	l
c0101c4c	kernel.asm	/^c0101c4c:	a0 02 00 00 b0       	mov    0xb0000002,%al$/;"	l
c0101c51	kernel.asm	/^c0101c51:	e8 ff ff 64 00       	call   c0751c55 <_end+0x30940d>$/;"	l
c0101c56	kernel.asm	/^c0101c56:	00 00                	add    %al,(%eax)$/;"	l
c0101c58	kernel.asm	/^c0101c58:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101c5b	kernel.asm	/^c0101c5b:	08 85 02 47 0d 05    	or     %al,0x50d4702(%ebp)$/;"	l
c0101c61	kernel.asm	/^c0101c61:	4d                   	dec    %ebp$/;"	l
c0101c62	kernel.asm	/^c0101c62:	83 05 86 04 87 03 02 	addl   $0x2,0x3870486$/;"	l
c0101c69	kernel.asm	/^c0101c69:	4b                   	dec    %ebx$/;"	l
c0101c6a	kernel.asm	/^c0101c6a:	c3                   	ret    $/;"	l
c0101c6b	kernel.asm	/^c0101c6b:	41                   	inc    %ecx$/;"	l
c0101c6c	kernel.asm	/^c0101c6c:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)$/;"	l
c0101c70	kernel.asm	/^c0101c70:	0c 04                	or     $0x4,%al$/;"	l
c0101c72	kernel.asm	/^c0101c72:	04 c5                	add    $0xc5,%al$/;"	l
c0101c74	kernel.asm	/^c0101c74:	28 00                	sub    %al,(%eax)$/;"	l
c0101c76	kernel.asm	/^c0101c76:	00 00                	add    %al,(%eax)$/;"	l
c0101c78	kernel.asm	/^c0101c78:	cc                   	int3   $/;"	l
c0101c79	kernel.asm	/^c0101c79:	02 00                	add    (%eax),%al$/;"	l
c0101c7b	kernel.asm	/^c0101c7b:	00 f4                	add    %dh,%ah$/;"	l
c0101c7d	kernel.asm	/^c0101c7d:	e8 ff ff d9 00       	call   c0ea1c81 <_end+0xa59439>$/;"	l
c0101c82	kernel.asm	/^c0101c82:	00 00                	add    %al,(%eax)$/;"	l
c0101c84	kernel.asm	/^c0101c84:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101c87	kernel.asm	/^c0101c87:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101c8d	kernel.asm	/^c0101c8d:	48                   	dec    %eax$/;"	l
c0101c8e	kernel.asm	/^c0101c8e:	83 04 86 03          	addl   $0x3,(%esi,%eax,4)$/;"	l
c0101c92	kernel.asm	/^c0101c92:	02 5a 0a             	add    0xa(%edx),%bl$/;"	l
c0101c95	kernel.asm	/^c0101c95:	c3                   	ret    $/;"	l
c0101c96	kernel.asm	/^c0101c96:	41                   	inc    %ecx$/;"	l
c0101c97	kernel.asm	/^c0101c97:	c6 41 0c 04          	movb   $0x4,0xc(%ecx)$/;"	l
c0101c9b	kernel.asm	/^c0101c9b:	04 c5                	add    $0xc5,%al$/;"	l
c0101c9d	kernel.asm	/^c0101c9d:	41                   	inc    %ecx$/;"	l
c0101c9e	kernel.asm	/^c0101c9e:	0b 00                	or     (%eax),%eax$/;"	l
c0101ca0	kernel.asm	/^c0101ca0:	28 00                	sub    %al,(%eax)$/;"	l
c0101ca2	kernel.asm	/^c0101ca2:	00 00                	add    %al,(%eax)$/;"	l
c0101ca4	kernel.asm	/^c0101ca4:	f8                   	clc    $/;"	l
c0101ca5	kernel.asm	/^c0101ca5:	02 00                	add    (%eax),%al$/;"	l
c0101ca7	kernel.asm	/^c0101ca7:	00 a8 e9 ff ff 81    	add    %ch,-0x7e000017(%eax)$/;"	l
c0101cad	kernel.asm	/^c0101cad:	00 00                	add    %al,(%eax)$/;"	l
c0101caf	kernel.asm	/^c0101caf:	00 00                	add    %al,(%eax)$/;"	l
c0101cb1	kernel.asm	/^c0101cb1:	41                   	inc    %ecx$/;"	l
c0101cb2	kernel.asm	/^c0101cb2:	0e                   	push   %cs$/;"	l
c0101cb3	kernel.asm	/^c0101cb3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101cb9	kernel.asm	/^c0101cb9:	49                   	dec    %ecx$/;"	l
c0101cba	kernel.asm	/^c0101cba:	86 04 4d 83 05 87 03 	xchg   %al,0x3870583(,%ecx,2)$/;"	l
c0101cc1	kernel.asm	/^c0101cc1:	02 66 0d             	add    0xd(%esi),%ah$/;"	l
c0101cc4	kernel.asm	/^c0101cc4:	04 c7                	add    $0xc7,%al$/;"	l
c0101cc6	kernel.asm	/^c0101cc6:	c6 c3 41             	mov    $0x41,%bl$/;"	l
c0101cc9	kernel.asm	/^c0101cc9:	0e                   	push   %cs$/;"	l
c0101cca	kernel.asm	/^c0101cca:	04 c5                	add    $0xc5,%al$/;"	l
c0101ccc	kernel.asm	/^c0101ccc:	2c 00                	sub    $0x0,%al$/;"	l
c0101cce	kernel.asm	/^c0101cce:	00 00                	add    %al,(%eax)$/;"	l
c0101cd0	kernel.asm	/^c0101cd0:	24 03                	and    $0x3,%al$/;"	l
c0101cd2	kernel.asm	/^c0101cd2:	00 00                	add    %al,(%eax)$/;"	l
c0101cd4	kernel.asm	/^c0101cd4:	0c ea                	or     $0xea,%al$/;"	l
c0101cd6	kernel.asm	/^c0101cd6:	ff                   	(bad)  $/;"	l
c0101cd7	kernel.asm	/^c0101cd7:	ff 59 02             	lcall  *0x2(%ecx)$/;"	l
c0101cda	kernel.asm	/^c0101cda:	00 00                	add    %al,(%eax)$/;"	l
c0101cdc	kernel.asm	/^c0101cdc:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101cdf	kernel.asm	/^c0101cdf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101ce5	kernel.asm	/^c0101ce5:	43                   	inc    %ebx$/;"	l
c0101ce6	kernel.asm	/^c0101ce6:	87 03                	xchg   %eax,(%ebx)$/;"	l
c0101ce8	kernel.asm	/^c0101ce8:	48                   	dec    %eax$/;"	l
c0101ce9	kernel.asm	/^c0101ce9:	83 05 86 04 70 0a c3 	addl   $0xffffffc3,0xa700486$/;"	l
c0101cf0	kernel.asm	/^c0101cf0:	41                   	inc    %ecx$/;"	l
c0101cf1	kernel.asm	/^c0101cf1:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)$/;"	l
c0101cf5	kernel.asm	/^c0101cf5:	0c 04                	or     $0x4,%al$/;"	l
c0101cf7	kernel.asm	/^c0101cf7:	04 c5                	add    $0xc5,%al$/;"	l
c0101cf9	kernel.asm	/^c0101cf9:	47                   	inc    %edi$/;"	l
c0101cfa	kernel.asm	/^c0101cfa:	0b 00                	or     (%eax),%eax$/;"	l
c0101cfc	kernel.asm	/^c0101cfc:	1c 00                	sbb    $0x0,%al$/;"	l
c0101cfe	kernel.asm	/^c0101cfe:	00 00                	add    %al,(%eax)$/;"	l
c0101d00	kernel.asm	/^c0101d00:	54                   	push   %esp$/;"	l
c0101d01	kernel.asm	/^c0101d01:	03 00                	add    (%eax),%eax$/;"	l
c0101d03	kernel.asm	/^c0101d03:	00 3c ec             	add    %bh,(%esp,%ebp,8)$/;"	l
c0101d06	kernel.asm	/^c0101d06:	ff                   	(bad)  $/;"	l
c0101d07	kernel.asm	/^c0101d07:	ff 1f                	lcall  *(%edi)$/;"	l
c0101d09	kernel.asm	/^c0101d09:	00 00                	add    %al,(%eax)$/;"	l
c0101d0b	kernel.asm	/^c0101d0b:	00 00                	add    %al,(%eax)$/;"	l
c0101d0d	kernel.asm	/^c0101d0d:	41                   	inc    %ecx$/;"	l
c0101d0e	kernel.asm	/^c0101d0e:	0e                   	push   %cs$/;"	l
c0101d0f	kernel.asm	/^c0101d0f:	08 85 02 47 0d 05    	or     %al,0x50d4702(%ebp)$/;"	l
c0101d15	kernel.asm	/^c0101d15:	56                   	push   %esi$/;"	l
c0101d16	kernel.asm	/^c0101d16:	0c 04                	or     $0x4,%al$/;"	l
c0101d18	kernel.asm	/^c0101d18:	04 c5                	add    $0xc5,%al$/;"	l
c0101d1a	kernel.asm	/^c0101d1a:	00 00                	add    %al,(%eax)$/;"	l
c0101d1c	kernel.asm	/^c0101d1c:	1c 00                	sbb    $0x0,%al$/;"	l
c0101d1e	kernel.asm	/^c0101d1e:	00 00                	add    %al,(%eax)$/;"	l
c0101d20	kernel.asm	/^c0101d20:	74 03                	je     c0101d25 <digits.849+0x4fc>$/;"	l
c0101d22	kernel.asm	/^c0101d22:	00 00                	add    %al,(%eax)$/;"	l
c0101d24	kernel.asm	/^c0101d24:	3c ec                	cmp    $0xec,%al$/;"	l
c0101d26	kernel.asm	/^c0101d26:	ff                   	(bad)  $/;"	l
c0101d27	kernel.asm	/^c0101d27:	ff                   	(bad)  $/;"	l
c0101d28	kernel.asm	/^c0101d28:	3a 00                	cmp    (%eax),%al$/;"	l
c0101d2a	kernel.asm	/^c0101d2a:	00 00                	add    %al,(%eax)$/;"	l
c0101d2c	kernel.asm	/^c0101d2c:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101d2f	kernel.asm	/^c0101d2f:	08 85 02 47 0d 05    	or     %al,0x50d4702(%ebp)$/;"	l
c0101d35	kernel.asm	/^c0101d35:	71 0c                	jno    c0101d43 <digits.849+0x51a>$/;"	l
c0101d37	kernel.asm	/^c0101d37:	04 04                	add    $0x4,%al$/;"	l
c0101d39	kernel.asm	/^c0101d39:	c5 00                	lds    (%eax),%eax$/;"	l
c0101d3b	kernel.asm	/^c0101d3b:	00 1c 00             	add    %bl,(%eax,%eax,1)$/;"	l
c0101d3e	kernel.asm	/^c0101d3e:	00 00                	add    %al,(%eax)$/;"	l
c0101d40	kernel.asm	/^c0101d40:	94                   	xchg   %eax,%esp$/;"	l
c0101d41	kernel.asm	/^c0101d41:	03 00                	add    (%eax),%eax$/;"	l
c0101d43	kernel.asm	/^c0101d43:	00 5c ec ff          	add    %bl,-0x1(%esp,%ebp,8)$/;"	l
c0101d47	kernel.asm	/^c0101d47:	ff 22                	jmp    *(%edx)$/;"	l
c0101d49	kernel.asm	/^c0101d49:	00 00                	add    %al,(%eax)$/;"	l
c0101d4b	kernel.asm	/^c0101d4b:	00 00                	add    %al,(%eax)$/;"	l
c0101d4d	kernel.asm	/^c0101d4d:	41                   	inc    %ecx$/;"	l
c0101d4e	kernel.asm	/^c0101d4e:	0e                   	push   %cs$/;"	l
c0101d4f	kernel.asm	/^c0101d4f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101d55	kernel.asm	/^c0101d55:	5e                   	pop    %esi$/;"	l
c0101d56	kernel.asm	/^c0101d56:	c5 0c 04             	lds    (%esp,%eax,1),%ecx$/;"	l
c0101d59	kernel.asm	/^c0101d59:	04 00                	add    $0x0,%al$/;"	l
c0101d5b	kernel.asm	/^c0101d5b:	00 1c 00             	add    %bl,(%eax,%eax,1)$/;"	l
c0101d5e	kernel.asm	/^c0101d5e:	00 00                	add    %al,(%eax)$/;"	l
c0101d60	kernel.asm	/^c0101d60:	b4 03                	mov    $0x3,%ah$/;"	l
c0101d62	kernel.asm	/^c0101d62:	00 00                	add    %al,(%eax)$/;"	l
c0101d64	kernel.asm	/^c0101d64:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c0101d65	kernel.asm	/^c0101d65:	ec                   	in     (%dx),%al$/;"	l
c0101d66	kernel.asm	/^c0101d66:	ff                   	(bad)  $/;"	l
c0101d67	kernel.asm	/^c0101d67:	ff 93 00 00 00 00    	call   *0x0(%ebx)$/;"	l
c0101d6d	kernel.asm	/^c0101d6d:	41                   	inc    %ecx$/;"	l
c0101d6e	kernel.asm	/^c0101d6e:	0e                   	push   %cs$/;"	l
c0101d6f	kernel.asm	/^c0101d6f:	08 85 02 47 0d 05    	or     %al,0x50d4702(%ebp)$/;"	l
c0101d75	kernel.asm	/^c0101d75:	02 8a c5 0c 04 04    	add    0x4040cc5(%edx),%cl$/;"	l
c0101d7b	kernel.asm	/^c0101d7b:	00 1c 00             	add    %bl,(%eax,%eax,1)$/;"	l
c0101d7e	kernel.asm	/^c0101d7e:	00 00                	add    %al,(%eax)$/;"	l
c0101d80	kernel.asm	/^c0101d80:	d4 03                	aam    $0x3$/;"	d
c0101d82	kernel.asm	/^c0101d82:	00 00                	add    %al,(%eax)$/;"	l
c0101d84	kernel.asm	/^c0101d84:	ec                   	in     (%dx),%al$/;"	l
c0101d85	kernel.asm	/^c0101d85:	ec                   	in     (%dx),%al$/;"	l
c0101d86	kernel.asm	/^c0101d86:	ff                   	(bad)  $/;"	l
c0101d87	kernel.asm	/^c0101d87:	ff 17                	call   *(%edi)$/;"	l
c0101d89	kernel.asm	/^c0101d89:	01 00                	add    %eax,(%eax)$/;"	l
c0101d8b	kernel.asm	/^c0101d8b:	00 00                	add    %al,(%eax)$/;"	l
c0101d8d	kernel.asm	/^c0101d8d:	5b                   	pop    %ebx$/;"	l
c0101d8e	kernel.asm	/^c0101d8e:	0e                   	push   %cs$/;"	l
c0101d8f	kernel.asm	/^c0101d8f:	08 85 02 45 0d 05    	or     %al,0x50d4502(%ebp)$/;"	l
c0101d95	kernel.asm	/^c0101d95:	02 f6                	add    %dh,%dh$/;"	l
c0101d97	kernel.asm	/^c0101d97:	0c 04                	or     $0x4,%al$/;"	l
c0101d99	kernel.asm	/^c0101d99:	04 c5                	add    $0xc5,%al$/;"	l
c0101d9b	kernel.asm	/^c0101d9b:	00 1c 00             	add    %bl,(%eax,%eax,1)$/;"	l
c0101d9e	kernel.asm	/^c0101d9e:	00 00                	add    %al,(%eax)$/;"	l
c0101da0	kernel.asm	/^c0101da0:	f4                   	hlt    $/;"	l
c0101da1	kernel.asm	/^c0101da1:	03 00                	add    (%eax),%eax$/;"	l
c0101da3	kernel.asm	/^c0101da3:	00 ec                	add    %ch,%ah$/;"	l
c0101da5	kernel.asm	/^c0101da5:	ed                   	in     (%dx),%eax$/;"	l
c0101da6	kernel.asm	/^c0101da6:	ff                   	(bad)  $/;"	l
c0101da7	kernel.asm	/^c0101da7:	ff a9 01 00 00 00    	ljmp   *0x1(%ecx)$/;"	l
c0101dad	kernel.asm	/^c0101dad:	41                   	inc    %ecx$/;"	l
c0101dae	kernel.asm	/^c0101dae:	0e                   	push   %cs$/;"	l
c0101daf	kernel.asm	/^c0101daf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101db5	kernel.asm	/^c0101db5:	46                   	inc    %esi$/;"	l
c0101db6	kernel.asm	/^c0101db6:	86 03                	xchg   %al,(%ebx)$/;"	l
c0101db8	kernel.asm	/^c0101db8:	4a                   	dec    %edx$/;"	l
c0101db9	kernel.asm	/^c0101db9:	83 04 00 18          	addl   $0x18,(%eax,%eax,1)$/;"	l
c0101dbd	kernel.asm	/^c0101dbd:	00 00                	add    %al,(%eax)$/;"	l
c0101dbf	kernel.asm	/^c0101dbf:	00 14 04             	add    %dl,(%esp,%eax,1)$/;"	l
c0101dc2	kernel.asm	/^c0101dc2:	00 00                	add    %al,(%eax)$/;"	l
c0101dc4	kernel.asm	/^c0101dc4:	7c ef                	jl     c0101db5 <digits.849+0x58c>$/;"	l
c0101dc6	kernel.asm	/^c0101dc6:	ff                   	(bad)  $/;"	l
c0101dc7	kernel.asm	/^c0101dc7:	ff 91 01 00 00 00    	call   *0x1(%ecx)$/;"	l
c0101dcd	kernel.asm	/^c0101dcd:	41                   	inc    %ecx$/;"	l
c0101dce	kernel.asm	/^c0101dce:	0e                   	push   %cs$/;"	l
c0101dcf	kernel.asm	/^c0101dcf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101dd5	kernel.asm	/^c0101dd5:	46                   	inc    %esi$/;"	l
c0101dd6	kernel.asm	/^c0101dd6:	83 03 1c             	addl   $0x1c,(%ebx)$/;"	l
c0101dd9	kernel.asm	/^c0101dd9:	00 00                	add    %al,(%eax)$/;"	l
c0101ddb	kernel.asm	/^c0101ddb:	00 30                	add    %dh,(%eax)$/;"	l
c0101ddd	kernel.asm	/^c0101ddd:	04 00                	add    $0x0,%al$/;"	l
c0101ddf	kernel.asm	/^c0101ddf:	00 00                	add    %al,(%eax)$/;"	l
c0101de1	kernel.asm	/^c0101de1:	f1                   	icebp  $/;"	l
c0101de2	kernel.asm	/^c0101de2:	ff                   	(bad)  $/;"	l
c0101de3	kernel.asm	/^c0101de3:	ff d0                	call   *%eax$/;"	l
c0101de5	kernel.asm	/^c0101de5:	00 00                	add    %al,(%eax)$/;"	l
c0101de7	kernel.asm	/^c0101de7:	00 00                	add    %al,(%eax)$/;"	l
c0101de9	kernel.asm	/^c0101de9:	41                   	inc    %ecx$/;"	l
c0101dea	kernel.asm	/^c0101dea:	0e                   	push   %cs$/;"	l
c0101deb	kernel.asm	/^c0101deb:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101df1	kernel.asm	/^c0101df1:	02 cc                	add    %ah,%cl$/;"	l
c0101df3	kernel.asm	/^c0101df3:	c5 0c 04             	lds    (%esp,%eax,1),%ecx$/;"	l
c0101df6	kernel.asm	/^c0101df6:	04 00                	add    $0x0,%al$/;"	l
c0101df8	kernel.asm	/^c0101df8:	18 00                	sbb    %al,(%eax)$/;"	l
c0101dfa	kernel.asm	/^c0101dfa:	00 00                	add    %al,(%eax)$/;"	l
c0101dfc	kernel.asm	/^c0101dfc:	50                   	push   %eax$/;"	l
c0101dfd	kernel.asm	/^c0101dfd:	04 00                	add    $0x0,%al$/;"	l
c0101dff	kernel.asm	/^c0101dff:	00 b0 f1 ff ff 3b    	add    %dh,0x3bfffff1(%eax)$/;"	l
c0101e05	kernel.asm	/^c0101e05:	00 00                	add    %al,(%eax)$/;"	l
c0101e07	kernel.asm	/^c0101e07:	00 00                	add    %al,(%eax)$/;"	l
c0101e09	kernel.asm	/^c0101e09:	41                   	inc    %ecx$/;"	l
c0101e0a	kernel.asm	/^c0101e0a:	0e                   	push   %cs$/;"	l
c0101e0b	kernel.asm	/^c0101e0b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101e11	kernel.asm	/^c0101e11:	00 00                	add    %al,(%eax)$/;"	l
c0101e13	kernel.asm	/^c0101e13:	00 18                	add    %bl,(%eax)$/;"	l
c0101e15	kernel.asm	/^c0101e15:	00 00                	add    %al,(%eax)$/;"	l
c0101e17	kernel.asm	/^c0101e17:	00 6c 04 00          	add    %ch,0x0(%esp,%eax,1)$/;"	l
c0101e1b	kernel.asm	/^c0101e1b:	00 d4                	add    %dl,%ah$/;"	l
c0101e1d	kernel.asm	/^c0101e1d:	f1                   	icebp  $/;"	l
c0101e1e	kernel.asm	/^c0101e1e:	ff                   	(bad)  $/;"	l
c0101e1f	kernel.asm	/^c0101e1f:	ff 16                	call   *(%esi)$/;"	l
c0101e21	kernel.asm	/^c0101e21:	00 00                	add    %al,(%eax)$/;"	l
c0101e23	kernel.asm	/^c0101e23:	00 00                	add    %al,(%eax)$/;"	l
c0101e25	kernel.asm	/^c0101e25:	41                   	inc    %ecx$/;"	l
c0101e26	kernel.asm	/^c0101e26:	0e                   	push   %cs$/;"	l
c0101e27	kernel.asm	/^c0101e27:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101e2d	kernel.asm	/^c0101e2d:	00 00                	add    %al,(%eax)$/;"	l
c0101e2f	kernel.asm	/^c0101e2f:	00 28                	add    %ch,(%eax)$/;"	l
c0101e31	kernel.asm	/^c0101e31:	00 00                	add    %al,(%eax)$/;"	l
c0101e33	kernel.asm	/^c0101e33:	00 88 04 00 00 d8    	add    %cl,-0x27fffffc(%eax)$/;"	l
c0101e39	kernel.asm	/^c0101e39:	f1                   	icebp  $/;"	l
c0101e3a	kernel.asm	/^c0101e3a:	ff                   	(bad)  $/;"	l
c0101e3b	kernel.asm	/^c0101e3b:	ff 9c 03 00 00 00 41 	lcall  *0x41000000(%ebx,%eax,1)$/;"	l
c0101e42	kernel.asm	/^c0101e42:	0e                   	push   %cs$/;"	l
c0101e43	kernel.asm	/^c0101e43:	08 85 02 44 0d 05    	or     %al,0x50d4402(%ebp)$/;"	l
c0101e49	kernel.asm	/^c0101e49:	4c                   	dec    %esp$/;"	l
c0101e4a	kernel.asm	/^c0101e4a:	83 04 86 03          	addl   $0x3,(%esi,%eax,4)$/;"	l
c0101e4e	kernel.asm	/^c0101e4e:	03 1e                	add    (%esi),%ebx$/;"	l
c0101e50	kernel.asm	/^c0101e50:	03 c3                	add    %ebx,%eax$/;"	l
c0101e52	kernel.asm	/^c0101e52:	48                   	dec    %eax$/;"	l
c0101e53	kernel.asm	/^c0101e53:	c6 02 64             	movb   $0x64,(%edx)$/;"	l
c0101e56	kernel.asm	/^c0101e56:	0c 04                	or     $0x4,%al$/;"	l
c0101e58	kernel.asm	/^c0101e58:	04 c5                	add    $0xc5,%al$/;"	l
c0101e5a	kernel.asm	/^c0101e5a:	00 00                	add    %al,(%eax)$/;"	l
c0101e5c	kernel.asm	/^c0101e5c:	40                   	inc    %eax$/;"	l
c0101e5d	kernel.asm	/^c0101e5d:	00 00                	add    %al,(%eax)$/;"	l
c0101e5f	kernel.asm	/^c0101e5f:	00 b4 04 00 00 4c f5 	add    %dh,-0xab40000(%esp,%eax,1)$/;"	l
c0101e66	kernel.asm	/^c0101e66:	ff                   	(bad)  $/;"	l
c0101e67	kernel.asm	/^c0101e67:	ff e1                	jmp    *%ecx$/;"	l
c0101e69	kernel.asm	/^c0101e69:	00 00                	add    %al,(%eax)$/;"	l
c0101e6b	kernel.asm	/^c0101e6b:	00 00                	add    %al,(%eax)$/;"	l
c0101e6d	kernel.asm	/^c0101e6d:	41                   	inc    %ecx$/;"	l
c0101e6e	kernel.asm	/^c0101e6e:	0e                   	push   %cs$/;"	l
c0101e6f	kernel.asm	/^c0101e6f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101e75	kernel.asm	/^c0101e75:	49                   	dec    %ecx$/;"	l
c0101e76	kernel.asm	/^c0101e76:	83 04 46 86          	addl   $0xffffff86,(%esi,%eax,2)$/;"	l
c0101e7a	kernel.asm	/^c0101e7a:	03 7a 0a             	add    0xa(%edx),%edi$/;"	l
c0101e7d	kernel.asm	/^c0101e7d:	0d 04 c6 c3 41       	or     $0x41c3c604,%eax$/;"	l
c0101e82	kernel.asm	/^c0101e82:	0e                   	push   %cs$/;"	l
c0101e83	kernel.asm	/^c0101e83:	04 c5                	add    $0xc5,%al$/;"	l
c0101e85	kernel.asm	/^c0101e85:	43                   	inc    %ebx$/;"	l
c0101e86	kernel.asm	/^c0101e86:	0b 50 0a             	or     0xa(%eax),%edx$/;"	l
c0101e89	kernel.asm	/^c0101e89:	c3                   	ret    $/;"	l
c0101e8a	kernel.asm	/^c0101e8a:	c6                   	(bad)  $/;"	l
c0101e8b	kernel.asm	/^c0101e8b:	0d 04 41 c5 0e       	or     $0xec54104,%eax$/;"	l
c0101e90	kernel.asm	/^c0101e90:	04 47                	add    $0x47,%al$/;"	l
c0101e92	kernel.asm	/^c0101e92:	0b 02                	or     (%edx),%eax$/;"	l
c0101e94	kernel.asm	/^c0101e94:	59                   	pop    %ecx$/;"	l
c0101e95	kernel.asm	/^c0101e95:	0a 0d 04 c6 c3 41    	or     0x41c3c604,%cl$/;"	l
c0101e9b	kernel.asm	/^c0101e9b:	0e                   	push   %cs$/;"	l
c0101e9c	kernel.asm	/^c0101e9c:	04 c5                	add    $0xc5,%al$/;"	l
c0101e9e	kernel.asm	/^c0101e9e:	46                   	inc    %esi$/;"	l
c0101e9f	kernel.asm	/^c0101e9f:	0b 1c 00             	or     (%eax,%eax,1),%ebx$/;"	l
c0101ea2	kernel.asm	/^c0101ea2:	00 00                	add    %al,(%eax)$/;"	l
c0101ea4	kernel.asm	/^c0101ea4:	f8                   	clc    $/;"	l
c0101ea5	kernel.asm	/^c0101ea5:	04 00                	add    $0x0,%al$/;"	l
c0101ea7	kernel.asm	/^c0101ea7:	00 f8                	add    %bh,%al$/;"	l
c0101ea9	kernel.asm	/^c0101ea9:	f5                   	cmc    $/;"	l
c0101eaa	kernel.asm	/^c0101eaa:	ff                   	(bad)  $/;"	l
c0101eab	kernel.asm	/^c0101eab:	ff 67 00             	jmp    *0x0(%edi)$/;"	l
c0101eae	kernel.asm	/^c0101eae:	00 00                	add    %al,(%eax)$/;"	l
c0101eb0	kernel.asm	/^c0101eb0:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101eb3	kernel.asm	/^c0101eb3:	08 85 02 47 0d 05    	or     %al,0x50d4702(%ebp)$/;"	l
c0101eb9	kernel.asm	/^c0101eb9:	02 5e 0c             	add    0xc(%esi),%bl$/;"	l
c0101ebc	kernel.asm	/^c0101ebc:	04 04                	add    $0x4,%al$/;"	l
c0101ebe	kernel.asm	/^c0101ebe:	c5 00                	lds    (%eax),%eax$/;"	l
c0101ec0	kernel.asm	/^c0101ec0:	1c 00                	sbb    $0x0,%al$/;"	l
c0101ec2	kernel.asm	/^c0101ec2:	00 00                	add    %al,(%eax)$/;"	l
c0101ec4	kernel.asm	/^c0101ec4:	18 05 00 00 48 f6    	sbb    %al,0xf6480000$/;"	l
c0101eca	kernel.asm	/^c0101eca:	ff                   	(bad)  $/;"	l
c0101ecb	kernel.asm	/^c0101ecb:	ff 19                	lcall  *(%ecx)$/;"	l
c0101ecd	kernel.asm	/^c0101ecd:	00 00                	add    %al,(%eax)$/;"	l
c0101ecf	kernel.asm	/^c0101ecf:	00 00                	add    %al,(%eax)$/;"	l
c0101ed1	kernel.asm	/^c0101ed1:	41                   	inc    %ecx$/;"	l
c0101ed2	kernel.asm	/^c0101ed2:	0e                   	push   %cs$/;"	l
c0101ed3	kernel.asm	/^c0101ed3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101ed9	kernel.asm	/^c0101ed9:	55                   	push   %ebp$/;"	l
c0101eda	kernel.asm	/^c0101eda:	0c 04                	or     $0x4,%al$/;"	l
c0101edc	kernel.asm	/^c0101edc:	04 c5                	add    $0xc5,%al$/;"	l
c0101ede	kernel.asm	/^c0101ede:	00 00                	add    %al,(%eax)$/;"	l
c0101ee0	kernel.asm	/^c0101ee0:	24 00                	and    $0x0,%al$/;"	l
c0101ee2	kernel.asm	/^c0101ee2:	00 00                	add    %al,(%eax)$/;"	l
c0101ee4	kernel.asm	/^c0101ee4:	38 05 00 00 48 f6    	cmp    %al,0xf6480000$/;"	l
c0101eea	kernel.asm	/^c0101eea:	ff                   	(bad)  $/;"	l
c0101eeb	kernel.asm	/^c0101eeb:	ff                   	(bad)  $/;"	l
c0101eec	kernel.asm	/^c0101eec:	7e 00                	jle    c0101eee <digits.849+0x6c5>$/;"	l
c0101eee	kernel.asm	/^c0101eee:	00 00                	add    %al,(%eax)$/;"	l
c0101ef0	kernel.asm	/^c0101ef0:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101ef3	kernel.asm	/^c0101ef3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101ef9	kernel.asm	/^c0101ef9:	50                   	push   %eax$/;"	l
c0101efa	kernel.asm	/^c0101efa:	83 03 7a             	addl   $0x7a,(%ebx)$/;"	l
c0101efd	kernel.asm	/^c0101efd:	0a c3                	or     %bl,%al$/;"	l
c0101eff	kernel.asm	/^c0101eff:	41                   	inc    %ecx$/;"	l
c0101f00	kernel.asm	/^c0101f00:	0c 04                	or     $0x4,%al$/;"	l
c0101f02	kernel.asm	/^c0101f02:	04 c5                	add    $0xc5,%al$/;"	l
c0101f04	kernel.asm	/^c0101f04:	42                   	inc    %edx$/;"	l
c0101f05	kernel.asm	/^c0101f05:	0b 00                	or     (%eax),%eax$/;"	l
c0101f07	kernel.asm	/^c0101f07:	00 24 00             	add    %ah,(%eax,%eax,1)$/;"	l
c0101f0a	kernel.asm	/^c0101f0a:	00 00                	add    %al,(%eax)$/;"	l
c0101f0c	kernel.asm	/^c0101f0c:	60                   	pusha  $/;"	l
c0101f0d	kernel.asm	/^c0101f0d:	05 00 00 a0 f6       	add    $0xf6a00000,%eax$/;"	l
c0101f12	kernel.asm	/^c0101f12:	ff                   	(bad)  $/;"	l
c0101f13	kernel.asm	/^c0101f13:	ff 36                	pushl  (%esi)$/;"	l
c0101f15	kernel.asm	/^c0101f15:	00 00                	add    %al,(%eax)$/;"	l
c0101f17	kernel.asm	/^c0101f17:	00 00                	add    %al,(%eax)$/;"	l
c0101f19	kernel.asm	/^c0101f19:	41                   	inc    %ecx$/;"	l
c0101f1a	kernel.asm	/^c0101f1a:	0e                   	push   %cs$/;"	l
c0101f1b	kernel.asm	/^c0101f1b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101f21	kernel.asm	/^c0101f21:	53                   	push   %ebx$/;"	l
c0101f22	kernel.asm	/^c0101f22:	0a c5                	or     %ch,%al$/;"	l
c0101f24	kernel.asm	/^c0101f24:	0c 04                	or     $0x4,%al$/;"	l
c0101f26	kernel.asm	/^c0101f26:	04 42                	add    $0x42,%al$/;"	l
c0101f28	kernel.asm	/^c0101f28:	0b 5a 0c             	or     0xc(%edx),%ebx$/;"	l
c0101f2b	kernel.asm	/^c0101f2b:	04 04                	add    $0x4,%al$/;"	l
c0101f2d	kernel.asm	/^c0101f2d:	c5 00                	lds    (%eax),%eax$/;"	l
c0101f2f	kernel.asm	/^c0101f2f:	00 20                	add    %ah,(%eax)$/;"	l
c0101f31	kernel.asm	/^c0101f31:	00 00                	add    %al,(%eax)$/;"	l
c0101f33	kernel.asm	/^c0101f33:	00 88 05 00 00 b8    	add    %cl,-0x47fffffb(%eax)$/;"	l
c0101f39	kernel.asm	/^c0101f39:	f6 ff                	idiv   %bh$/;"	l
c0101f3b	kernel.asm	/^c0101f3b:	ff d7                	call   *%edi$/;"	l
c0101f3d	kernel.asm	/^c0101f3d:	00 00                	add    %al,(%eax)$/;"	l
c0101f3f	kernel.asm	/^c0101f3f:	00 00                	add    %al,(%eax)$/;"	l
c0101f41	kernel.asm	/^c0101f41:	41                   	inc    %ecx$/;"	l
c0101f42	kernel.asm	/^c0101f42:	0e                   	push   %cs$/;"	l
c0101f43	kernel.asm	/^c0101f43:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101f49	kernel.asm	/^c0101f49:	02 b0 0a c5 0c 04    	add    0x40cc50a(%eax),%dh$/;"	l
c0101f4f	kernel.asm	/^c0101f4f:	04 45                	add    $0x45,%al$/;"	l
c0101f51	kernel.asm	/^c0101f51:	0b 00                	or     (%eax),%eax$/;"	l
c0101f53	kernel.asm	/^c0101f53:	00 2c 00             	add    %ch,(%eax,%eax,1)$/;"	l
c0101f56	kernel.asm	/^c0101f56:	00 00                	add    %al,(%eax)$/;"	l
c0101f58	kernel.asm	/^c0101f58:	ac                   	lods   %ds:(%esi),%al$/;"	l
c0101f59	kernel.asm	/^c0101f59:	05 00 00 74 f7       	add    $0xf7740000,%eax$/;"	l
c0101f5e	kernel.asm	/^c0101f5e:	ff                   	(bad)  $/;"	l
c0101f5f	kernel.asm	/^c0101f5f:	ff 5e 00             	lcall  *0x0(%esi)$/;"	l
c0101f62	kernel.asm	/^c0101f62:	00 00                	add    %al,(%eax)$/;"	l
c0101f64	kernel.asm	/^c0101f64:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101f67	kernel.asm	/^c0101f67:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101f6d	kernel.asm	/^c0101f6d:	49                   	dec    %ecx$/;"	l
c0101f6e	kernel.asm	/^c0101f6e:	83 05 4c 86 04 87 03 	addl   $0x3,0x8704864c$/;"	l
c0101f75	kernel.asm	/^c0101f75:	68 0a 0d 04 c7       	push   $0xc7040d0a$/;"	l
c0101f7a	kernel.asm	/^c0101f7a:	c6 c3 41             	mov    $0x41,%bl$/;"	l
c0101f7d	kernel.asm	/^c0101f7d:	0e                   	push   %cs$/;"	l
c0101f7e	kernel.asm	/^c0101f7e:	04 c5                	add    $0xc5,%al$/;"	l
c0101f80	kernel.asm	/^c0101f80:	47                   	inc    %edi$/;"	l
c0101f81	kernel.asm	/^c0101f81:	0b 00                	or     (%eax),%eax$/;"	l
c0101f83	kernel.asm	/^c0101f83:	00 24 00             	add    %ah,(%eax,%eax,1)$/;"	l
c0101f86	kernel.asm	/^c0101f86:	00 00                	add    %al,(%eax)$/;"	l
c0101f88	kernel.asm	/^c0101f88:	dc 05 00 00 a4 f7    	faddl  0xf7a40000$/;"	d
c0101f8e	kernel.asm	/^c0101f8e:	ff                   	(bad)  $/;"	l
c0101f8f	kernel.asm	/^c0101f8f:	ff 46 00             	incl   0x0(%esi)$/;"	l
c0101f92	kernel.asm	/^c0101f92:	00 00                	add    %al,(%eax)$/;"	l
c0101f94	kernel.asm	/^c0101f94:	00 41 0e             	add    %al,0xe(%ecx)$/;"	l
c0101f97	kernel.asm	/^c0101f97:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)$/;"	l
c0101f9d	kernel.asm	/^c0101f9d:	4a                   	dec    %edx$/;"	l
c0101f9e	kernel.asm	/^c0101f9e:	83 03 5e             	addl   $0x5e,(%ebx)$/;"	l
c0101fa1	kernel.asm	/^c0101fa1:	0a c3                	or     %bl,%al$/;"	l
c0101fa3	kernel.asm	/^c0101fa3:	41                   	inc    %ecx$/;"	l
c0101fa4	kernel.asm	/^c0101fa4:	0c 04                	or     $0x4,%al$/;"	l
c0101fa6	kernel.asm	/^c0101fa6:	04 c5                	add    $0xc5,%al$/;"	l
c0101fa8	kernel.asm	/^c0101fa8:	44                   	inc    %esp$/;"	l
c0101fa9	kernel.asm	/^c0101fa9:	0b 00                	or     (%eax),%eax$/;"	l
c0102000	kernel.asm	/^c0102000 <tid>:$/;"	l
c0102000	kernel.asm	/^c0102000:	01 00                	add    %eax,(%eax)$/;"	l
c0102004	kernel.asm	/^c0102004 <g>:$/;"	l
c0102004	kernel.asm	/^c0102004:	01 00                	add    %eax,(%eax)$/;"	l
c0103000	kernel.asm	/^c0103000 <buf.862>:$/;"	l
c0103040	kernel.asm	/^c0103040 <buf.867>:$/;"	l
c0103080	kernel.asm	/^c0103080 <nextf>:$/;"	l
c01030c0	kernel.asm	/^c01030c0 <nmalloc>:$/;"	l
c01030f0	kernel.asm	/^c01030f0 <page_inited>:$/;"	l
c01030f0	kernel.asm	/^c01030f0:	00 00                	add    %al,(%eax)$/;"	l
c01030f4	kernel.asm	/^c01030f4 <data.876>:$/;"	l
c01030fc	kernel.asm	/^c01030fc <r>:$/;"	l
c01030fc	kernel.asm	/^c01030fc:	00 00                	add    %al,(%eax)$/;"	l
c0103100	kernel.asm	/^c0103100 <f>:$/;"	l
c0103100	kernel.asm	/^c0103100:	00 00                	add    %al,(%eax)$/;"	l
c0103104	kernel.asm	/^c0103104 <data.877>:$/;"	l
c010310c	kernel.asm	/^c010310c <current_pcb>:$/;"	l
c010310c	kernel.asm	/^c010310c:	00 00                	add    %al,(%eax)$/;"	l
c0103110	kernel.asm	/^c0103110 <pid>:$/;"	l
c0103120	kernel.asm	/^c0103120 <pool>:$/;"	l
c02	kernel.asm	/^     c02:	00 00                	add    %al,(%eax)$/;"	l
c02	kernel.asm	/^     c02:	05 00 73 00 77       	add    $0x77007300,%eax$/;"	l
c02	kernel.asm	/^ c02:	08 3a                	or     %bh,(%edx)$/;"	l
c04	kernel.asm	/^     c04:	5f                   	pop    %edi$/;"	l
c04	kernel.asm	/^ c04:	0b 3b                	or     (%ebx),%edi$/;"	l
c0426000	kernel.asm	/^c0426000 <gdt>:$/;"	l
c0426040	kernel.asm	/^c0426040 <tss>:$/;"	l
c0427000	kernel.asm	/^c0427000 <kptab>:$/;"	l
c0447000	kernel.asm	/^c0447000 <kpdir>:$/;"	l
c0448000	kernel.asm	/^c0448000 <full>:$/;"	l
c044800c	kernel.asm	/^c044800c <mutex>:$/;"	l
c0448018	kernel.asm	/^c0448018 <buf>:$/;"	l
c044802c	kernel.asm	/^c044802c <empty>:$/;"	l
c0448040	kernel.asm	/^c0448040 <idt>:$/;"	l
c0448840	kernel.asm	/^c0448840 <runq>:$/;"	l
c05	kernel.asm	/^     c05:	22 32                	and    (%edx),%dh$/;"	l
c06	kernel.asm	/^ c06:	0b 27                	or     (%edi),%esp$/;"	l
c07	kernel.asm	/^     c07:	00 00                	add    %al,(%eax)$/;"	l
c07	kernel.asm	/^     c07:	00 22                	add    %ah,(%edx)$/;"	l
c08	kernel.asm	/^ c08:	0c 20                	or     $0x20,%al$/;"	l
c09	kernel.asm	/^     c09:	17                   	pop    %ss$/;"	l
c09	kernel.asm	/^     c09:	81 01 00 00 8b 01    	addl   $0x18b0000,(%ecx)$/;"	l
c0a	kernel.asm	/^     c0a:	e3 01                	jecxz  c0d <memcpy-0xc00ff3f3>$/;"	l
c0a	kernel.asm	/^ c0a:	0b 00                	or     (%eax),%eax$/;"	l
c0c	kernel.asm	/^     c0c:	00 00                	add    %al,(%eax)$/;"	l
c0c	kernel.asm	/^ c0c:	00 0d 2e 01 3f 0c    	add    %cl,0xc3f012e$/;"	l
c0e	kernel.asm	/^     c0e:	01 21                	add    %esp,(%ecx)$/;"	l
c0f	kernel.asm	/^     c0f:	00 00                	add    %al,(%eax)$/;"	l
c1	kernel.asm	/^      c1:	00 00                	add    %al,(%eax)$/;"	l
c1	kernel.asm	/^      c1:	c9                   	leave  $/;"	l
c1	kernel.asm	/^  c1:	00 00                	add    %al,(%eax)$/;"	l
c1	kernel.asm	/^  c1:	49                   	dec    %ecx$/;"	l
c1	kernel.asm	/^  c1:	63 2f                	arpl   %bp,(%edi)$/;"	l
c10	kernel.asm	/^     c10:	42                   	inc    %edx$/;"	l
c11	kernel.asm	/^     c11:	01 00                	add    %eax,(%eax)$/;"	l
c11	kernel.asm	/^     c11:	02 00                	add    (%eax),%al$/;"	l
c12	kernel.asm	/^ c12:	03 0e                	add    (%esi),%ecx$/;"	l
c13	kernel.asm	/^     c13:	00 01                	add    %al,(%ecx)$/;"	l
c13	kernel.asm	/^     c13:	50                   	push   %eax$/;"	l
c14	kernel.asm	/^     c14:	8b 01                	mov    (%ecx),%eax$/;"	l
c14	kernel.asm	/^ c14:	3a 0b                	cmp    (%ebx),%cl$/;"	l
c15	kernel.asm	/^     c15:	05 03 20 31 10       	add    $0x10312003,%eax$/;"	l
c16	kernel.asm	/^     c16:	00 00                	add    %al,(%eax)$/;"	l
c16	kernel.asm	/^ c16:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
c18	kernel.asm	/^     c18:	97                   	xchg   %eax,%edi$/;"	l
c18	kernel.asm	/^ c18:	27                   	daa    $/;"	l
c19	kernel.asm	/^     c19:	01 00                	add    %eax,(%eax)$/;"	l
c19	kernel.asm	/^ c19:	0c 11                	or     $0x11,%al$/;"	l
c1a	kernel.asm	/^     c1a:	c0 00 04             	rolb   $0x4,(%eax)$/;"	l
c1b	kernel.asm	/^     c1b:	00 02                	add    %al,(%edx)$/;"	l
c1b	kernel.asm	/^ c1b:	01 12                	add    %edx,(%edx)$/;"	l
c1d	kernel.asm	/^     c1d:	00 73 7f             	add    %dh,0x7f(%ebx)$/;"	l
c1d	kernel.asm	/^     c1d:	01 00                	add    %eax,(%eax)$/;"	l
c1d	kernel.asm	/^ c1d:	01 40 06             	add    %eax,0x6(%eax)$/;"	l
c1f	kernel.asm	/^     c1f:	00 02                	add    %al,(%edx)$/;"	l
c2	kernel.asm	/^      c2:	00 00                	add    %al,(%eax)$/;"	l
c2	kernel.asm	/^  c2:	00 00                	add    %al,(%eax)$/;"	l
c2	kernel.asm	/^  c2:	13 01                	adc    (%ecx),%eax$/;"	l
c2	kernel.asm	/^  c2:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
c20	kernel.asm	/^     c20:	97                   	xchg   %eax,%edi$/;"	l
c20	kernel.asm	/^ c20:	01 13                	add    %edx,(%ebx)$/;"	l
c21	kernel.asm	/^     c21:	00 d3                	add    %dl,%bl$/;"	l
c21	kernel.asm	/^     c21:	01 00                	add    %eax,(%eax)$/;"	l
c22	kernel.asm	/^ c22:	00 00                	add    %al,(%eax)$/;"	l
c23	kernel.asm	/^     c23:	00 9e 01 00 00 03    	add    %bl,0x3000001(%esi)$/;"	l
c23	kernel.asm	/^     c23:	04 00                	add    $0x0,%al$/;"	l
c24	kernel.asm	/^ c24:	0e                   	push   %cs$/;"	l
c25	kernel.asm	/^     c25:	00 04 01             	add    %al,(%ecx,%eax,1)$/;"	l
c25	kernel.asm	/^ c25:	05 00 03 08 3a       	add    $0x3a080300,%eax$/;"	l
c28	kernel.asm	/^     c28:	8c 00                	mov    %es,(%eax)$/;"	l
c29	kernel.asm	/^     c29:	00 91 08 06 aa 01    	add    %dl,0x1aa0608(%ecx)$/;"	l
c2a	kernel.asm	/^     c2a:	00 00                	add    %al,(%eax)$/;"	l
c2a	kernel.asm	/^ c2a:	0b 3b                	or     (%ebx),%edi$/;"	l
c2c	kernel.asm	/^     c2c:	01 b2 02 00 00 55    	add    %esi,0x55000002(%edx)$/;"	l
c2c	kernel.asm	/^ c2c:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
c2f	kernel.asm	/^     c2f:	00 00                	add    %al,(%eax)$/;"	l
c2f	kernel.asm	/^ c2f:	02 0a                	add    (%edx),%cl$/;"	l
c3	kernel.asm	/^      c3:	00 02                	add    %al,(%edx)$/;"	l
c3	kernel.asm	/^  c3:	00 11                	add    %dl,(%ecx)$/;"	l
c3	kernel.asm	/^  c3:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
c3	kernel.asm	/^  c3:	72 74                	jb     139 <memcpy-0xc00ffec7>$/;"	l
c31	kernel.asm	/^     c31:	c0 01 00             	rolb   $0x0,(%ecx)$/;"	l
c31	kernel.asm	/^ c31:	00 00                	add    %al,(%eax)$/;"	l
c32	kernel.asm	/^     c32:	00 00                	add    %al,(%eax)$/;"	l
c33	kernel.asm	/^ c33:	0f 34                	sysenter $/;"	l
c34	kernel.asm	/^     c34:	00 01                	add    %al,(%ecx)$/;"	l
c34	kernel.asm	/^     c34:	00 e0                	add    %ah,%al$/;"	l
c35	kernel.asm	/^ c35:	00 03                	add    %al,(%ebx)$/;"	l
c36	kernel.asm	/^     c36:	00 50 c0             	add    %dl,-0x40(%eax)$/;"	l
c36	kernel.asm	/^     c36:	06                   	push   %es$/;"	l
c37	kernel.asm	/^     c37:	10 c0                	adc    %al,%al$/;"	l
c37	kernel.asm	/^ c37:	08 3a                	or     %bh,(%edx)$/;"	l
c39	kernel.asm	/^     c39:	01 00                	add    %eax,(%eax)$/;"	l
c39	kernel.asm	/^     c39:	39 09                	cmp    %ecx,(%ecx)$/;"	l
c39	kernel.asm	/^ c39:	0b 3b                	or     (%ebx),%edi$/;"	l
c3b	kernel.asm	/^     c3b:	00 cd                	add    %cl,%ch$/;"	l
c3b	kernel.asm	/^     c3b:	10 c0                	adc    %al,%al$/;"	l
c3b	kernel.asm	/^ c3b:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
c3d	kernel.asm	/^     c3d:	01 00                	add    %eax,(%eax)$/;"	l
c3d	kernel.asm	/^     c3d:	a2 03 00 00 02       	mov    %al,0x2000003$/;"	l
c3e	kernel.asm	/^ c3e:	02 06                	add    (%esi),%al$/;"	l
c3f	kernel.asm	/^     c3f:	00 02                	add    %al,(%edx)$/;"	l
c4	kernel.asm	/^      c4:	00 02                	add    %al,(%edx)$/;"	l
c4	kernel.asm	/^  c4:	02 00                	add    (%eax),%al$/;"	l
c4	kernel.asm	/^  c4:	13 00                	adc    (%eax),%eax$/;"	l
c4	kernel.asm	/^  c4:	69 62 00 2e 2f 69 6e 	imul   $0x6e692f2e,0x0(%edx),%esp$/;"	l
c40	kernel.asm	/^ c40:	00 00                	add    %al,(%eax)$/;"	l
c41	kernel.asm	/^     c41:	00 73 7f             	add    %dh,0x7f(%ebx)$/;"	l
c42	kernel.asm	/^     c42:	04 07                	add    $0x7,%al$/;"	l
c42	kernel.asm	/^ c42:	10 1d 00 31 13 11    	adc    %bl,0x11133100$/;"	l
c44	kernel.asm	/^     c44:	9e                   	sahf   $/;"	l
c44	kernel.asm	/^     c44:	d7                   	xlat   %ds:(%ebx)$/;"	d
c45	kernel.asm	/^     c45:	00 00                	add    %al,(%eax)$/;"	l
c45	kernel.asm	/^     c45:	01 00                	add    %eax,(%eax)$/;"	l
c47	kernel.asm	/^     c47:	00 03                	add    %al,(%ebx)$/;"	l
c47	kernel.asm	/^     c47:	00 e1                	add    %ah,%cl$/;"	l
c48	kernel.asm	/^ c48:	01 12                	add    %edx,(%edx)$/;"	l
c49	kernel.asm	/^     c49:	01 00                	add    %eax,(%eax)$/;"	l
c49	kernel.asm	/^     c49:	04 05                	add    $0x5,%al$/;"	l
c4a	kernel.asm	/^ c4a:	01 58 0b             	add    %ebx,0xb(%eax)$/;"	l
c4b	kernel.asm	/^     c4b:	00 02                	add    %al,(%edx)$/;"	l
c4b	kernel.asm	/^     c4b:	69 6e 74 00 02 02 07 	imul   $0x7020200,0x74(%esi),%ebp$/;"	l
c4d	kernel.asm	/^     c4d:	00 70 00             	add    %dh,0x0(%eax)$/;"	l
c4d	kernel.asm	/^ c4d:	59                   	pop    %ecx$/;"	l
c4e	kernel.asm	/^ c4e:	0b 00                	or     (%eax),%eax$/;"	l
c5	kernel.asm	/^      c5:	00 91 00 44 00 00    	add    %dl,0x4400(%ecx)$/;"	l
c5	kernel.asm	/^  c5:	20 69 6e             	and    %ch,0x6e(%ecx)$/;"	l
c50	kernel.asm	/^     c50:	e1 01                	loope  c53 <memcpy-0xc00ff3ad>$/;"	l
c50	kernel.asm	/^ c50:	00 11                	add    %dl,(%ecx)$/;"	l
c52	kernel.asm	/^     c52:	00 00                	add    %al,(%eax)$/;"	l
c52	kernel.asm	/^     c52:	98                   	cwtl   $/;"	l
c52	kernel.asm	/^ c52:	34 00                	xor    $0x0,%al$/;"	l
c53	kernel.asm	/^     c53:	00 00                	add    %al,(%eax)$/;"	l
c54	kernel.asm	/^     c54:	f2 01 00             	repnz add %eax,(%eax)$/;"	l
c54	kernel.asm	/^ c54:	03 0e                	add    (%esi),%ecx$/;"	l
c55	kernel.asm	/^     c55:	00 02                	add    %al,(%edx)$/;"	l
c56	kernel.asm	/^ c56:	3a 0b                	cmp    (%ebx),%cl$/;"	l
c57	kernel.asm	/^     c57:	00 01                	add    %al,(%ecx)$/;"	l
c57	kernel.asm	/^     c57:	02 05 c0 00 00 00    	add    0xc0,%al$/;"	l
c58	kernel.asm	/^ c58:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
c59	kernel.asm	/^     c59:	00 52 f7             	add    %dl,-0x9(%edx)$/;"	l
c5a	kernel.asm	/^ c5a:	49                   	dec    %ecx$/;"	l
c5b	kernel.asm	/^ c5b:	13 3f                	adc    (%edi),%edi$/;"	l
c5c	kernel.asm	/^     c5c:	01 00                	add    %eax,(%eax)$/;"	l
c5d	kernel.asm	/^     c5d:	02 01                	add    (%ecx),%al$/;"	l
c5d	kernel.asm	/^ c5d:	0c 3c                	or     $0x3c,%al$/;"	l
c5e	kernel.asm	/^     c5e:	00 01                	add    %al,(%ecx)$/;"	l
c5f	kernel.asm	/^     c5f:	08 47 00             	or     %al,0x0(%edi)$/;"	l
c5f	kernel.asm	/^ c5f:	0c 00                	or     $0x0,%al$/;"	l
c6	kernel.asm	/^      c6:	91                   	xchg   %eax,%ecx$/;"	l
c6	kernel.asm	/^  c6:	00 10                	add    %dl,(%eax)$/;"	l
c6	kernel.asm	/^  c6:	bb 0f 00 00 04       	mov    $0x400000f,%ebx$/;"	l
c60	kernel.asm	/^     c60:	02 00                	add    (%eax),%al$/;"	l
c61	kernel.asm	/^ c61:	00 00                	add    %al,(%eax)$/;"	l
c62	kernel.asm	/^     c62:	00 00                	add    %al,(%eax)$/;"	l
c62	kernel.asm	/^     c62:	00 05 00 73 00 77    	add    %al,0x77007300$/;"	l
c63	kernel.asm	/^ c63:	01 11                	add    %edx,(%ecx)$/;"	l
c64	kernel.asm	/^     c64:	02 01                	add    (%ecx),%al$/;"	l
c65	kernel.asm	/^ c65:	01 25 0e 13 0b 03    	add    %esp,0x30b130e$/;"	l
c66	kernel.asm	/^     c66:	06                   	push   %es$/;"	l
c67	kernel.asm	/^     c67:	50                   	push   %eax$/;"	l
c68	kernel.asm	/^     c68:	00 00                	add    %al,(%eax)$/;"	l
c68	kernel.asm	/^     c68:	00 22                	add    %ah,(%edx)$/;"	l
c6a	kernel.asm	/^     c6a:	00 04 01             	add    %al,(%ecx,%eax,1)$/;"	l
c6a	kernel.asm	/^     c6a:	09 02                	or     %eax,(%edx)$/;"	l
c6b	kernel.asm	/^ c6b:	0e                   	push   %cs$/;"	l
c6c	kernel.asm	/^     c6c:	00 00                	add    %al,(%eax)$/;"	l
c6c	kernel.asm	/^ c6c:	1b 0e                	sbb    (%esi),%ecx$/;"	l
c6d	kernel.asm	/^     c6d:	89 02                	mov    %eax,(%edx)$/;"	l
c6e	kernel.asm	/^     c6e:	16                   	push   %ss$/;"	l
c6e	kernel.asm	/^ c6e:	11 01                	adc    %eax,(%ecx)$/;"	l
c6f	kernel.asm	/^     c6f:	00 00                	add    %al,(%eax)$/;"	l
c6f	kernel.asm	/^     c6f:	02 00                	add    (%eax),%al$/;"	l
c7	kernel.asm	/^      c7:	00 00                	add    %al,(%eax)$/;"	l
c70	kernel.asm	/^ c70:	12 01                	adc    (%ecx),%al$/;"	l
c71	kernel.asm	/^     c71:	00 01                	add    %al,(%ecx)$/;"	l
c71	kernel.asm	/^     c71:	01 14 01             	add    %edx,(%ecx,%eax,1)$/;"	l
c72	kernel.asm	/^ c72:	10 06                	adc    %al,(%esi)$/;"	l
c73	kernel.asm	/^     c73:	00 50 16             	add    %dl,0x16(%eax)$/;"	l
c74	kernel.asm	/^     c74:	2c 00                	sub    $0x0,%al$/;"	l
c74	kernel.asm	/^ c74:	00 00                	add    %al,(%eax)$/;"	l
c76	kernel.asm	/^     c76:	00 00                	add    %al,(%eax)$/;"	l
c76	kernel.asm	/^     c76:	02 00                	add    (%eax),%al$/;"	l
c76	kernel.asm	/^ c76:	02 24 00             	add    (%eax,%eax,1),%ah$/;"	l
c78	kernel.asm	/^     c78:	00 24 02             	add    %ah,(%edx,%eax,1)$/;"	l
c78	kernel.asm	/^     c78:	e0 06                	loopne c80 <memcpy-0xc00ff380>$/;"	l
c79	kernel.asm	/^ c79:	0b 0b                	or     (%ebx),%ecx$/;"	l
c7a	kernel.asm	/^     c7a:	10 c0                	adc    %al,%al$/;"	l
c7b	kernel.asm	/^     c7b:	00 00                	add    %al,(%eax)$/;"	l
c7b	kernel.asm	/^ c7b:	3e 0b 03             	or     %ds:(%ebx),%eax$/;"	l
c7c	kernel.asm	/^     c7c:	39 09                	cmp    %ecx,(%ecx)$/;"	l
c7d	kernel.asm	/^     c7d:	02 00                	add    (%eax),%al$/;"	l
c7e	kernel.asm	/^     c7e:	10 c0                	adc    %al,%al$/;"	l
c7e	kernel.asm	/^ c7e:	0e                   	push   %cs$/;"	l
c7f	kernel.asm	/^     c7f:	73 7f                	jae    d00 <memcpy-0xc00ff300>$/;"	l
c7f	kernel.asm	/^ c7f:	00 00                	add    %al,(%eax)$/;"	l
c8	kernel.asm	/^  c8:	21 00                	and    %eax,(%eax)$/;"	l
c8	kernel.asm	/^  c8:	74 00                	je     ca <memcpy-0xc00fff36>$/;"	l
c80	kernel.asm	/^     c80:	82                   	(bad)  $/;"	l
c81	kernel.asm	/^     c81:	09 00                	or     %eax,(%eax)$/;"	l
c81	kernel.asm	/^     c81:	24 02                	and    $0x2,%al$/;"	l
c81	kernel.asm	/^ c81:	03 24 00             	add    (%eax,%eax,1),%esp$/;"	l
c83	kernel.asm	/^     c83:	00 00                	add    %al,(%eax)$/;"	l
c83	kernel.asm	/^     c83:	00 dc                	add    %bl,%ah$/;"	l
c84	kernel.asm	/^ c84:	0b 0b                	or     (%ebx),%ecx$/;"	l
c85	kernel.asm	/^     c85:	00 00                	add    %al,(%eax)$/;"	l
c85	kernel.asm	/^     c85:	36 02 00             	add    %ss:(%eax),%al$/;"	l
c86	kernel.asm	/^ c86:	3e 0b 03             	or     %ds:(%ebx),%eax$/;"	l
c87	kernel.asm	/^     c87:	00 05 7c 02 00 00    	add    %al,0x27c$/;"	l
c88	kernel.asm	/^     c88:	00 04 00             	add    %al,(%eax,%eax,1)$/;"	l
c89	kernel.asm	/^ c89:	08 00                	or     %al,(%eax)$/;"	l
c8b	kernel.asm	/^     c8b:	91                   	xchg   %eax,%ecx$/;"	l
c8b	kernel.asm	/^ c8b:	00 04 16             	add    %al,(%esi,%edx,1)$/;"	l
c8c	kernel.asm	/^     c8c:	08 06                	or     %al,(%esi)$/;"	l
c8d	kernel.asm	/^     c8d:	01 14 e8             	add    %edx,(%eax,%ebp,8)$/;"	l
c8e	kernel.asm	/^     c8e:	06                   	push   %es$/;"	l
c8e	kernel.asm	/^ c8e:	00 03                	add    %al,(%ebx)$/;"	l
c8f	kernel.asm	/^     c8f:	36 02 00             	add    %ss:(%eax),%al$/;"	l
c9	kernel.asm	/^      c9:	09 04 0a             	or     %eax,(%edx,%ecx,1)$/;"	l
c90	kernel.asm	/^     c90:	00 00                	add    %al,(%eax)$/;"	l
c90	kernel.asm	/^ c90:	0e                   	push   %cs$/;"	l
c91	kernel.asm	/^ c91:	3a 0b                	cmp    (%ebx),%cl$/;"	l
c92	kernel.asm	/^     c92:	00 02                	add    %al,(%edx)$/;"	l
c92	kernel.asm	/^     c92:	00 42 02             	add    %al,0x2(%edx)$/;"	l
c93	kernel.asm	/^ c93:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
c94	kernel.asm	/^     c94:	91                   	xchg   %eax,%ecx$/;"	l
c95	kernel.asm	/^     c95:	00 00                	add    %al,(%eax)$/;"	l
c95	kernel.asm	/^     c95:	00 06                	add    %al,(%esi)$/;"	l
c95	kernel.asm	/^ c95:	49                   	dec    %ecx$/;"	l
c96	kernel.asm	/^ c96:	13 00                	adc    (%eax),%eax$/;"	l
c97	kernel.asm	/^     c97:	01 00                	add    %eax,(%eax)$/;"	l
c97	kernel.asm	/^     c97:	9a 02 00 00 01 14 ee 	lcall  $0xee14,$0x1000002$/;"	l
c98	kernel.asm	/^ c98:	00 05 2e 01 03 0e    	add    %al,0xe03012e$/;"	l
c99	kernel.asm	/^     c99:	50                   	push   %eax$/;"	l
c9a	kernel.asm	/^     c9a:	47                   	inc    %edi$/;"	l
c9b	kernel.asm	/^     c9b:	02 00                	add    (%eax),%al$/;"	l
c9d	kernel.asm	/^     c9d:	00 51 02             	add    %dl,0x2(%ecx)$/;"	l
c9e	kernel.asm	/^     c9e:	00 00                	add    %al,(%eax)$/;"	l
c9e	kernel.asm	/^ c9e:	3a 0b                	cmp    (%ebx),%cl$/;"	l
ca	kernel.asm	/^  ca:	49                   	dec    %ecx$/;"	l
ca	kernel.asm	/^  ca:	6d                   	insl   (%dx),%es:(%edi)$/;"	l
ca0	kernel.asm	/^     ca0:	00 00                	add    %al,(%eax)$/;"	l
ca0	kernel.asm	/^     ca0:	00 c6                	add    %al,%dh$/;"	l
ca0	kernel.asm	/^ ca0:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
ca2	kernel.asm	/^     ca2:	05 00 73 00 77       	add    $0x77007300,%eax$/;"	l
ca2	kernel.asm	/^     ca2:	09 00                	or     %eax,(%eax)$/;"	l
ca2	kernel.asm	/^ ca2:	27                   	daa    $/;"	l
ca3	kernel.asm	/^ ca3:	0c 20                	or     $0x20,%al$/;"	l
ca4	kernel.asm	/^     ca4:	00 06                	add    %al,(%esi)$/;"	l
ca5	kernel.asm	/^ ca5:	0b 01                	or     (%ecx),%eax$/;"	l
ca6	kernel.asm	/^     ca6:	9b                   	fwait$/;"	l
ca7	kernel.asm	/^     ca7:	00 22                	add    %ah,(%edx)$/;"	l
ca7	kernel.asm	/^     ca7:	01 00                	add    %eax,(%eax)$/;"	l
ca7	kernel.asm	/^ ca7:	13 00                	adc    (%eax),%eax$/;"	l
ca9	kernel.asm	/^     ca9:	00 01                	add    %al,(%ecx)$/;"	l
ca9	kernel.asm	/^ ca9:	00 06                	add    %al,(%esi)$/;"	l
cab	kernel.asm	/^     cab:	14 f9                	adc    $0xf9,%al$/;"	l
cab	kernel.asm	/^ cab:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax$/;"	l
cad	kernel.asm	/^     cad:	00 00                	add    %al,(%eax)$/;"	l
caf	kernel.asm	/^     caf:	00 66 0a             	add    %ah,0xa(%esi)$/;"	l
caps	src/drivers/tty/keyboard.c	/^static int caps, ctrl, alt, shft;$/;"	v	file:
cb	kernel.asm	/^      cb:	00 52 00             	add    %dl,0x0(%edx)$/;"	l
cb	kernel.asm	/^  cb:	00 00                	add    %al,(%eax)$/;"	l
cb	kernel.asm	/^  cb:	13 2f                	adc    (%edi),%ebp$/;"	l
cb	kernel.asm	/^  cb:	63 6c 75 64          	arpl   %bp,0x64(%ebp,%esi,2)$/;"	l
cb	kernel.asm	/^  cb:	65                   	gs$/;"	l
cb0	kernel.asm	/^ cb0:	0b 3b                	or     (%ebx),%edi$/;"	l
cb1	kernel.asm	/^     cb1:	e6 00                	out    %al,$0x0$/;"	l
cb2	kernel.asm	/^     cb2:	00 00                	add    %al,(%eax)$/;"	l
cb2	kernel.asm	/^ cb2:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
cb3	kernel.asm	/^     cb3:	00 00                	add    %al,(%eax)$/;"	l
cb4	kernel.asm	/^     cb4:	07                   	pop    %es$/;"	l
cb5	kernel.asm	/^     cb5:	62 75 66             	bound  %esi,0x66(%ebp)$/;"	l
cb5	kernel.asm	/^     cb5:	ef                   	out    %eax,(%dx)$/;"	l
cb5	kernel.asm	/^ cb5:	00 00                	add    %al,(%eax)$/;"	l
cb6	kernel.asm	/^     cb6:	00 00                	add    %al,(%eax)$/;"	l
cb7	kernel.asm	/^ cb7:	07                   	pop    %es$/;"	l
cb8	kernel.asm	/^     cb8:	00 01                	add    %al,(%ecx)$/;"	l
cb8	kernel.asm	/^ cb8:	2e 01 3f             	add    %edi,%cs:(%edi)$/;"	l
cba	kernel.asm	/^     cba:	00 50 ef             	add    %dl,-0x11(%eax)$/;"	l
cba	kernel.asm	/^     cba:	15 48 00 00 00       	adc    $0x48,%eax$/;"	l
cbb	kernel.asm	/^ cbb:	0c 03                	or     $0x3,%al$/;"	l
cbd	kernel.asm	/^     cbd:	00 00                	add    %al,(%eax)$/;"	l
cbd	kernel.asm	/^ cbd:	0e                   	push   %cs$/;"	l
cbe	kernel.asm	/^ cbe:	3a 0b                	cmp    (%ebx),%cl$/;"	l
cbf	kernel.asm	/^     cbf:	00 f9                	add    %bh,%cl$/;"	l
cbf	kernel.asm	/^     cbf:	28 0b                	sub    %cl,(%ebx)$/;"	l
cbuf	include/driver/tty.h	/^	char cbuf[CBUF_SZ + 1];$/;"	m	struct:Console
cc	kernel.asm	/^      cc:	04 d1                	add    $0xd1,%al$/;"	l
cc	kernel.asm	/^  cc:	6d                   	insl   (%dx),%es:(%edi)$/;"	l
cc0	kernel.asm	/^ cc0:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
cc1	kernel.asm	/^     cc1:	00 00                	add    %al,(%eax)$/;"	l
cc2	kernel.asm	/^ cc2:	27                   	daa    $/;"	l
cc3	kernel.asm	/^     cc3:	00 03                	add    %al,(%ebx)$/;"	l
cc3	kernel.asm	/^     cc3:	08 92 02 00 00 01    	or     %dl,0x1000002(%edx)$/;"	l
cc3	kernel.asm	/^ cc3:	0c 11                	or     $0x11,%al$/;"	l
cc5	kernel.asm	/^     cc5:	00 70 01             	add    %dh,0x1(%eax)$/;"	l
cc5	kernel.asm	/^ cc5:	01 12                	add    %edx,(%edx)$/;"	l
cc7	kernel.asm	/^ cc7:	01 40 06             	add    %eax,0x6(%eax)$/;"	l
cc8	kernel.asm	/^     cc8:	9f                   	lahf   $/;"	l
cc9	kernel.asm	/^     cc9:	16                   	push   %ss$/;"	l
cc9	kernel.asm	/^     cc9:	46                   	inc    %esi$/;"	l
cca	kernel.asm	/^     cca:	01 00                	add    %eax,(%eax)$/;"	l
cca	kernel.asm	/^     cca:	01 01                	add    %eax,(%ecx)$/;"	l
cca	kernel.asm	/^ cca:	00 00                	add    %al,(%eax)$/;"	l
ccc	kernel.asm	/^     ccc:	00 00                	add    %al,(%eax)$/;"	l
ccc	kernel.asm	/^     ccc:	00 4f 01             	add    %cl,0x1(%edi)$/;"	l
ccc	kernel.asm	/^ ccc:	08 1d 01 31 13 52    	or     %bl,0x52133101$/;"	l
cce	kernel.asm	/^     cce:	b1 0c                	mov    $0xc,%cl$/;"	l
ccf	kernel.asm	/^     ccf:	00 00                	add    %al,(%eax)$/;"	l
cd	kernel.asm	/^  cd:	00 00                	add    %al,(%eax)$/;"	l
cd	kernel.asm	/^  cd:	0b 00                	or     (%eax),%eax$/;"	l
cd	kernel.asm	/^  cd:	73 65                	jae    134 <memcpy-0xc00ffecc>$/;"	l
cd0	kernel.asm	/^     cd0:	00 00                	add    %al,(%eax)$/;"	l
cd1	kernel.asm	/^     cd1:	01 00                	add    %eax,(%eax)$/;"	l
cd2	kernel.asm	/^     cd2:	09 74 02 00          	or     %esi,0x0(%edx,%eax,1)$/;"	l
cd2	kernel.asm	/^ cd2:	01 55 06             	add    %edx,0x6(%ebp)$/;"	l
cd3	kernel.asm	/^     cd3:	50                   	push   %eax$/;"	l
cd4	kernel.asm	/^     cd4:	4f                   	dec    %edi$/;"	l
cd5	kernel.asm	/^     cd5:	01 00                	add    %eax,(%eax)$/;"	l
cd5	kernel.asm	/^ cd5:	58                   	pop    %eax$/;"	l
cd6	kernel.asm	/^     cd6:	00 01                	add    %al,(%ecx)$/;"	l
cd6	kernel.asm	/^ cd6:	0b 59 0b             	or     0xb(%ecx),%ebx$/;"	l
cd7	kernel.asm	/^     cd7:	00 59 01             	add    %bl,0x1(%ecx)$/;"	l
cd8	kernel.asm	/^     cd8:	17                   	pop    %ss$/;"	l
cd9	kernel.asm	/^     cd9:	2c 00                	sub    $0x0,%al$/;"	l
cd9	kernel.asm	/^ cd9:	01 13                	add    %edx,(%ebx)$/;"	l
cda	kernel.asm	/^     cda:	00 00                	add    %al,(%eax)$/;"	l
cdb	kernel.asm	/^     cdb:	00 00                	add    %al,(%eax)$/;"	l
cdb	kernel.asm	/^ cdb:	00 00                	add    %al,(%eax)$/;"	l
cdc	kernel.asm	/^     cdc:	03 00                	add    (%eax),%eax$/;"	l
cdd	kernel.asm	/^     cdd:	09 a1 02 00 00 01    	or     %esp,0x1000002(%ecx)$/;"	l
cdd	kernel.asm	/^ cdd:	09 05 00 31 13 1c    	or     %eax,0x1c133100$/;"	l
cde	kernel.asm	/^     cde:	70 01                	jo     ce1 <memcpy-0xc00ff31f>$/;"	l
ce	kernel.asm	/^      ce:	00 00                	add    %al,(%eax)$/;"	l
ce0	kernel.asm	/^     ce0:	9f                   	lahf   $/;"	l
ce1	kernel.asm	/^     ce1:	ce                   	into   $/;"	l
ce2	kernel.asm	/^     ce2:	01 00                	add    %eax,(%eax)$/;"	l
ce3	kernel.asm	/^     ce3:	18 2c 00             	sbb    %ch,(%eax,%eax,1)$/;"	l
ce3	kernel.asm	/^ ce3:	0d 00 00 0a 05       	or     $0x50a0000,%eax$/;"	l
ce4	kernel.asm	/^     ce4:	00 d7                	add    %dl,%bh$/;"	l
ce6	kernel.asm	/^     ce6:	00 00                	add    %al,(%eax)$/;"	l
ce6	kernel.asm	/^     ce6:	01 00                	add    %eax,(%eax)$/;"	l
ce8	kernel.asm	/^     ce8:	00 01                	add    %al,(%ecx)$/;"	l
ce8	kernel.asm	/^     ce8:	08 68 02             	or     %ch,0x2(%eax)$/;"	l
ce8	kernel.asm	/^ ce8:	00 31                	add    %dh,(%ecx)$/;"	l
cea	kernel.asm	/^     cea:	00 50 d7             	add    %dl,-0x29(%eax)$/;"	l
cea	kernel.asm	/^ cea:	13 1c 0b             	adc    (%ebx,%ecx,1),%ebx$/;"	l
ceb	kernel.asm	/^     ceb:	00 00                	add    %al,(%eax)$/;"	l
ced	kernel.asm	/^     ced:	01 00                	add    %eax,(%eax)$/;"	l
ced	kernel.asm	/^     ced:	01 19                	add    %ebx,(%ecx)$/;"	l
ced	kernel.asm	/^ ced:	00 00                	add    %al,(%eax)$/;"	l
cef	kernel.asm	/^     cef:	00 e1                	add    %ah,%cl$/;"	l
cef	kernel.asm	/^     cef:	2c 00                	sub    $0x0,%al$/;"	l
cef	kernel.asm	/^ cef:	0b 1d 01 31 13 11    	or     0x11133101,%ebx$/;"	l
cf	kernel.asm	/^  cf:	00 01                	add    %al,(%ecx)$/;"	l
cf	kernel.asm	/^  cf:	00 11                	add    %dl,(%ecx)$/;"	l
cf	kernel.asm	/^  cf:	00 d0                	add    %dl,%al$/;"	l
cf	kernel.asm	/^  cf:	65 00 00             	add    %al,%gs:(%eax)$/;"	l
cf	kernel.asm	/^  cf:	74 00                	je     d1 <memcpy-0xc00fff2f>$/;"	l
cf1	kernel.asm	/^     cf1:	00 00                	add    %al,(%eax)$/;"	l
cf1	kernel.asm	/^     cf1:	01 00                	add    %eax,(%eax)$/;"	l
cf3	kernel.asm	/^     cf3:	00 03                	add    %al,(%ebx)$/;"	l
cf3	kernel.asm	/^     cf3:	1f                   	pop    %ds$/;"	l
cf4	kernel.asm	/^     cf4:	0d 00 00 00 0a       	or     $0xa000000,%eax$/;"	l
cf5	kernel.asm	/^     cf5:	00 70 01             	add    %dh,0x1(%eax)$/;"	l
cf5	kernel.asm	/^ cf5:	01 12                	add    %edx,(%edx)$/;"	l
cf7	kernel.asm	/^ cf7:	01 58 0b             	add    %ebx,0xb(%eax)$/;"	l
cf8	kernel.asm	/^     cf8:	9f                   	lahf   $/;"	l
cf9	kernel.asm	/^     cf9:	01 e8                	add    %ebp,%eax$/;"	l
cf9	kernel.asm	/^     cf9:	1e                   	push   %ds$/;"	l
cfa	kernel.asm	/^     cfa:	02 00                	add    (%eax),%al$/;"	l
cfa	kernel.asm	/^ cfa:	59                   	pop    %ecx$/;"	l
cfb	kernel.asm	/^     cfb:	00 00                	add    %al,(%eax)$/;"	l
cfb	kernel.asm	/^ cfb:	0b 01                	or     (%ecx),%eax$/;"	l
cfc	kernel.asm	/^     cfc:	00 24 02             	add    %ah,(%edx,%eax,1)$/;"	l
cfd	kernel.asm	/^     cfd:	00 0b                	add    %cl,(%ebx)$/;"	l
cfd	kernel.asm	/^ cfd:	13 00                	adc    (%eax),%eax$/;"	l
cff	kernel.asm	/^     cff:	00 00                	add    %al,(%eax)$/;"	l
cff	kernel.asm	/^     cff:	48                   	dec    %eax$/;"	l
cff	kernel.asm	/^ cff:	00 0c 1d 01 31 13 11 	add    %cl,0x11133101(,%ebx,1)$/;"	l
cli	include/x86.h	/^cli(void) {$/;"	f
consl_accept	src/drivers/tty/console.c	/^consl_accept(Console *c, char ch) {$/;"	f
consl_feed	src/drivers/tty/console.c	/^consl_feed(Console *c, int key) {$/;"	f
consl_sync	src/drivers/tty/console.c	/^consl_sync(Console *c) {$/;"	f
consl_writec	src/drivers/tty/console.c	/^consl_writec(Console *c, char ch) {$/;"	f
cook	src/drivers/tty/console.c	/^cook(Console *c) {$/;"	f	file:
count	include/driver/hal.h	/^	size_t count;$/;"	m	struct:DevMessage
count	include/sync.h	/^    int32_t count;$/;"	m	struct:Semaphore
cr	src/drivers/tty/console.c	/^cr(Console *c) {$/;"	f	file:
create_kthread	src/process/thread.c	/^create_kthread(void *entry){$/;"	f
cs	include/x86.h	/^	uint32_t cs : 16;         \/\/ Code segment selector$/;"	m	struct:GateDesc
cs	include/x86.h	/^	uint32_t err, eip, cs, eflags; \/\/ Execution state before trap $/;"	m	struct:TrapFrame
ctrl	src/drivers/tty/keyboard.c	/^static int caps, ctrl, alt, shft;$/;"	v	file:
current_consl	src/drivers/tty/console.c	/^Console *current_consl;$/;"	v
current_pcb	src/process/schedule.c	/^PCB *current_pcb = NULL;$/;"	v
d	kernel.asm	/^   d:	0e                   	push   %cs$/;"	l
d	kernel.asm	/^   d:	12 01                	adc    (%ecx),%al$/;"	l
d	kernel.asm	/^   d:	4c                   	dec    %esp$/;"	l
d0	kernel.asm	/^      d0:	00 0b                	add    %cl,(%ebx)$/;"	l
d0	kernel.asm	/^      d0:	01 00                	add    %eax,(%eax)$/;"	l
d00	kernel.asm	/^     d00:	00 00                	add    %al,(%eax)$/;"	l
d01	kernel.asm	/^     d01:	03 00                	add    (%eax),%eax$/;"	l
d02	kernel.asm	/^     d02:	00 00                	add    %al,(%eax)$/;"	l
d03	kernel.asm	/^     d03:	91                   	xchg   %eax,%ecx$/;"	l
d04	kernel.asm	/^     d04:	08 06                	or     %al,(%esi)$/;"	l
d04	kernel.asm	/^     d04:	0c 04                	or     $0x4,%al$/;"	l
d06	kernel.asm	/^     d06:	24 02                	and    $0x2,%al$/;"	l
d06	kernel.asm	/^     d06:	dc 00                	faddl  (%eax)$/;"	d
d06	kernel.asm	/^ d06:	01 12                	add    %edx,(%edx)$/;"	l
d08	kernel.asm	/^     d08:	00 00                	add    %al,(%eax)$/;"	l
d08	kernel.asm	/^ d08:	01 58 0b             	add    %ebx,0xb(%eax)$/;"	l
d0a	kernel.asm	/^     d0a:	0c 04                	or     $0x4,%al$/;"	l
d0a	kernel.asm	/^     d0a:	36 02 00             	add    %ss:(%eax),%al$/;"	l
d0b	kernel.asm	/^ d0b:	59                   	pop    %ecx$/;"	l
d0c	kernel.asm	/^     d0c:	f4                   	hlt    $/;"	l
d0c	kernel.asm	/^ d0c:	0b 00                	or     (%eax),%eax$/;"	l
d0d	kernel.asm	/^     d0d:	00 00                	add    %al,(%eax)$/;"	l
d0d	kernel.asm	/^     d0d:	00 07                	add    %al,(%edi)$/;"	l
d0e	kernel.asm	/^ d0e:	00 00                	add    %al,(%eax)$/;"	l
d0f	kernel.asm	/^     d0f:	00 0d 48 00 00 00    	add    %cl,0x48$/;"	l
d0f	kernel.asm	/^     d0f:	00 91 08 06 06 23    	add    %dl,0x23060608(%ecx)$/;"	l
d1	kernel.asm	/^  d1:	00 00                	add    %al,(%eax)$/;"	l
d1	kernel.asm	/^  d1:	09 10                	or     %edx,(%eax)$/;"	l
d1	kernel.asm	/^  d1:	26 00 49 13          	add    %cl,%es:0x13(%ecx)$/;"	l
d1	kernel.asm	/^  d1:	75 74                	jne    147 <memcpy-0xc00ffeb9>$/;"	l
d10	kernel.asm	/^ d10:	01 11                	add    %edx,(%ecx)$/;"	l
d12	kernel.asm	/^ d12:	01 25 0e 13 0b 03    	add    %esp,0x30b130e$/;"	l
d15	kernel.asm	/^     d15:	01 9f 00 00 00 00    	add    %ebx,0x0(%edi)$/;"	l
d15	kernel.asm	/^     d15:	0c 04                	or     $0x4,%al$/;"	l
d17	kernel.asm	/^     d17:	ff 00                	incl   (%eax)$/;"	l
d18	kernel.asm	/^ d18:	0e                   	push   %cs$/;"	l
d19	kernel.asm	/^     d19:	00 00                	add    %al,(%eax)$/;"	l
d19	kernel.asm	/^ d19:	1b 0e                	sbb    (%esi),%ecx$/;"	l
d1b	kernel.asm	/^     d1b:	0e                   	push   %cs$/;"	l
d1b	kernel.asm	/^ d1b:	11 01                	adc    %eax,(%ecx)$/;"	l
d1c	kernel.asm	/^     d1c:	04 0c                	add    $0xc,%al$/;"	l
d1d	kernel.asm	/^ d1d:	12 01                	adc    (%ecx),%al$/;"	l
d1e	kernel.asm	/^     d1e:	04 48                	add    $0x48,%al$/;"	l
d1f	kernel.asm	/^ d1f:	10 06                	adc    %al,(%esi)$/;"	l
d2	kernel.asm	/^      d2:	05 01 ca 00 00       	add    $0xca01,%eax$/;"	l
d2	kernel.asm	/^      d2:	51                   	push   %ecx$/;"	l
d2	kernel.asm	/^  d2:	61                   	popa   $/;"	l
d20	kernel.asm	/^     d20:	00 00                	add    %al,(%eax)$/;"	l
d21	kernel.asm	/^ d21:	00 00                	add    %al,(%eax)$/;"	l
d22	kernel.asm	/^     d22:	00 00                	add    %al,(%eax)$/;"	l
d23	kernel.asm	/^     d23:	11 00                	adc    %eax,(%eax)$/;"	l
d23	kernel.asm	/^ d23:	02 16                	add    (%esi),%dl$/;"	l
d24	kernel.asm	/^     d24:	93                   	xchg   %eax,%ebx$/;"	l
d25	kernel.asm	/^     d25:	00 00                	add    %al,(%eax)$/;"	l
d25	kernel.asm	/^     d25:	02 00                	add    (%eax),%al$/;"	l
d25	kernel.asm	/^ d25:	00 03                	add    %al,(%ebx)$/;"	l
d27	kernel.asm	/^     d27:	00 02                	add    %al,(%edx)$/;"	l
d27	kernel.asm	/^     d27:	02 00                	add    (%eax),%al$/;"	l
d27	kernel.asm	/^ d27:	0e                   	push   %cs$/;"	l
d28	kernel.asm	/^ d28:	3a 0b                	cmp    (%ebx),%cl$/;"	l
d29	kernel.asm	/^     d29:	00 86 05 00 00 04    	add    %al,0x4000005(%esi)$/;"	l
d29	kernel.asm	/^     d29:	30 9f 11 00 00 00    	xor    %bl,0x11(%edi)$/;"	l
d2a	kernel.asm	/^ d2a:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
d2c	kernel.asm	/^ d2c:	49                   	dec    %ecx$/;"	l
d2d	kernel.asm	/^ d2d:	13 00                	adc    (%eax),%eax$/;"	l
d2f	kernel.asm	/^     d2f:	01 8c 00 00 00 01 e6 	add    %ecx,-0x19ff0000(%eax,%eax,1)$/;"	l
d2f	kernel.asm	/^     d2f:	40                   	inc    %eax$/;"	l
d2f	kernel.asm	/^ d2f:	00 03                	add    %al,(%ebx)$/;"	l
d3	kernel.asm	/^  d3:	00 06                	add    %al,(%esi)$/;"	l
d3	kernel.asm	/^  d3:	62 6f 72             	bound  %ebp,0x72(%edi)$/;"	l
d3	kernel.asm	/^  d3:	6f                   	outsl  %ds:(%esi),(%dx)$/;"	l
d3	kernel.asm	/^  d3:	c0                   	(bad)  $/;"	l
d30	kernel.asm	/^     d30:	00 00                	add    %al,(%eax)$/;"	l
d31	kernel.asm	/^ d31:	24 00                	and    $0x0,%al$/;"	l
d32	kernel.asm	/^     d32:	00 01                	add    %al,(%ecx)$/;"	l
d33	kernel.asm	/^ d33:	0b 0b                	or     (%ebx),%ecx$/;"	l
d34	kernel.asm	/^     d34:	00 57 40             	add    %dl,0x40(%edi)$/;"	l
d35	kernel.asm	/^ d35:	3e 0b 03             	or     %ds:(%ebx),%eax$/;"	l
d36	kernel.asm	/^     d36:	02 00                	add    (%eax),%al$/;"	l
d37	kernel.asm	/^     d37:	00 00                	add    %al,(%eax)$/;"	l
d38	kernel.asm	/^     d38:	00 55 00             	add    %dl,0x0(%ebp)$/;"	l
d38	kernel.asm	/^ d38:	0e                   	push   %cs$/;"	l
d39	kernel.asm	/^     d39:	00 42 00             	add    %al,0x0(%edx)$/;"	l
d39	kernel.asm	/^ d39:	00 00                	add    %al,(%eax)$/;"	l
d3b	kernel.asm	/^     d3b:	00 00                	add    %al,(%eax)$/;"	l
d3b	kernel.asm	/^ d3b:	04 24                	add    $0x24,%al$/;"	l
d3c	kernel.asm	/^     d3c:	00 00                	add    %al,(%eax)$/;"	l
d3d	kernel.asm	/^     d3d:	40                   	inc    %eax$/;"	l
d3d	kernel.asm	/^ d3d:	00 0b                	add    %cl,(%ebx)$/;"	l
d3e	kernel.asm	/^     d3e:	01 00                	add    %eax,(%eax)$/;"	l
d3e	kernel.asm	/^     d3e:	09 10                	or     %edx,(%eax)$/;"	l
d3f	kernel.asm	/^ d3f:	0b 3e                	or     (%esi),%edi$/;"	l
d4	kernel.asm	/^  d4:	61                   	popa   $/;"	l
d4	kernel.asm	/^  d4:	b7 01                	mov    $0x1,%bh$/;"	l
d40	kernel.asm	/^     d40:	50                   	push   %eax$/;"	l
d40	kernel.asm	/^     d40:	c0 c2 09             	rol    $0x9,%dl$/;"	l
d41	kernel.asm	/^     d41:	42                   	inc    %edx$/;"	l
d41	kernel.asm	/^ d41:	0b 03                	or     (%ebx),%eax$/;"	l
d42	kernel.asm	/^     d42:	00 00                	add    %al,(%eax)$/;"	l
d43	kernel.asm	/^     d43:	10 c0                	adc    %al,%al$/;"	l
d43	kernel.asm	/^ d43:	08 00                	or     %al,(%eax)$/;"	l
d44	kernel.asm	/^     d44:	00 8e 01 00 00 01    	add    %cl,0x1000001(%esi)$/;"	l
d45	kernel.asm	/^     d45:	5a                   	pop    %edx$/;"	l
d45	kernel.asm	/^ d45:	00 05 13 01 03 0e    	add    %al,0xe030113$/;"	l
d46	kernel.asm	/^     d46:	04 00                	add    $0x0,%al$/;"	l
d48	kernel.asm	/^     d48:	00 02                	add    %al,(%edx)$/;"	l
d4a	kernel.asm	/^     d4a:	00 57 8e             	add    %dl,-0x72(%edi)$/;"	l
d4a	kernel.asm	/^     d4a:	04 07                	add    $0x7,%al$/;"	l
d4b	kernel.asm	/^ d4b:	0b 0b                	or     (%ebx),%ecx$/;"	l
d4c	kernel.asm	/^     d4c:	9e                   	sahf   $/;"	l
d4d	kernel.asm	/^     d4d:	00 00                	add    %al,(%eax)$/;"	l
d4d	kernel.asm	/^     d4d:	01 00                	add    %eax,(%eax)$/;"	l
d4d	kernel.asm	/^ d4d:	3a 0b                	cmp    (%ebx),%cl$/;"	l
d4f	kernel.asm	/^     d4f:	00 03                	add    %al,(%ebx)$/;"	l
d4f	kernel.asm	/^     d4f:	00 97 01 00 00 03    	add    %dl,0x3000001(%edi)$/;"	l
d4f	kernel.asm	/^ d4f:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
d5	kernel.asm	/^  d5:	00 00                	add    %al,(%eax)$/;"	l
d5	kernel.asm	/^  d5:	5f                   	pop    %edi$/;"	l
d51	kernel.asm	/^     d51:	04 05                	add    $0x5,%al$/;"	l
d51	kernel.asm	/^ d51:	01 13                	add    %edx,(%ebx)$/;"	l
d53	kernel.asm	/^     d53:	69 6e 74 00 04 1c 03 	imul   $0x31c0400,0x74(%esi),%ebp$/;"	l
d53	kernel.asm	/^ d53:	00 00                	add    %al,(%eax)$/;"	l
d55	kernel.asm	/^     d55:	00 77 7f             	add    %dh,0x7f(%edi)$/;"	l
d55	kernel.asm	/^ d55:	06                   	push   %es$/;"	l
d56	kernel.asm	/^ d56:	0d 00 03 08 3a       	or     $0x3a080300,%eax$/;"	l
d58	kernel.asm	/^     d58:	9f                   	lahf   $/;"	l
d59	kernel.asm	/^     d59:	97                   	xchg   %eax,%edi$/;"	l
d5a	kernel.asm	/^     d5a:	00 00                	add    %al,(%eax)$/;"	l
d5a	kernel.asm	/^     d5a:	01 00                	add    %eax,(%eax)$/;"	l
d5b	kernel.asm	/^ d5b:	0b 3b                	or     (%ebx),%edi$/;"	l
d5c	kernel.asm	/^     d5c:	00 59 02             	add    %bl,0x2(%ecx)$/;"	l
d5c	kernel.asm	/^     d5c:	03 06                	add    (%esi),%eax$/;"	l
d5d	kernel.asm	/^ d5d:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
d5e	kernel.asm	/^     d5e:	3e 00 00             	add    %al,%ds:(%eax)$/;"	l
d5f	kernel.asm	/^     d5f:	00 00                	add    %al,(%eax)$/;"	l
d6	kernel.asm	/^  d6:	62 75 66             	bound  %esi,0x66(%ebp)$/;"	l
d6	kernel.asm	/^  d6:	74 2e                	je     106 <memcpy-0xc00ffefa>$/;"	l
d60	kernel.asm	/^ d60:	38 0a                	cmp    %cl,(%edx)$/;"	l
d61	kernel.asm	/^     d61:	00 02                	add    %al,(%edx)$/;"	l
d61	kernel.asm	/^     d61:	01 00                	add    %eax,(%eax)$/;"	l
d62	kernel.asm	/^ d62:	00 00                	add    %al,(%eax)$/;"	l
d63	kernel.asm	/^     d63:	02 07                	add    (%edi),%al$/;"	l
d63	kernel.asm	/^     d63:	57                   	push   %edi$/;"	l
d64	kernel.asm	/^ d64:	07                   	pop    %es$/;"	l
d65	kernel.asm	/^     d65:	98                   	cwtl   $/;"	l
d65	kernel.asm	/^ d65:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax$/;"	l
d66	kernel.asm	/^     d66:	00 00                	add    %al,(%eax)$/;"	l
d68	kernel.asm	/^     d68:	00 02                	add    %al,(%edx)$/;"	l
d6a	kernel.asm	/^     d6a:	02 05 c0 00 00 00    	add    0xc0,%al$/;"	l
d6a	kernel.asm	/^ d6a:	0b 3b                	or     (%ebx),%edi$/;"	l
d6c	kernel.asm	/^ d6c:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
d6f	kernel.asm	/^ d6f:	38 0a                	cmp    %cl,(%edx)$/;"	l
d7	kernel.asm	/^      d7:	00 01                	add    %al,(%ecx)$/;"	l
d7	kernel.asm	/^  d7:	00 10                	add    %dl,(%eax)$/;"	l
d7	kernel.asm	/^  d7:	12 34 00             	adc    (%eax,%eax,1),%dh$/;"	l
d70	kernel.asm	/^     d70:	01 00                	add    %eax,(%eax)$/;"	l
d70	kernel.asm	/^     d70:	04 51                	add    $0x51,%al$/;"	l
d71	kernel.asm	/^ d71:	00 00                	add    %al,(%eax)$/;"	l
d72	kernel.asm	/^     d72:	00 00                	add    %al,(%eax)$/;"	l
d72	kernel.asm	/^     d72:	01 00                	add    %eax,(%eax)$/;"	l
d73	kernel.asm	/^ d73:	08 0f                	or     %cl,(%edi)$/;"	l
d74	kernel.asm	/^     d74:	00 03                	add    %al,(%ebx)$/;"	l
d74	kernel.asm	/^     d74:	02 00                	add    (%eax),%al$/;"	l
d75	kernel.asm	/^ d75:	00 0b                	add    %cl,(%ebx)$/;"	l
d76	kernel.asm	/^     d76:	08 57 00             	or     %dl,0x0(%edi)$/;"	l
d76	kernel.asm	/^     d76:	74 04                	je     d7c <memcpy-0xc00ff284>$/;"	l
d77	kernel.asm	/^ d77:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
d78	kernel.asm	/^     d78:	01 00                	add    %eax,(%eax)$/;"	l
d79	kernel.asm	/^     d79:	00 00                	add    %al,(%eax)$/;"	l
d7a	kernel.asm	/^     d7a:	00 00                	add    %al,(%eax)$/;"	l
d7a	kernel.asm	/^ d7a:	00 00                	add    %al,(%eax)$/;"	l
d7b	kernel.asm	/^     d7b:	02 01                	add    (%ecx),%al$/;"	l
d7c	kernel.asm	/^     d7c:	08 00                	or     %al,(%eax)$/;"	l
d7c	kernel.asm	/^ d7c:	09 13                	or     %edx,(%ebx)$/;"	l
d7d	kernel.asm	/^     d7d:	08 47 00             	or     %al,0x0(%edi)$/;"	l
d7e	kernel.asm	/^     d7e:	00 00                	add    %al,(%eax)$/;"	l
d7e	kernel.asm	/^ d7e:	01 03                	add    %eax,(%ebx)$/;"	l
d8	kernel.asm	/^  d8:	63 00                	arpl   %ax,(%eax)$/;"	l
d80	kernel.asm	/^     d80:	00 00                	add    %al,(%eax)$/;"	l
d80	kernel.asm	/^     d80:	02 00                	add    (%eax),%al$/;"	l
d80	kernel.asm	/^ d80:	08 0b                	or     %cl,(%ebx)$/;"	l
d82	kernel.asm	/^     d82:	02 01                	add    (%ecx),%al$/;"	l
d82	kernel.asm	/^     d82:	74 08                	je     d8c <memcpy-0xc00ff274>$/;"	l
d82	kernel.asm	/^ d82:	05 3a 0b 3b 0b       	add    $0xb3b0b3a,%eax$/;"	l
d84	kernel.asm	/^     d84:	06                   	push   %es$/;"	l
d84	kernel.asm	/^     d84:	08 00                	or     %al,(%eax)$/;"	l
d85	kernel.asm	/^     d85:	50                   	push   %eax$/;"	l
d86	kernel.asm	/^     d86:	00 00                	add    %al,(%eax)$/;"	l
d87	kernel.asm	/^ d87:	01 13                	add    %edx,(%ebx)$/;"	l
d88	kernel.asm	/^     d88:	00 04 74             	add    %al,(%esp,%esi,2)$/;"	l
d88	kernel.asm	/^     d88:	1e                   	push   %ds$/;"	l
d89	kernel.asm	/^     d89:	00 00                	add    %al,(%eax)$/;"	l
d89	kernel.asm	/^ d89:	00 00                	add    %al,(%eax)$/;"	l
d8b	kernel.asm	/^     d8b:	00 00                	add    %al,(%eax)$/;"	l
d8b	kernel.asm	/^     d8b:	00 02                	add    %al,(%edx)$/;"	l
d8b	kernel.asm	/^ d8b:	0a 01                	or     (%ecx),%al$/;"	l
d8d	kernel.asm	/^     d8d:	00 03                	add    %al,(%ebx)$/;"	l
d8d	kernel.asm	/^     d8d:	00 75 08             	add    %dh,0x8(%ebp)$/;"	l
d8d	kernel.asm	/^ d8d:	01 49 13             	add    %ecx,0x13(%ecx)$/;"	l
d8f	kernel.asm	/^     d8f:	0a 57 00             	or     0x0(%edi),%dl$/;"	l
d9	kernel.asm	/^      d9:	11 01                	adc    %eax,(%ecx)$/;"	l
d9	kernel.asm	/^  d9:	00 00                	add    %al,(%eax)$/;"	l
d9	kernel.asm	/^  d9:	00 77 61             	add    %dh,0x61(%edi)$/;"	l
d90	kernel.asm	/^     d90:	1e                   	push   %ds$/;"	l
d90	kernel.asm	/^ d90:	01 13                	add    %edx,(%ebx)$/;"	l
d91	kernel.asm	/^     d91:	00 00                	add    %al,(%eax)$/;"	l
d92	kernel.asm	/^     d92:	00 00                	add    %al,(%eax)$/;"	l
d92	kernel.asm	/^ d92:	00 00                	add    %al,(%eax)$/;"	l
d93	kernel.asm	/^     d93:	00 1f                	add    %bl,(%edi)$/;"	l
d94	kernel.asm	/^     d94:	05 ca 02 00 00       	add    $0x2ca,%eax$/;"	l
d94	kernel.asm	/^ d94:	0b 21                	or     (%ecx),%esp$/;"	l
d95	kernel.asm	/^     d95:	00 00                	add    %al,(%eax)$/;"	l
d96	kernel.asm	/^ d96:	00 49 13             	add    %cl,0x13(%ecx)$/;"	l
d97	kernel.asm	/^     d97:	00 02                	add    %al,(%edx)$/;"	l
d99	kernel.asm	/^     d99:	00 74 04 00          	add    %dh,0x0(%esp,%eax,1)$/;"	l
d99	kernel.asm	/^     d99:	02 e1                	add    %cl,%ah$/;"	l
d99	kernel.asm	/^ d99:	2f                   	das    $/;"	l
d9a	kernel.asm	/^ d9a:	05 00 00 0c 16       	add    $0x160c0000,%eax$/;"	l
d9b	kernel.asm	/^     d9b:	01 4c 00 00          	add    %ecx,0x0(%eax,%eax,1)$/;"	l
d9d	kernel.asm	/^     d9d:	00 00                	add    %al,(%eax)$/;"	l
d9f	kernel.asm	/^     d9f:	00 00                	add    %al,(%eax)$/;"	l
d9f	kernel.asm	/^     d9f:	00 03                	add    %al,(%ebx)$/;"	l
d9f	kernel.asm	/^ d9f:	00 03                	add    %al,(%ebx)$/;"	l
da	kernel.asm	/^  da:	01 00                	add    %eax,(%eax)$/;"	l
da	kernel.asm	/^  da:	03 0e                	add    (%esi),%ecx$/;"	l
da1	kernel.asm	/^     da1:	00 00                	add    %al,(%eax)$/;"	l
da1	kernel.asm	/^     da1:	98                   	cwtl   $/;"	l
da1	kernel.asm	/^ da1:	08 3a                	or     %bh,(%edx)$/;"	l
da2	kernel.asm	/^     da2:	00 00                	add    %al,(%eax)$/;"	l
da3	kernel.asm	/^     da3:	00 11                	add    %dl,(%ecx)$/;"	l
da3	kernel.asm	/^ da3:	0b 3b                	or     (%ebx),%edi$/;"	l
da4	kernel.asm	/^     da4:	00 06                	add    %al,(%esi)$/;"	l
da5	kernel.asm	/^     da5:	00 00                	add    %al,(%eax)$/;"	l
da5	kernel.asm	/^ da5:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
da6	kernel.asm	/^     da6:	10 03                	adc    %al,(%ebx)$/;"	l
da7	kernel.asm	/^     da7:	00 1c 00             	add    %bl,(%eax,%eax,1)$/;"	l
da8	kernel.asm	/^     da8:	00 00                	add    %al,(%eax)$/;"	l
da8	kernel.asm	/^ da8:	00 00                	add    %al,(%eax)$/;"	l
daa	kernel.asm	/^     daa:	00 00                	add    %al,(%eax)$/;"	l
daa	kernel.asm	/^     daa:	02 e1                	add    %cl,%ah$/;"	l
daa	kernel.asm	/^ daa:	0d 2e 01 03 0e       	or     $0xe03012e,%eax$/;"	l
dac	kernel.asm	/^     dac:	01 00                	add    %eax,(%eax)$/;"	l
dac	kernel.asm	/^     dac:	33 00                	xor    (%eax),%eax$/;"	l
dae	kernel.asm	/^     dae:	00 00                	add    %al,(%eax)$/;"	l
dae	kernel.asm	/^     dae:	50                   	push   %eax$/;"	l
daf	kernel.asm	/^ daf:	3a 0b                	cmp    (%ebx),%cl$/;"	l
day	include/driver/time.h	/^	int year, month, day;$/;"	m	struct:Time
db	include/x86.h	/^	uint32_t db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:SegDesc
db	kernel.asm	/^      db:	30 00                	xor    %al,(%eax)$/;"	l
db	kernel.asm	/^      db:	c9                   	leave  $/;"	l
db	kernel.asm	/^  db:	00 11                	add    %dl,(%ecx)$/;"	l
db0	kernel.asm	/^     db0:	07                   	pop    %es$/;"	l
db1	kernel.asm	/^     db1:	9b                   	fwait$/;"	l
db1	kernel.asm	/^ db1:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
db2	kernel.asm	/^     db2:	01 00                	add    %eax,(%eax)$/;"	l
db3	kernel.asm	/^ db3:	27                   	daa    $/;"	l
db4	kernel.asm	/^     db4:	00 02                	add    %al,(%edx)$/;"	l
db4	kernel.asm	/^ db4:	0c 20                	or     $0x20,%al$/;"	l
db6	kernel.asm	/^     db6:	e2 4c                	loop   e04 <memcpy-0xc00ff1fc>$/;"	l
db6	kernel.asm	/^ db6:	0b 01                	or     (%ecx),%eax$/;"	l
db7	kernel.asm	/^     db7:	20 00                	and    %al,(%eax)$/;"	l
db8	kernel.asm	/^     db8:	00 00                	add    %al,(%eax)$/;"	l
db8	kernel.asm	/^ db8:	13 00                	adc    (%eax),%eax$/;"	l
db9	kernel.asm	/^     db9:	00 00                	add    %al,(%eax)$/;"	l
dba	kernel.asm	/^     dba:	00 00                	add    %al,(%eax)$/;"	l
dba	kernel.asm	/^ dba:	00 0e                	add    %cl,(%esi)$/;"	l
dbb	kernel.asm	/^     dbb:	21 00                	and    %eax,(%eax)$/;"	l
dbc	kernel.asm	/^     dbc:	08 f6                	or     %dh,%dh$/;"	l
dbc	kernel.asm	/^ dbc:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax$/;"	l
dbd	kernel.asm	/^     dbd:	00 00                	add    %al,(%eax)$/;"	l
dbe	kernel.asm	/^     dbe:	02 00                	add    (%eax),%al$/;"	l
dbf	kernel.asm	/^     dbf:	02 00                	add    (%eax),%al$/;"	l
dc	kernel.asm	/^      dc:	00 00                	add    %al,(%eax)$/;"	l
dc	kernel.asm	/^  dc:	00 78 38             	add    %bh,0x38(%eax)$/;"	l
dc	kernel.asm	/^  dc:	3a 0b                	cmp    (%ebx),%cl$/;"	l
dc	kernel.asm	/^  dc:	69 74 5f 69 6e 74 72 	imul   $0x72746e,0x69(%edi,%ebx,2),%esi$/;"	l
dc0	kernel.asm	/^     dc0:	00 01                	add    %al,(%ecx)$/;"	l
dc1	kernel.asm	/^     dc1:	74 04                	je     dc7 <memcpy-0xc00ff239>$/;"	l
dc1	kernel.asm	/^ dc1:	0b 3b                	or     (%ebx),%edi$/;"	l
dc2	kernel.asm	/^     dc2:	12 01                	adc    (%ecx),%al$/;"	l
dc3	kernel.asm	/^     dc3:	21 00                	and    %eax,(%eax)$/;"	l
dc3	kernel.asm	/^ dc3:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
dc4	kernel.asm	/^     dc4:	65 00 00             	add    %al,%gs:(%eax)$/;"	l
dc5	kernel.asm	/^     dc5:	00 00                	add    %al,(%eax)$/;"	l
dc6	kernel.asm	/^ dc6:	00 00                	add    %al,(%eax)$/;"	l
dc7	kernel.asm	/^     dc7:	00 03                	add    %al,(%ebx)$/;"	l
dc7	kernel.asm	/^     dc7:	28 00                	sub    %al,(%eax)$/;"	l
dc8	kernel.asm	/^ dc8:	0f 2e 01             	ucomiss (%ecx),%xmm0$/;"	l
dc9	kernel.asm	/^     dc9:	00 00                	add    %al,(%eax)$/;"	l
dc9	kernel.asm	/^     dc9:	09 dd                	or     %ebx,%ebp$/;"	l
dcb	kernel.asm	/^     dcb:	02 00                	add    (%eax),%al$/;"	l
dcb	kernel.asm	/^ dcb:	03 0e                	add    (%esi),%ecx$/;"	l
dcd	kernel.asm	/^     dcd:	00 02                	add    %al,(%edx)$/;"	l
dcd	kernel.asm	/^     dcd:	74 08                	je     dd7 <memcpy-0xc00ff229>$/;"	l
dcd	kernel.asm	/^ dcd:	3a 0b                	cmp    (%ebx),%cl$/;"	l
dcf	kernel.asm	/^     dcf:	28 00                	sub    %al,(%eax)$/;"	l
dcf	kernel.asm	/^     dcf:	f1                   	icebp  $/;"	l
dcf	kernel.asm	/^ dcf:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
dd	kernel.asm	/^      dd:	00 00                	add    %al,(%eax)$/;"	l
dd0	kernel.asm	/^     dd0:	01 03                	add    %eax,(%ebx)$/;"	l
dd1	kernel.asm	/^     dd1:	00 00                	add    %al,(%eax)$/;"	l
dd1	kernel.asm	/^ dd1:	27                   	daa    $/;"	l
dd2	kernel.asm	/^     dd2:	c9                   	leave  $/;"	l
dd2	kernel.asm	/^ dd2:	0c 49                	or     $0x49,%al$/;"	l
dd3	kernel.asm	/^     dd3:	00 00                	add    %al,(%eax)$/;"	l
dd3	kernel.asm	/^     dd3:	59                   	pop    %ecx$/;"	l
dd4	kernel.asm	/^     dd4:	00 00                	add    %al,(%eax)$/;"	l
dd4	kernel.asm	/^ dd4:	13 20                	adc    (%eax),%esp$/;"	l
dd5	kernel.asm	/^     dd5:	00 06                	add    %al,(%esi)$/;"	l
dd6	kernel.asm	/^     dd6:	00 02                	add    %al,(%edx)$/;"	l
dd6	kernel.asm	/^ dd6:	0b 01                	or     (%ecx),%eax$/;"	l
dd7	kernel.asm	/^     dd7:	10 03                	adc    %al,(%ebx)$/;"	l
dd8	kernel.asm	/^     dd8:	00 75 08             	add    %dh,0x8(%ebp)$/;"	l
dd8	kernel.asm	/^ dd8:	13 00                	adc    (%eax),%eax$/;"	l
dd9	kernel.asm	/^     dd9:	00 00                	add    %al,(%eax)$/;"	l
dda	kernel.asm	/^ dda:	00 10                	add    %dl,(%eax)$/;"	l
ddb	kernel.asm	/^     ddb:	02 f1                	add    %cl,%dh$/;"	l
ddb	kernel.asm	/^     ddb:	59                   	pop    %ecx$/;"	l
ddc	kernel.asm	/^     ddc:	00 00                	add    %al,(%eax)$/;"	l
ddc	kernel.asm	/^ ddc:	34 00                	xor    $0x0,%al$/;"	l
ddd	kernel.asm	/^     ddd:	33 00                	xor    (%eax),%eax$/;"	l
dde	kernel.asm	/^     dde:	00 5a 00             	add    %bl,0x0(%edx)$/;"	l
dde	kernel.asm	/^ dde:	03 0e                	add    (%esi),%ecx$/;"	l
ddf	kernel.asm	/^     ddf:	00 00                	add    %al,(%eax)$/;"	l
de	kernel.asm	/^      de:	00 30                	add    %dh,(%eax)$/;"	l
de	kernel.asm	/^  de:	00 00                	add    %al,(%eax)$/;"	l
de	kernel.asm	/^  de:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
de0	kernel.asm	/^ de0:	3a 0b                	cmp    (%ebx),%cl$/;"	l
de1	kernel.asm	/^     de1:	00 00                	add    %al,(%eax)$/;"	l
de1	kernel.asm	/^     de1:	06                   	push   %es$/;"	l
de2	kernel.asm	/^     de2:	9b                   	fwait$/;"	l
de2	kernel.asm	/^ de2:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
de3	kernel.asm	/^     de3:	01 00                	add    %eax,(%eax)$/;"	l
de3	kernel.asm	/^     de3:	02 00                	add    (%eax),%al$/;"	l
de4	kernel.asm	/^ de4:	49                   	dec    %ecx$/;"	l
de5	kernel.asm	/^     de5:	00 02                	add    %al,(%edx)$/;"	l
de5	kernel.asm	/^     de5:	74 04                	je     deb <memcpy-0xc00ff215>$/;"	l
de5	kernel.asm	/^ de5:	13 00                	adc    (%eax),%eax$/;"	l
de7	kernel.asm	/^     de7:	f1                   	icebp  $/;"	l
de7	kernel.asm	/^ de7:	00 11                	add    %dl,(%ecx)$/;"	l
de8	kernel.asm	/^     de8:	4c                   	dec    %esp$/;"	l
de9	kernel.asm	/^     de9:	00 00                	add    %al,(%eax)$/;"	l
de9	kernel.asm	/^ de9:	2e 01 3f             	add    %edi,%cs:(%edi)$/;"	l
deb	kernel.asm	/^     deb:	00 00                	add    %al,(%eax)$/;"	l
dec	kernel.asm	/^ dec:	0c 03                	or     $0x3,%al$/;"	l
ded	kernel.asm	/^     ded:	0a 01                	or     (%ecx),%al$/;"	l
dee	kernel.asm	/^ dee:	0e                   	push   %cs$/;"	l
def	kernel.asm	/^     def:	02 03                	add    (%ebx),%al$/;"	l
def	kernel.asm	/^     def:	60                   	pusha  $/;"	l
def	kernel.asm	/^ def:	3a 0b                	cmp    (%ebx),%cl$/;"	l
del	src/drivers/tty/console.c	/^del(Console *c) {$/;"	f	file:
dest	include/message.h	/^    pid_t src,dest;$/;"	m	struct:Message
dev_id	include/driver/hal.h	/^	int dev_id;$/;"	m	struct:DevMessage
dev_id	include/driver/hal.h	/^	int dev_id;$/;"	m	struct:Device
dev_pool	src/drivers/hal.c	/^static Device dev_pool[NR_DEV];$/;"	v	file:
dev_read	src/drivers/hal.c	/^dev_read(Device *dev, off_t offset, void *buf, size_t count) {$/;"	f
dev_rw	src/drivers/hal.c	/^dev_rw(int type, Device *dev, off_t offset, void *buf, size_t count) {$/;"	f	file:
dev_write	src/drivers/hal.c	/^dev_write(Device *dev, off_t offset, void *buf, size_t count) {$/;"	f
devices	src/drivers/hal.c	/^static ListHead free, devices;$/;"	v	file:
df	kernel.asm	/^      df:	3a 00                	cmp    (%eax),%al$/;"	l
df	kernel.asm	/^  df:	36                   	ss$/;"	l
df0	kernel.asm	/^     df0:	00 00                	add    %al,(%eax)$/;"	l
df1	kernel.asm	/^     df1:	00 00                	add    %al,(%eax)$/;"	l
df1	kernel.asm	/^ df1:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
df2	kernel.asm	/^     df2:	00 61 00             	add    %ah,0x0(%ecx)$/;"	l
df3	kernel.asm	/^     df3:	01 17                	add    %edx,(%edi)$/;"	l
df3	kernel.asm	/^ df3:	27                   	daa    $/;"	l
df4	kernel.asm	/^ df4:	0c 11                	or     $0x11,%al$/;"	l
df5	kernel.asm	/^     df5:	00 00                	add    %al,(%eax)$/;"	l
df5	kernel.asm	/^     df5:	01 40 09             	add    %eax,0x9(%eax)$/;"	l
df6	kernel.asm	/^ df6:	01 12                	add    %edx,(%edx)$/;"	l
df7	kernel.asm	/^     df7:	02 00                	add    (%eax),%al$/;"	l
df8	kernel.asm	/^     df8:	10 c0                	adc    %al,%al$/;"	l
df8	kernel.asm	/^ df8:	01 40 06             	add    %eax,0x6(%eax)$/;"	l
df9	kernel.asm	/^     df9:	74 04                	je     dff <memcpy-0xc00ff201>$/;"	l
dfa	kernel.asm	/^     dfa:	5f                   	pop    %edi$/;"	l
dfb	kernel.asm	/^     dfb:	09 10                	or     %edx,(%eax)$/;"	l
dfb	kernel.asm	/^     dfb:	61                   	popa   $/;"	l
dfb	kernel.asm	/^ dfb:	01 13                	add    %edx,(%ebx)$/;"	l
dfc	kernel.asm	/^     dfc:	00 00                	add    %al,(%eax)$/;"	l
dfd	kernel.asm	/^     dfd:	c0 6c 0d 00 00       	shrb   $0x0,0x0(%ebp,%ecx,1)$/;"	l
dfd	kernel.asm	/^ dfd:	00 00                	add    %al,(%eax)$/;"	l
dfe	kernel.asm	/^     dfe:	00 63 00             	add    %ah,0x0(%ebx)$/;"	l
dff	kernel.asm	/^ dff:	12 1d 01 31 13 11    	adc    0x11133101,%bl$/;"	l
dontcare	include/x86.h	/^	char dontcare[88];$/;"	m	struct:TSS
dpl	include/x86.h	/^	uint32_t dpl : 2;         \/\/ Descriptor(meaning new) privilege level$/;"	m	struct:GateDesc
dpl	include/x86.h	/^	uint32_t dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:SegDesc
draw	src/drivers/tty/console.c	/^draw(char ch) {$/;"	f	file:
draw2	src/drivers/tty/banner.c	/^draw2(char **p, int q) {$/;"	f	file:
ds	include/x86.h	/^	uint32_t gs, fs, es, ds;       \/\/ Segment register$/;"	m	struct:TrapFrame
e	kernel.asm	/^       e:	00 00                	add    %al,(%eax)$/;"	l
e	kernel.asm	/^   e:	00 00                	add    %al,(%eax)$/;"	l
e	kernel.asm	/^   e:	00 73 69             	add    %dh,0x69(%ebx)$/;"	l
e	kernel.asm	/^   e:	0d 00 01 01 01       	or     $0x1010100,%eax$/;"	l
e	kernel.asm	/^   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp$/;"	l
e0	kernel.asm	/^      e0:	00 10                	add    %dl,(%eax)$/;"	l
e0	kernel.asm	/^  e0:	1c 00                	sbb    $0x0,%al$/;"	l
e0	kernel.asm	/^  e0:	2e                   	cs$/;"	l
e0	kernel.asm	/^  e0:	49                   	dec    %ecx$/;"	l
e01	kernel.asm	/^     e01:	00 00                	add    %al,(%eax)$/;"	l
e02	kernel.asm	/^     e02:	49                   	dec    %ecx$/;"	l
e03	kernel.asm	/^     e03:	01 00                	add    %eax,(%eax)$/;"	l
e03	kernel.asm	/^     e03:	02 00                	add    (%eax),%al$/;"	l
e05	kernel.asm	/^     e05:	00 0b                	add    %cl,(%ebx)$/;"	l
e05	kernel.asm	/^     e05:	74 08                	je     e0f <memcpy-0xc00ff1f1>$/;"	l
e05	kernel.asm	/^ e05:	01 12                	add    %edx,(%edx)$/;"	l
e07	kernel.asm	/^     e07:	63 00                	arpl   %ax,(%eax)$/;"	l
e07	kernel.asm	/^     e07:	63 68 00             	arpl   %bp,0x0(%eax)$/;"	l
e07	kernel.asm	/^ e07:	01 58 0b             	add    %ebx,0xb(%eax)$/;"	l
e09	kernel.asm	/^     e09:	00 00                	add    %al,(%eax)$/;"	l
e0a	kernel.asm	/^     e0a:	01 17                	add    %edx,(%edi)$/;"	l
e0a	kernel.asm	/^ e0a:	59                   	pop    %ecx$/;"	l
e0b	kernel.asm	/^     e0b:	81 00 00 00 02 00    	addl   $0x20000,(%eax)$/;"	l
e0b	kernel.asm	/^ e0b:	0b 00                	or     (%eax),%eax$/;"	l
e0c	kernel.asm	/^     e0c:	5e                   	pop    %esi$/;"	l
e0d	kernel.asm	/^     e0d:	00 00                	add    %al,(%eax)$/;"	l
e0d	kernel.asm	/^ e0d:	00 13                	add    %dl,(%ebx)$/;"	l
e0f	kernel.asm	/^     e0f:	00 02                	add    %al,(%edx)$/;"	l
e0f	kernel.asm	/^ e0f:	05 00 31 13 02       	add    $0x2133100,%eax$/;"	l
e1	kernel.asm	/^      e1:	00 00                	add    %al,(%eax)$/;"	l
e1	kernel.asm	/^  e1:	13 02                	adc    (%edx),%eax$/;"	l
e1	kernel.asm	/^  e1:	68 00 02 00 00       	push   $0x200$/;"	l
e11	kernel.asm	/^     e11:	75 08                	jne    e1b <memcpy-0xc00ff1e5>$/;"	l
e11	kernel.asm	/^     e11:	91                   	xchg   %eax,%ecx$/;"	l
e12	kernel.asm	/^     e12:	00 0c 98             	add    %cl,(%eax,%ebx,4)$/;"	l
e13	kernel.asm	/^     e13:	81 00 00 00 82 00    	addl   $0x820000,(%eax)$/;"	l
e14	kernel.asm	/^ e14:	0a 00                	or     (%eax),%al$/;"	l
e15	kernel.asm	/^     e15:	00 00                	add    %al,(%eax)$/;"	l
e16	kernel.asm	/^ e16:	00 14 34             	add    %dl,(%esp,%esi,1)$/;"	l
e17	kernel.asm	/^     e17:	00 41 09             	add    %al,0x9(%ecx)$/;"	l
e19	kernel.asm	/^     e19:	00 00                	add    %al,(%eax)$/;"	l
e19	kernel.asm	/^ e19:	00 03                	add    %al,(%ebx)$/;"	l
e1a	kernel.asm	/^     e1a:	10 c0                	adc    %al,%al$/;"	l
e1b	kernel.asm	/^     e1b:	02 00                	add    (%eax),%al$/;"	l
e1b	kernel.asm	/^ e1b:	0e                   	push   %cs$/;"	l
e1c	kernel.asm	/^     e1c:	a0 00 00 00 01       	mov    0x1000000,%al$/;"	l
e1c	kernel.asm	/^ e1c:	3a 0b                	cmp    (%ebx),%cl$/;"	l
e1d	kernel.asm	/^     e1d:	74 04                	je     e23 <memcpy-0xc00ff1dd>$/;"	l
e1e	kernel.asm	/^ e1e:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
e2	kernel.asm	/^      e2:	c0 55 00 10          	rclb   $0x10,0x0(%ebp)$/;"	l
e2	kernel.asm	/^  e2:	00 00                	add    %al,(%eax)$/;"	l
e20	kernel.asm	/^ e20:	49                   	dec    %ecx$/;"	l
e21	kernel.asm	/^     e21:	18 29                	sbb    %ch,(%ecx)$/;"	l
e21	kernel.asm	/^ e21:	13 02                	adc    (%edx),%eax$/;"	l
e23	kernel.asm	/^     e23:	01 00                	add    %eax,(%eax)$/;"	l
e23	kernel.asm	/^ e23:	06                   	push   %es$/;"	l
e24	kernel.asm	/^ e24:	00 00                	add    %al,(%eax)$/;"	l
e25	kernel.asm	/^     e25:	00 0d 70 00 00 00    	add    %cl,0x70$/;"	l
e26	kernel.asm	/^ e26:	15 1d 01 31 13       	adc    $0x1331011d,%eax$/;"	l
e2b	kernel.asm	/^     e2b:	01 00                	add    %eax,(%eax)$/;"	l
e2b	kernel.asm	/^     e2b:	41                   	inc    %ecx$/;"	l
e2b	kernel.asm	/^ e2b:	52                   	push   %edx$/;"	l
e2c	kernel.asm	/^     e2c:	09 10                	or     %edx,(%eax)$/;"	l
e2c	kernel.asm	/^ e2c:	01 55 06             	add    %edx,0x6(%ebp)$/;"	l
e2d	kernel.asm	/^     e2d:	00 00                	add    %al,(%eax)$/;"	l
e2e	kernel.asm	/^     e2e:	c0 b8 00 00 00 01 13 	sarb   $0x13,0x1000000(%eax)$/;"	l
e2f	kernel.asm	/^     e2f:	02 00                	add    (%eax),%al$/;"	l
e2f	kernel.asm	/^ e2f:	58                   	pop    %eax$/;"	l
e3	kernel.asm	/^      e3:	02 00                	add    (%eax),%al$/;"	l
e3	kernel.asm	/^  e3:	00 $/;"	l
e3	kernel.asm	/^  e3:	06                   	push   %es$/;"	l
e30	kernel.asm	/^ e30:	0b 59 0b             	or     0xb(%ecx),%ebx$/;"	l
e31	kernel.asm	/^     e31:	74 04                	je     e37 <memcpy-0xc00ff1c9>$/;"	l
e33	kernel.asm	/^     e33:	01 00                	add    %eax,(%eax)$/;"	l
e33	kernel.asm	/^ e33:	01 13                	add    %edx,(%ebx)$/;"	l
e35	kernel.asm	/^     e35:	00 00                	add    %al,(%eax)$/;"	l
e35	kernel.asm	/^     e35:	0e                   	push   %cs$/;"	l
e35	kernel.asm	/^ e35:	00 00                	add    %al,(%eax)$/;"	l
e36	kernel.asm	/^     e36:	81 00 00 00 fd 03    	addl   $0x3fd0000,(%eax)$/;"	l
e37	kernel.asm	/^     e37:	08 00                	or     %al,(%eax)$/;"	l
e37	kernel.asm	/^ e37:	16                   	push   %ss$/;"	l
e38	kernel.asm	/^ e38:	05 00 31 13 02       	add    $0x2133100,%eax$/;"	l
e39	kernel.asm	/^     e39:	00 00                	add    %al,(%eax)$/;"	l
e3b	kernel.asm	/^     e3b:	02 00                	add    (%eax),%al$/;"	l
e3c	kernel.asm	/^     e3c:	0f d0                	(bad)  $/;"	l
e3d	kernel.asm	/^     e3d:	74 08                	je     e47 <memcpy-0xc00ff1b9>$/;"	l
e3d	kernel.asm	/^ e3d:	06                   	push   %es$/;"	l
e3e	kernel.asm	/^     e3e:	00 00                	add    %al,(%eax)$/;"	l
e3e	kernel.asm	/^ e3e:	00 00                	add    %al,(%eax)$/;"	l
e3f	kernel.asm	/^     e3f:	08 00                	or     %al,(%eax)$/;"	l
e4	kernel.asm	/^  e4:	00 00                	add    %al,(%eax)$/;"	l
e4	kernel.asm	/^  e4:	02 00                	add    (%eax),%al$/;"	l
e4	kernel.asm	/^  e4:	70 61                	jo     147 <memcpy-0xc00ffeb9>$/;"	l
e40	kernel.asm	/^     e40:	00 10                	add    %dl,(%eax)$/;"	l
e40	kernel.asm	/^ e40:	17                   	pop    %ss$/;"	l
e41	kernel.asm	/^     e41:	00 00                	add    %al,(%eax)$/;"	l
e41	kernel.asm	/^ e41:	0b 01                	or     (%ecx),%eax$/;"	l
e42	kernel.asm	/^     e42:	8c 00                	mov    %es,(%eax)$/;"	l
e43	kernel.asm	/^     e43:	92                   	xchg   %eax,%edx$/;"	l
e43	kernel.asm	/^ e43:	55                   	push   %ebp$/;"	l
e44	kernel.asm	/^     e44:	00 00                	add    %al,(%eax)$/;"	l
e44	kernel.asm	/^ e44:	06                   	push   %es$/;"	l
e45	kernel.asm	/^ e45:	00 00                	add    %al,(%eax)$/;"	l
e46	kernel.asm	/^     e46:	00 02                	add    %al,(%edx)$/;"	l
e46	kernel.asm	/^     e46:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
e47	kernel.asm	/^     e47:	0d 00 00 00 00       	or     $0x0,%eax$/;"	l
e47	kernel.asm	/^ e47:	18 34 00             	sbb    %dh,(%eax,%eax,1)$/;"	l
e48	kernel.asm	/^     e48:	00 75 08             	add    %dh,0x8(%ebp)$/;"	l
e4a	kernel.asm	/^ e4a:	31 13                	xor    %edx,(%ebx)$/;"	l
e4b	kernel.asm	/^     e4b:	92                   	xchg   %eax,%edx$/;"	l
e4c	kernel.asm	/^     e4c:	00 00                	add    %al,(%eax)$/;"	l
e4c	kernel.asm	/^     e4c:	00 11                	add    %dl,(%ecx)$/;"	l
e4c	kernel.asm	/^ e4c:	02 06                	add    (%esi),%al$/;"	l
e4e	kernel.asm	/^     e4e:	00 93 00 00 00 02    	add    %dl,0x2000000(%ebx)$/;"	l
e4e	kernel.asm	/^     e4e:	a5                   	movsl  %ds:(%esi),%es:(%edi)$/;"	l
e4e	kernel.asm	/^ e4e:	00 00                	add    %al,(%eax)$/;"	l
e4f	kernel.asm	/^     e4f:	00 00                	add    %al,(%eax)$/;"	l
e5	kernel.asm	/^      e5:	91                   	xchg   %eax,%ecx$/;"	l
e5	kernel.asm	/^  e5:	00 00                	add    %al,(%eax)$/;"	l
e50	kernel.asm	/^ e50:	19 2e                	sbb    %ebp,(%esi)$/;"	l
e51	kernel.asm	/^     e51:	00 55 09             	add    %dl,0x9(%ebp)$/;"	l
e52	kernel.asm	/^ e52:	01 3f                	add    %edi,(%edi)$/;"	l
e54	kernel.asm	/^     e54:	00 74 04 00          	add    %dh,0x0(%esp,%eax,1)$/;"	l
e54	kernel.asm	/^     e54:	10 c0                	adc    %al,%al$/;"	l
e54	kernel.asm	/^ e54:	0c 03                	or     $0x3,%al$/;"	l
e56	kernel.asm	/^     e56:	5d                   	pop    %ebp$/;"	l
e56	kernel.asm	/^ e56:	0e                   	push   %cs$/;"	l
e57	kernel.asm	/^     e57:	09 10                	or     %edx,(%eax)$/;"	l
e57	kernel.asm	/^ e57:	3a 0b                	cmp    (%ebx),%cl$/;"	l
e58	kernel.asm	/^     e58:	00 00                	add    %al,(%eax)$/;"	l
e59	kernel.asm	/^     e59:	c0 01 19             	rolb   $0x19,(%ecx)$/;"	l
e59	kernel.asm	/^ e59:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
e5a	kernel.asm	/^     e5a:	00 00                	add    %al,(%eax)$/;"	l
e5b	kernel.asm	/^ e5b:	27                   	daa    $/;"	l
e5c	kernel.asm	/^     e5c:	00 00                	add    %al,(%eax)$/;"	l
e5c	kernel.asm	/^     e5c:	12 bd 00 00 00 02    	adc    0x2000000(%ebp),%bh$/;"	l
e5c	kernel.asm	/^ e5c:	0c 49                	or     $0x49,%al$/;"	l
e5e	kernel.asm	/^     e5e:	00 06                	add    %al,(%esi)$/;"	l
e5e	kernel.asm	/^ e5e:	13 11                	adc    (%ecx),%edx$/;"	l
e6	kernel.asm	/^      e6:	08 3a                	or     %bh,(%edx)$/;"	l
e6	kernel.asm	/^      e6:	c0 84 00 00 00 2a 01 	rolb   $0x0,0x12a0000(%eax,%eax,1)$/;"	l
e6	kernel.asm	/^  e6:	00 00                	add    %al,(%eax)$/;"	l
e6	kernel.asm	/^  e6:	13 2e                	adc    (%esi),%ebp$/;"	l
e6	kernel.asm	/^  e6:	6e                   	outsb  %ds:(%esi),(%dx)$/;"	l
e6	kernel.asm	/^  e6:	9d                   	popf   $/;"	l
e60	kernel.asm	/^     e60:	00 00                	add    %al,(%eax)$/;"	l
e60	kernel.asm	/^ e60:	01 12                	add    %edx,(%edx)$/;"	l
e62	kernel.asm	/^     e62:	00 0d 00 00 00 02    	add    %cl,0x2000000$/;"	l
e62	kernel.asm	/^     e62:	91                   	xchg   %eax,%ecx$/;"	l
e62	kernel.asm	/^ e62:	01 40 06             	add    %eax,0x6(%eax)$/;"	l
e63	kernel.asm	/^     e63:	00 0e                	add    %cl,(%esi)$/;"	l
e65	kernel.asm	/^     e65:	b2 00                	mov    $0x0,%dl$/;"	l
e65	kernel.asm	/^ e65:	01 13                	add    %edx,(%ebx)$/;"	l
e67	kernel.asm	/^     e67:	00 00                	add    %al,(%eax)$/;"	l
e67	kernel.asm	/^ e67:	00 00                	add    %al,(%eax)$/;"	l
e68	kernel.asm	/^     e68:	00 30                	add    %dh,(%eax)$/;"	l
e69	kernel.asm	/^     e69:	f8                   	clc    $/;"	l
e69	kernel.asm	/^ e69:	1a 34 00             	sbb    (%eax,%eax,1),%dh$/;"	l
e6a	kernel.asm	/^     e6a:	03 00                	add    (%eax),%eax$/;"	l
e6a	kernel.asm	/^     e6a:	9f                   	lahf   $/;"	l
e6b	kernel.asm	/^     e6b:	1f                   	pop    %ds$/;"	l
e6c	kernel.asm	/^     e6c:	00 00                	add    %al,(%eax)$/;"	l
e6c	kernel.asm	/^     e6c:	00 0a                	add    %cl,(%edx)$/;"	l
e6c	kernel.asm	/^ e6c:	03 0e                	add    (%esi),%ecx$/;"	l
e6e	kernel.asm	/^     e6e:	00 41 00             	add    %al,0x0(%ecx)$/;"	l
e6e	kernel.asm	/^     e6e:	01 d2                	add    %edx,%edx$/;"	l
e6e	kernel.asm	/^ e6e:	3a 0b                	cmp    (%ebx),%cl$/;"	l
e7	kernel.asm	/^  e7:	00 21                	add    %ah,(%ecx)$/;"	l
e7	kernel.asm	/^  e7:	13 00                	adc    (%eax),%eax$/;"	l
e7	kernel.asm	/^  e7:	69 63 00 66 69 6c 65 	imul   $0x656c6966,0x0(%ebx),%esp$/;"	l
e70	kernel.asm	/^     e70:	02 00                	add    (%eax),%al$/;"	l
e70	kernel.asm	/^ e70:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
e71	kernel.asm	/^     e71:	00 00                	add    %al,(%eax)$/;"	l
e72	kernel.asm	/^     e72:	00 01                	add    %al,(%ecx)$/;"	l
e72	kernel.asm	/^ e72:	49                   	dec    %ecx$/;"	l
e73	kernel.asm	/^     e73:	01 00                	add    %eax,(%eax)$/;"	l
e73	kernel.asm	/^ e73:	13 3f                	adc    (%edi),%edi$/;"	l
e74	kernel.asm	/^     e74:	07                   	pop    %es$/;"	l
e75	kernel.asm	/^     e75:	01 60 09             	add    %esp,0x9(%eax)$/;"	l
e75	kernel.asm	/^     e75:	50                   	push   %eax$/;"	l
e75	kernel.asm	/^ e75:	0c 02                	or     $0x2,%al$/;"	l
e76	kernel.asm	/^     e76:	42                   	inc    %edx$/;"	l
e77	kernel.asm	/^     e77:	00 00                	add    %al,(%eax)$/;"	l
e77	kernel.asm	/^ e77:	0a 00                	or     (%eax),%al$/;"	l
e78	kernel.asm	/^     e78:	10 c0                	adc    %al,%al$/;"	l
e79	kernel.asm	/^     e79:	00 49 00             	add    %cl,0x0(%ecx)$/;"	l
e79	kernel.asm	/^ e79:	00 00                	add    %al,(%eax)$/;"	l
e7a	kernel.asm	/^     e7a:	9a 09 10 c0 b7 0d 00 	lcall  $0xd,$0xb7c01009$/;"	l
e7b	kernel.asm	/^ e7b:	01 11                	add    %edx,(%ecx)$/;"	l
e7c	kernel.asm	/^     e7c:	00 00                	add    %al,(%eax)$/;"	l
e7d	kernel.asm	/^ e7d:	01 25 0e 13 0b 03    	add    %esp,0x30b130e$/;"	l
e7e	kernel.asm	/^     e7e:	02 00                	add    (%eax),%al$/;"	l
e8	kernel.asm	/^      e8:	00 00                	add    %al,(%eax)$/;"	l
e8	kernel.asm	/^  e8:	01 3f                	add    %edi,(%edi)$/;"	l
e8	kernel.asm	/^  e8:	05 02 b0 01 10       	add    $0x1001b002,%eax$/;"	l
e80	kernel.asm	/^     e80:	30 9f 70 00 00 00    	xor    %bl,0x70(%edi)$/;"	l
e81	kernel.asm	/^     e81:	00 47 02             	add    %al,0x2(%edi)$/;"	l
e83	kernel.asm	/^ e83:	0e                   	push   %cs$/;"	l
e84	kernel.asm	/^     e84:	00 00                	add    %al,(%eax)$/;"	l
e84	kernel.asm	/^ e84:	1b 0e                	sbb    (%esi),%ecx$/;"	l
e86	kernel.asm	/^     e86:	0c a5                	or     $0xa5,%al$/;"	l
e86	kernel.asm	/^     e86:	93                   	xchg   %eax,%ebx$/;"	l
e86	kernel.asm	/^ e86:	11 01                	adc    %eax,(%ecx)$/;"	l
e87	kernel.asm	/^     e87:	00 00                	add    %al,(%eax)$/;"	l
e88	kernel.asm	/^     e88:	00 00                	add    %al,(%eax)$/;"	l
e88	kernel.asm	/^ e88:	12 01                	adc    (%ecx),%al$/;"	l
e89	kernel.asm	/^     e89:	00 01                	add    %al,(%ecx)$/;"	l
e8a	kernel.asm	/^     e8a:	00 61 09             	add    %ah,0x9(%ecx)$/;"	l
e8a	kernel.asm	/^ e8a:	10 06                	adc    %al,(%esi)$/;"	l
e8b	kernel.asm	/^     e8b:	00 52 00             	add    %dl,0x0(%edx)$/;"	l
e8c	kernel.asm	/^ e8c:	00 00                	add    %al,(%eax)$/;"	l
e8d	kernel.asm	/^     e8d:	10 c0                	adc    %al,%al$/;"	l
e8e	kernel.asm	/^     e8e:	00 00                	add    %al,(%eax)$/;"	l
e8e	kernel.asm	/^ e8e:	02 16                	add    (%esi),%dl$/;"	l
e8f	kernel.asm	/^     e8f:	e8 00 00 00 01       	call   1000e94 <memcpy-0xbf0ff16c>$/;"	l
e9	kernel.asm	/^  e9:	00 00                	add    %al,(%eax)$/;"	l
e9	kernel.asm	/^  e9:	00 04 00             	add    %al,(%eax,%eax,1)$/;"	l
e90	kernel.asm	/^     e90:	00 00                	add    %al,(%eax)$/;"	l
e90	kernel.asm	/^ e90:	00 03                	add    %al,(%ebx)$/;"	l
e92	kernel.asm	/^     e92:	00 00                	add    %al,(%eax)$/;"	l
e92	kernel.asm	/^ e92:	0e                   	push   %cs$/;"	l
e93	kernel.asm	/^ e93:	3a 0b                	cmp    (%ebx),%cl$/;"	l
e94	kernel.asm	/^     e94:	00 06                	add    %al,(%esi)$/;"	l
e94	kernel.asm	/^     e94:	08 83 01 00 00 13    	or     %al,0x13000001(%ebx)$/;"	l
e95	kernel.asm	/^ e95:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
e96	kernel.asm	/^     e96:	00 00                	add    %al,(%eax)$/;"	l
e97	kernel.asm	/^ e97:	49                   	dec    %ecx$/;"	l
e98	kernel.asm	/^     e98:	00 41 00             	add    %al,0x0(%ecx)$/;"	l
e98	kernel.asm	/^ e98:	13 00                	adc    (%eax),%eax$/;"	l
e9a	kernel.asm	/^     e9a:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
e9a	kernel.asm	/^ e9a:	00 03                	add    %al,(%ebx)$/;"	l
e9b	kernel.asm	/^     e9b:	00 00                	add    %al,(%eax)$/;"	l
e9c	kernel.asm	/^ e9c:	24 00                	and    $0x0,%al$/;"	l
e9d	kernel.asm	/^     e9d:	01 00                	add    %eax,(%eax)$/;"	l
e9e	kernel.asm	/^ e9e:	0b 0b                	or     (%ebx),%ecx$/;"	l
e9f	kernel.asm	/^     e9f:	0e                   	push   %cs$/;"	l
e9f	kernel.asm	/^     e9f:	52                   	push   %edx$/;"	l
ea	kernel.asm	/^      ea:	00 44 00 00          	add    %al,0x0(%eax,%eax,1)$/;"	l
ea	kernel.asm	/^  ea:	0c 03                	or     $0x3,%al$/;"	l
ea0	kernel.asm	/^     ea0:	b2 00                	mov    $0x0,%dl$/;"	l
ea0	kernel.asm	/^ ea0:	3e 0b 03             	or     %ds:(%ebx),%eax$/;"	l
ea2	kernel.asm	/^     ea2:	00 00                	add    %al,(%eax)$/;"	l
ea3	kernel.asm	/^ ea3:	0e                   	push   %cs$/;"	l
ea4	kernel.asm	/^     ea4:	f9                   	stc    $/;"	l
ea4	kernel.asm	/^ ea4:	00 00                	add    %al,(%eax)$/;"	l
ea5	kernel.asm	/^     ea5:	03 00                	add    (%eax),%eax$/;"	l
ea6	kernel.asm	/^ ea6:	04 24                	add    $0x24,%al$/;"	l
ea7	kernel.asm	/^     ea7:	14 a5                	adc    $0xa5,%al$/;"	l
ea8	kernel.asm	/^     ea8:	06                   	push   %es$/;"	l
ea8	kernel.asm	/^ ea8:	00 0b                	add    %cl,(%ebx)$/;"	l
ea9	kernel.asm	/^     ea9:	00 00                	add    %al,(%eax)$/;"	l
eaa	kernel.asm	/^ eaa:	0b 3e                	or     (%esi),%edi$/;"	l
eab	kernel.asm	/^     eab:	00 49 00             	add    %cl,0x0(%ecx)$/;"	l
eab	kernel.asm	/^     eab:	00 6b 09             	add    %ch,0x9(%ebx)$/;"	l
eac	kernel.asm	/^ eac:	0b 03                	or     (%ebx),%eax$/;"	l
eae	kernel.asm	/^     eae:	00 00                	add    %al,(%eax)$/;"	l
eae	kernel.asm	/^     eae:	10 c0                	adc    %al,%al$/;"	l
eae	kernel.asm	/^ eae:	08 00                	or     %al,(%eax)$/;"	l
eax	include/x86.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame
eb	kernel.asm	/^  eb:	00 26                	add    %ah,(%esi)$/;"	l
eb0	kernel.asm	/^     eb0:	06                   	push   %es$/;"	l
eb0	kernel.asm	/^     eb0:	73 09                	jae    ebb <memcpy-0xc00ff145>$/;"	l
eb0	kernel.asm	/^ eb0:	00 05 13 01 03 0e    	add    %al,0xe030113$/;"	l
eb1	kernel.asm	/^     eb1:	00 03                	add    %al,(%ebx)$/;"	l
eb2	kernel.asm	/^     eb2:	10 c0                	adc    %al,%al$/;"	l
eb3	kernel.asm	/^     eb3:	00 70 44             	add    %dh,0x44(%eax)$/;"	l
eb4	kernel.asm	/^     eb4:	01 09                	add    %ecx,(%ecx)$/;"	l
eb6	kernel.asm	/^     eb6:	00 9f 49 00 00 00    	add    %bl,0x49(%edi)$/;"	l
eb6	kernel.asm	/^     eb6:	a5                   	movsl  %ds:(%esi),%es:(%edi)$/;"	l
eb6	kernel.asm	/^ eb6:	0b 0b                	or     (%ebx),%ecx$/;"	l
eb7	kernel.asm	/^     eb7:	01 00                	add    %eax,(%eax)$/;"	l
eb8	kernel.asm	/^ eb8:	3a 0b                	cmp    (%ebx),%cl$/;"	l
eb9	kernel.asm	/^     eb9:	00 15 bd 00 00 00    	add    %dl,0xbd$/;"	l
eba	kernel.asm	/^ eba:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
ebc	kernel.asm	/^     ebc:	93                   	xchg   %eax,%ebx$/;"	l
ebc	kernel.asm	/^ ebc:	01 13                	add    %edx,(%ebx)$/;"	l
ebd	kernel.asm	/^     ebd:	00 00                	add    %al,(%eax)$/;"	l
ebe	kernel.asm	/^ ebe:	00 00                	add    %al,(%eax)$/;"	l
ebf	kernel.asm	/^     ebf:	00 01                	add    %al,(%ecx)$/;"	l
ebf	kernel.asm	/^     ebf:	80 7f 0e b2          	cmpb   $0xb2,0xe(%edi)$/;"	l
ebp	include/x86.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame
ebx	include/x86.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame
ec	kernel.asm	/^  ec:	00 00                	add    %al,(%eax)$/;"	l
ec	kernel.asm	/^  ec:	0e                   	push   %cs$/;"	l
ec0	kernel.asm	/^ ec0:	06                   	push   %es$/;"	l
ec1	kernel.asm	/^     ec1:	00 51 00             	add    %dl,0x0(%ecx)$/;"	l
ec1	kernel.asm	/^ ec1:	0d 00 03 08 3a       	or     $0x3a080300,%eax$/;"	l
ec3	kernel.asm	/^     ec3:	00 00                	add    %al,(%eax)$/;"	l
ec4	kernel.asm	/^     ec4:	00 00                	add    %al,(%eax)$/;"	l
ec5	kernel.asm	/^     ec5:	00 fb                	add    %bh,%bl$/;"	l
ec6	kernel.asm	/^     ec6:	00 00                	add    %al,(%eax)$/;"	l
ec6	kernel.asm	/^ ec6:	0b 3b                	or     (%ebx),%edi$/;"	l
ec7	kernel.asm	/^     ec7:	03 00                	add    (%eax),%eax$/;"	l
ec8	kernel.asm	/^     ec8:	00 00                	add    %al,(%eax)$/;"	l
ec8	kernel.asm	/^ ec8:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
ec9	kernel.asm	/^     ec9:	14 a5                	adc    $0xa5,%al$/;"	l
eca	kernel.asm	/^     eca:	00 89 00 00 00 8e    	add    %cl,-0x72000000(%ecx)$/;"	l
ecb	kernel.asm	/^     ecb:	00 00                	add    %al,(%eax)$/;"	l
ecb	kernel.asm	/^ ecb:	38 0a                	cmp    %cl,(%edx)$/;"	l
ecd	kernel.asm	/^     ecd:	00 73 09             	add    %dh,0x9(%ebx)$/;"	l
ecd	kernel.asm	/^ ecd:	00 00                	add    %al,(%eax)$/;"	l
ecf	kernel.asm	/^ ecf:	07                   	pop    %es$/;"	l
echo	src/drivers/test.c	/^echo() {$/;"	f
ecx	include/x86.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame
ed	kernel.asm	/^      ed:	00 $/;"	l
ed	kernel.asm	/^  ed:	00 00                	add    %al,(%eax)$/;"	l
ed	kernel.asm	/^  ed:	3a 0b                	cmp    (%ebx),%cl$/;"	l
ed	kernel.asm	/^  ed:	c0 16 04             	rclb   $0x4,(%esi)$/;"	l
ed0	kernel.asm	/^     ed0:	00 00                	add    %al,(%eax)$/;"	l
ed0	kernel.asm	/^     ed0:	10 c0                	adc    %al,%al$/;"	l
ed0	kernel.asm	/^ ed0:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax$/;"	l
ed2	kernel.asm	/^     ed2:	00 0a                	add    %cl,(%edx)$/;"	l
ed2	kernel.asm	/^     ed2:	7b 09                	jnp    edd <memcpy-0xc00ff123>$/;"	l
ed4	kernel.asm	/^     ed4:	00 70 00             	add    %dh,0x0(%eax)$/;"	l
ed4	kernel.asm	/^     ed4:	10 c0                	adc    %al,%al$/;"	l
ed5	kernel.asm	/^ ed5:	0b 3b                	or     (%ebx),%edi$/;"	l
ed6	kernel.asm	/^     ed6:	01 0a                	add    %ecx,(%edx)$/;"	l
ed7	kernel.asm	/^     ed7:	11 80 80 80 80 78    	adc    %eax,0x78808080(%eax)$/;"	l
ed7	kernel.asm	/^ ed7:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
ed8	kernel.asm	/^     ed8:	c6 01 00             	movb   $0x0,(%ecx)$/;"	l
eda	kernel.asm	/^ eda:	38 0a                	cmp    %cl,(%edx)$/;"	l
edb	kernel.asm	/^     edb:	00 13                	add    %dl,(%ebx)$/;"	l
edc	kernel.asm	/^ edc:	00 00                	add    %al,(%eax)$/;"	l
edd	kernel.asm	/^     edd:	21 9f 8e 00 00 00    	and    %ebx,0x8e(%edi)$/;"	l
edd	kernel.asm	/^     edd:	bd 00 00 00 01       	mov    $0x1000000,%ebp$/;"	l
ede	kernel.asm	/^ ede:	08 0f                	or     %cl,(%edi)$/;"	l
edi	include/x86.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame
edx	include/x86.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame
ee	kernel.asm	/^      ee:	00 06                	add    %al,(%esi)$/;"	l
ee	kernel.asm	/^  ee:	00 00                	add    %al,(%eax)$/;"	l
ee	kernel.asm	/^  ee:	00 73 72             	add    %dh,0x72(%ebx)$/;"	l
ee0	kernel.asm	/^ ee0:	00 0b                	add    %cl,(%ebx)$/;"	l
ee2	kernel.asm	/^     ee2:	0e                   	push   %cs$/;"	l
ee2	kernel.asm	/^ ee2:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
ee3	kernel.asm	/^     ee3:	93                   	xchg   %eax,%ebx$/;"	l
ee3	kernel.asm	/^     ee3:	b2 00                	mov    $0x0,%dl$/;"	l
ee4	kernel.asm	/^     ee4:	00 00                	add    %al,(%eax)$/;"	l
ee5	kernel.asm	/^     ee5:	00 00                	add    %al,(%eax)$/;"	l
ee5	kernel.asm	/^ ee5:	00 00                	add    %al,(%eax)$/;"	l
ee6	kernel.asm	/^     ee6:	00 01                	add    %al,(%ecx)$/;"	l
ee7	kernel.asm	/^     ee7:	f8                   	clc    $/;"	l
ee7	kernel.asm	/^ ee7:	09 13                	or     %edx,(%ebx)$/;"	l
ee8	kernel.asm	/^     ee8:	00 50 00             	add    %dl,0x0(%eax)$/;"	l
ee8	kernel.asm	/^     ee8:	03 00                	add    (%eax),%eax$/;"	l
ee9	kernel.asm	/^ ee9:	01 03                	add    %eax,(%ebx)$/;"	l
eea	kernel.asm	/^     eea:	14 a5                	adc    $0xa5,%al$/;"	l
eeb	kernel.asm	/^     eeb:	00 00                	add    %al,(%eax)$/;"	l
eeb	kernel.asm	/^ eeb:	08 0b                	or     %cl,(%ebx)$/;"	l
eec	kernel.asm	/^     eec:	00 00                	add    %al,(%eax)$/;"	l
eed	kernel.asm	/^     eed:	00 00                	add    %al,(%eax)$/;"	l
eed	kernel.asm	/^ eed:	05 3a 0b 3b 0b       	add    $0xb3b0b3a,%eax$/;"	l
eee	kernel.asm	/^     eee:	00 7b 09             	add    %bh,0x9(%ebx)$/;"	l
eef	kernel.asm	/^     eef:	00 00                	add    %al,(%eax)$/;"	l
ef	kernel.asm	/^  ef:	00 28                	add    %ch,(%eax)$/;"	l
ef	kernel.asm	/^  ef:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
ef1	kernel.asm	/^     ef1:	00 a0 00 00 00 bb    	add    %ah,-0x45000000(%eax)$/;"	l
ef1	kernel.asm	/^     ef1:	10 c0                	adc    %al,%al$/;"	l
ef2	kernel.asm	/^ ef2:	01 13                	add    %edx,(%ebx)$/;"	l
ef3	kernel.asm	/^     ef3:	80 09 10             	orb    $0x10,(%ecx)$/;"	l
ef4	kernel.asm	/^ ef4:	00 00                	add    %al,(%eax)$/;"	l
ef6	kernel.asm	/^     ef6:	c0 01 0b             	rolb   $0xb,(%ecx)$/;"	l
ef6	kernel.asm	/^ ef6:	0a 01                	or     (%ecx),%al$/;"	l
ef7	kernel.asm	/^     ef7:	00 00                	add    %al,(%eax)$/;"	l
ef8	kernel.asm	/^ ef8:	01 49 13             	add    %ecx,0x13(%ecx)$/;"	l
ef9	kernel.asm	/^     ef9:	00 02                	add    %al,(%edx)$/;"	l
ef9	kernel.asm	/^     ef9:	e7 01                	out    %eax,$0x1$/;"	l
efb	kernel.asm	/^     efb:	00 00                	add    %al,(%eax)$/;"	l
efb	kernel.asm	/^     efb:	00 74 04 bb          	add    %dh,-0x45(%esp,%eax,1)$/;"	l
efb	kernel.asm	/^ efb:	01 13                	add    %edx,(%ebx)$/;"	l
efd	kernel.asm	/^     efd:	13 bd 00 00 00 00    	adc    0x0(%ebp),%edi$/;"	l
efd	kernel.asm	/^ efd:	00 00                	add    %al,(%eax)$/;"	l
eff	kernel.asm	/^     eff:	00 00                	add    %al,(%eax)$/;"	l
eff	kernel.asm	/^ eff:	0b 21                	or     (%ecx),%esp$/;"	l
eflags	include/x86.h	/^	uint32_t err, eip, cs, eflags; \/\/ Execution state before trap $/;"	m	struct:TrapFrame
ehsize	boot/boot.h	/^	unsigned short ehsize;$/;"	m	struct:ELFHeader
eip	include/x86.h	/^	uint32_t err, eip, cs, eflags; \/\/ Execution state before trap $/;"	m	struct:TrapFrame
elf	boot/boot.h	/^	unsigned char  elf[12];$/;"	m	struct:ELFHeader
empty	src/kernel/main.c	/^Semaphore empty, full, mutex;$/;"	v
entry	boot/boot.h	/^	unsigned int   entry;$/;"	m	struct:ELFHeader
entry	src/kernel/main.c	/^entry(void) {$/;"	f
err	include/x86.h	/^	uint32_t err, eip, cs, eflags; \/\/ Execution state before trap $/;"	m	struct:TrapFrame
es	include/x86.h	/^	uint32_t gs, fs, es, ds;       \/\/ Segment register$/;"	m	struct:TrapFrame
esi	include/x86.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame
esp	include/x86.h	/^	uint32_t esp, ss;              \/\/ Used only when returning to DPL=3$/;"	m	struct:TrapFrame
esp0	include/x86.h	/^	uint32_t esp0;         \/\/ Ring 0 Stack pointer and segment selector$/;"	m	struct:TSS
esp_	include/x86.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame
f	include/driver/tty.h	/^	int i, f, r;$/;"	m	struct:Console
f	kernel.asm	/^   f:	10 06                	adc    %al,(%esi)$/;"	l
f	src/kernel/main.c	/^int buf[NBUF], f = 0, r = 0, g = 1, tid = 1;$/;"	v
f0	kernel.asm	/^      f0:	00 91 08 06 31 1c    	add    %dl,0x1c310608(%ecx)$/;"	l
f0	kernel.asm	/^      f0:	64                   	fs$/;"	l
f0	kernel.asm	/^  f0:	02 03                	add    (%ebx),%al$/;"	l
f0	kernel.asm	/^  f0:	90                   	nop$/;"	l
f01	kernel.asm	/^     f01:	00 c0                	add    %al,%al$/;"	l
f01	kernel.asm	/^ f01:	00 49 13             	add    %cl,0x13(%ecx)$/;"	l
f03	kernel.asm	/^     f03:	00 00                	add    %al,(%eax)$/;"	l
f03	kernel.asm	/^     f03:	0e                   	push   %cs$/;"	l
f04	kernel.asm	/^     f04:	b2 00                	mov    $0x0,%dl$/;"	l
f04	kernel.asm	/^ f04:	2f                   	das    $/;"	l
f05	kernel.asm	/^     f05:	00 02                	add    %al,(%edx)$/;"	l
f05	kernel.asm	/^ f05:	05 00 00 0c 16       	add    $0x160c0000,%eax$/;"	l
f06	kernel.asm	/^     f06:	00 00                	add    %al,(%eax)$/;"	l
f07	kernel.asm	/^     f07:	00 74 08 c0          	add    %dh,-0x40(%eax,%ecx,1)$/;"	l
f08	kernel.asm	/^     f08:	f9                   	stc    $/;"	l
f09	kernel.asm	/^     f09:	03 00                	add    (%eax),%eax$/;"	l
f0a	kernel.asm	/^ f0a:	00 03                	add    %al,(%ebx)$/;"	l
f0b	kernel.asm	/^     f0b:	00 00                	add    %al,(%eax)$/;"	l
f0b	kernel.asm	/^     f0b:	14 a5                	adc    $0xa5,%al$/;"	l
f0c	kernel.asm	/^ f0c:	08 3a                	or     %bh,(%edx)$/;"	l
f0d	kernel.asm	/^     f0d:	00 00                	add    %al,(%eax)$/;"	l
f0d	kernel.asm	/^     f0d:	00 b6 01 00 00 02    	add    %dh,0x2000001(%esi)$/;"	l
f0e	kernel.asm	/^ f0e:	0b 3b                	or     (%ebx),%edi$/;"	l
f0f	kernel.asm	/^     f0f:	00 80 09 10 c0 88    	add    %al,-0x773feff7(%eax)$/;"	l
f1	kernel.asm	/^      f1:	73 74                	jae    167 <memcpy-0xc00ffe99>$/;"	l
f1	kernel.asm	/^  f1:	00 00                	add    %al,(%eax)$/;"	l
f1	kernel.asm	/^  f1:	0b 10                	or     (%eax),%edx$/;"	l
f1	kernel.asm	/^  f1:	27                   	daa    $/;"	l
f1	kernel.asm	/^  f1:	63 2f                	arpl   %bp,(%edi)$/;"	l
f10	kernel.asm	/^ f10:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
f13	kernel.asm	/^     f13:	00 75 08             	add    %dh,0x8(%ebp)$/;"	l
f13	kernel.asm	/^ f13:	00 00                	add    %al,(%eax)$/;"	l
f15	kernel.asm	/^     f15:	09 10                	or     %edx,(%eax)$/;"	l
f15	kernel.asm	/^ f15:	0d 2e 01 03 0e       	or     $0xe03012e,%eax$/;"	l
f16	kernel.asm	/^     f16:	b6 01                	mov    $0x1,%dh$/;"	l
f17	kernel.asm	/^     f17:	c0 01 0c             	rolb   $0xc,(%ecx)$/;"	l
f18	kernel.asm	/^     f18:	00 00                	add    %al,(%eax)$/;"	l
f1a	kernel.asm	/^     f1a:	08 02                	or     %al,(%edx)$/;"	l
f1a	kernel.asm	/^     f1a:	b7 01                	mov    $0x1,%bh$/;"	l
f1a	kernel.asm	/^ f1a:	3a 0b                	cmp    (%ebx),%cl$/;"	l
f1c	kernel.asm	/^     f1c:	00 00                	add    %al,(%eax)$/;"	l
f1c	kernel.asm	/^ f1c:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
f1e	kernel.asm	/^     f1e:	02 00                	add    (%eax),%al$/;"	l
f1e	kernel.asm	/^     f1e:	13 bd 00 00 00 03    	adc    0x3000000(%ebp),%edi$/;"	l
f1e	kernel.asm	/^ f1e:	27                   	daa    $/;"	l
f1f	kernel.asm	/^ f1f:	0c 20                	or     $0x20,%al$/;"	l
f2	kernel.asm	/^  f2:	0c 49                	or     $0x49,%al$/;"	l
f2	kernel.asm	/^  f2:	9b                   	fwait$/;"	l
f20	kernel.asm	/^     f20:	74 04                	je     f26 <memcpy-0xc00ff0da>$/;"	l
f21	kernel.asm	/^ f21:	0b 01                	or     (%ecx),%eax$/;"	l
f23	kernel.asm	/^ f23:	13 00                	adc    (%eax),%eax$/;"	l
f24	kernel.asm	/^     f24:	0e                   	push   %cs$/;"	l
f25	kernel.asm	/^     f25:	b2 00                	mov    $0x0,%dl$/;"	l
f25	kernel.asm	/^ f25:	00 0e                	add    %cl,(%esi)$/;"	l
f27	kernel.asm	/^     f27:	00 00                	add    %al,(%eax)$/;"	l
f27	kernel.asm	/^ f27:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax$/;"	l
f29	kernel.asm	/^     f29:	fb                   	sti    $/;"	l
f2a	kernel.asm	/^     f2a:	03 00                	add    (%eax),%eax$/;"	l
f2c	kernel.asm	/^     f2c:	14 a5                	adc    $0xa5,%al$/;"	l
f2c	kernel.asm	/^ f2c:	0b 3b                	or     (%ebx),%edi$/;"	l
f2e	kernel.asm	/^     f2e:	00 00                	add    %al,(%eax)$/;"	l
f2e	kernel.asm	/^     f2e:	01 00                	add    %eax,(%eax)$/;"	l
f2e	kernel.asm	/^ f2e:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
f3	kernel.asm	/^      f3:	00 01                	add    %al,(%ecx)$/;"	l
f3	kernel.asm	/^  f3:	00 2b                	add    %ch,(%ebx)$/;"	l
f3	kernel.asm	/^  f3:	01 66 04             	add    %esp,0x4(%esi)$/;"	l
f3	kernel.asm	/^  f3:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
f3	kernel.asm	/^  f3:	c0                   	(bad)  $/;"	l
f30	kernel.asm	/^     f30:	00 00                	add    %al,(%eax)$/;"	l
f30	kernel.asm	/^     f30:	00 88 09 10 c0 90    	add    %cl,-0x6f3feff7(%eax)$/;"	l
f31	kernel.asm	/^ f31:	00 00                	add    %al,(%eax)$/;"	l
f32	kernel.asm	/^     f32:	02 00                	add    (%eax),%al$/;"	l
f33	kernel.asm	/^ f33:	0f 34                	sysenter $/;"	l
f34	kernel.asm	/^     f34:	74 04                	je     f3a <memcpy-0xc00ff0c6>$/;"	l
f35	kernel.asm	/^ f35:	00 03                	add    %al,(%ebx)$/;"	l
f36	kernel.asm	/^     f36:	01 00                	add    %eax,(%eax)$/;"	l
f36	kernel.asm	/^     f36:	09 10                	or     %edx,(%eax)$/;"	l
f37	kernel.asm	/^ f37:	0e                   	push   %cs$/;"	l
f38	kernel.asm	/^     f38:	00 00                	add    %al,(%eax)$/;"	l
f38	kernel.asm	/^     f38:	c0 01 0d             	rolb   $0xd,(%ecx)$/;"	l
f38	kernel.asm	/^ f38:	3a 0b                	cmp    (%ebx),%cl$/;"	l
f3a	kernel.asm	/^     f3a:	03 00                	add    (%eax),%eax$/;"	l
f3a	kernel.asm	/^ f3a:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
f3b	kernel.asm	/^     f3b:	29 02                	sub    %eax,(%edx)$/;"	l
f3c	kernel.asm	/^     f3c:	00 00                	add    %al,(%eax)$/;"	l
f3c	kernel.asm	/^ f3c:	49                   	dec    %ecx$/;"	l
f3d	kernel.asm	/^     f3d:	00 00                	add    %al,(%eax)$/;"	l
f3d	kernel.asm	/^ f3d:	13 00                	adc    (%eax),%eax$/;"	l
f3e	kernel.asm	/^     f3e:	02 00                	add    (%eax),%al$/;"	l
f3f	kernel.asm	/^     f3f:	15 bd 00 00 00       	adc    $0xbd,%eax$/;"	l
f3f	kernel.asm	/^ f3f:	00 10                	add    %dl,(%eax)$/;"	l
f4	kernel.asm	/^  f4:	13 11                	adc    (%ecx),%edx$/;"	l
f4	kernel.asm	/^  f4:	69 62 2f 61 62 6f 72 	imul   $0x726f6261,0x2f(%edx),%esp$/;"	l
f4	kernel.asm	/^  f4:	76 04                	jbe    fa <memcpy-0xc00fff06>$/;"	l
f40	kernel.asm	/^     f40:	74 08                	je     f4a <memcpy-0xc00ff0b6>$/;"	l
f41	kernel.asm	/^ f41:	2e 01 3f             	add    %edi,%cs:(%edi)$/;"	l
f42	kernel.asm	/^     f42:	03 00                	add    (%eax),%eax$/;"	l
f44	kernel.asm	/^     f44:	00 00                	add    %al,(%eax)$/;"	l
f44	kernel.asm	/^     f44:	47                   	inc    %edi$/;"	l
f44	kernel.asm	/^ f44:	0c 03                	or     $0x3,%al$/;"	l
f45	kernel.asm	/^     f45:	0e                   	push   %cs$/;"	l
f46	kernel.asm	/^     f46:	a9 01 00 00 02       	test   $0x2000001,%eax$/;"	l
f46	kernel.asm	/^     f46:	b2 00                	mov    $0x0,%dl$/;"	l
f46	kernel.asm	/^ f46:	0e                   	push   %cs$/;"	l
f47	kernel.asm	/^ f47:	3a 0b                	cmp    (%ebx),%cl$/;"	l
f48	kernel.asm	/^     f48:	00 00                	add    %al,(%eax)$/;"	l
f49	kernel.asm	/^ f49:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
f4a	kernel.asm	/^     f4a:	fa                   	cli    $/;"	l
f4b	kernel.asm	/^     f4b:	00 75 08             	add    %dh,0x8(%ebp)$/;"	l
f4b	kernel.asm	/^     f4b:	03 00                	add    (%eax),%eax$/;"	l
f4b	kernel.asm	/^ f4b:	27                   	daa    $/;"	l
f4c	kernel.asm	/^ f4c:	0c 49                	or     $0x49,%al$/;"	l
f4d	kernel.asm	/^     f4d:	11 a5 00 00 00 90    	adc    %esp,-0x70000000(%ebp)$/;"	l
f4e	kernel.asm	/^ f4e:	13 11                	adc    (%ecx),%edx$/;"	l
f5	kernel.asm	/^      f5:	11 c9                	adc    %ecx,%ecx$/;"	l
f50	kernel.asm	/^ f50:	01 12                	add    %edx,(%edx)$/;"	l
f52	kernel.asm	/^ f52:	01 40 06             	add    %eax,0x6(%eax)$/;"	l
f53	kernel.asm	/^     f53:	09 10                	or     %edx,(%eax)$/;"	l
f55	kernel.asm	/^     f55:	c0 98 09 10 c0 01 0e 	rcrb   $0xe,0x1c01009(%eax)$/;"	l
f55	kernel.asm	/^ f55:	01 13                	add    %edx,(%ebx)$/;"	l
f56	kernel.asm	/^     f56:	13 00                	adc    (%eax),%eax$/;"	l
f57	kernel.asm	/^ f57:	00 00                	add    %al,(%eax)$/;"	l
f58	kernel.asm	/^     f58:	00 00                	add    %al,(%eax)$/;"	l
f59	kernel.asm	/^ f59:	11 05 00 03 0e 3a    	adc    %eax,0x3a0e0300$/;"	l
f5a	kernel.asm	/^     f5a:	20 00                	and    %al,(%eax)$/;"	l
f5c	kernel.asm	/^     f5c:	00 00                	add    %al,(%eax)$/;"	l
f5c	kernel.asm	/^     f5c:	13 bd 00 00 00 0b    	adc    0xb000000(%ebp),%edi$/;"	l
f5e	kernel.asm	/^     f5e:	05 00 03 00 20       	add    $0x20000300,%eax$/;"	l
f5f	kernel.asm	/^ f5f:	0b 3b                	or     (%ebx),%edi$/;"	l
f6	kernel.asm	/^      f6:	9f                   	lahf   $/;"	l
f6	kernel.asm	/^  f6:	01 03                	add    %eax,(%ebx)$/;"	l
f6	kernel.asm	/^  f6:	01 12                	add    %edx,(%edx)$/;"	l
f61	kernel.asm	/^ f61:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
f62	kernel.asm	/^     f62:	0e                   	push   %cs$/;"	l
f63	kernel.asm	/^     f63:	10 c0                	adc    %al,%al$/;"	l
f63	kernel.asm	/^     f63:	b2 00                	mov    $0x0,%dl$/;"	l
f64	kernel.asm	/^ f64:	02 0a                	add    (%edx),%cl$/;"	l
f65	kernel.asm	/^     f65:	00 00                	add    %al,(%eax)$/;"	l
f65	kernel.asm	/^     f65:	20 00                	and    %al,(%eax)$/;"	l
f66	kernel.asm	/^ f66:	00 00                	add    %al,(%eax)$/;"	l
f67	kernel.asm	/^     f67:	00 00                	add    %al,(%eax)$/;"	l
f67	kernel.asm	/^     f67:	fc                   	cld    $/;"	l
f68	kernel.asm	/^     f68:	03 00                	add    (%eax),%eax$/;"	l
f68	kernel.asm	/^ f68:	12 34 00             	adc    (%eax,%eax,1),%dh$/;"	l
f69	kernel.asm	/^     f69:	a9 01 00 00 01       	test   $0x1000001,%eax$/;"	l
f6a	kernel.asm	/^     f6a:	00 16                	add    %dl,(%esi)$/;"	l
f6b	kernel.asm	/^ f6b:	03 08                	add    (%eax),%ecx$/;"	l
f6c	kernel.asm	/^     f6c:	01 15 03 00 00 01    	add    %edx,0x1000003$/;"	l
f6d	kernel.asm	/^ f6d:	3a 0b                	cmp    (%ebx),%cl$/;"	l
f6e	kernel.asm	/^     f6e:	00 53 00             	add    %dl,0x0(%ebx)$/;"	l
f6f	kernel.asm	/^ f6f:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
f7	kernel.asm	/^      f7:	00 00                	add    %al,(%eax)$/;"	l
f71	kernel.asm	/^     f71:	00 00                	add    %al,(%eax)$/;"	l
f71	kernel.asm	/^ f71:	49                   	dec    %ecx$/;"	l
f72	kernel.asm	/^     f72:	1f                   	pop    %ds$/;"	l
f72	kernel.asm	/^ f72:	13 02                	adc    (%edx),%eax$/;"	l
f73	kernel.asm	/^     f73:	00 00                	add    %al,(%eax)$/;"	l
f73	kernel.asm	/^     f73:	01 2c 00             	add    %ebp,(%eax,%eax,1)$/;"	l
f74	kernel.asm	/^ f74:	06                   	push   %es$/;"	l
f75	kernel.asm	/^     f75:	00 00                	add    %al,(%eax)$/;"	l
f75	kernel.asm	/^ f75:	00 00                	add    %al,(%eax)$/;"	l
f76	kernel.asm	/^     f76:	00 00                	add    %al,(%eax)$/;"	l
f77	kernel.asm	/^     f77:	00 b0 01 00 00 b1    	add    %dh,-0x4effffff(%eax)$/;"	l
f77	kernel.asm	/^ f77:	13 0f                	adc    (%edi),%ecx$/;"	l
f78	kernel.asm	/^     f78:	a0 09 10 c0 c2       	mov    0xc2c01009,%al$/;"	l
f79	kernel.asm	/^ f79:	00 0b                	add    %cl,(%ebx)$/;"	l
f7b	kernel.asm	/^ f7b:	0b 00                	or     (%eax),%eax$/;"	l
f7d	kernel.asm	/^     f7d:	01 00                	add    %eax,(%eax)$/;"	l
f7d	kernel.asm	/^     f7d:	09 10                	or     %edx,(%eax)$/;"	l
f7d	kernel.asm	/^ f7d:	00 14 2e             	add    %dl,(%esi,%ebp,1)$/;"	l
f7f	kernel.asm	/^     f7f:	00 02                	add    %al,(%edx)$/;"	l
f7f	kernel.asm	/^     f7f:	c0 ef 0d             	shr    $0xd,%bh$/;"	l
f8	kernel.asm	/^  f8:	01 40 06             	add    %eax,0x6(%eax)$/;"	l
f8	kernel.asm	/^  f8:	e7 7e                	out    %eax,$0x7e$/;"	l
f80	kernel.asm	/^ f80:	01 3f                	add    %edi,(%edi)$/;"	l
f81	kernel.asm	/^     f81:	00 74 04 b1          	add    %dh,-0x4f(%esp,%eax,1)$/;"	l
f82	kernel.asm	/^     f82:	00 00                	add    %al,(%eax)$/;"	l
f82	kernel.asm	/^ f82:	0c 03                	or     $0x3,%al$/;"	l
f84	kernel.asm	/^     f84:	83 02 00             	addl   $0x0,(%edx)$/;"	l
f84	kernel.asm	/^ f84:	0e                   	push   %cs$/;"	l
f85	kernel.asm	/^     f85:	01 00                	add    %eax,(%eax)$/;"	l
f85	kernel.asm	/^ f85:	3a 0b                	cmp    (%ebx),%cl$/;"	l
f87	kernel.asm	/^     f87:	00 0b                	add    %cl,(%ebx)$/;"	l
f87	kernel.asm	/^     f87:	00 b3 01 00 00 02    	add    %dh,0x2000001(%ebx)$/;"	l
f87	kernel.asm	/^ f87:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
f89	kernel.asm	/^     f89:	66 6d                	insw   (%dx),%es:(%edi)$/;"	l
f89	kernel.asm	/^ f89:	27                   	daa    $/;"	l
f8a	kernel.asm	/^ f8a:	0c 11                	or     $0x11,%al$/;"	l
f8b	kernel.asm	/^     f8b:	74 00                	je     f8d <memcpy-0xc00ff073>$/;"	l
f8c	kernel.asm	/^ f8c:	01 12                	add    %edx,(%edx)$/;"	l
f8d	kernel.asm	/^     f8d:	00 74 08 b3          	add    %dh,-0x4d(%eax,%ecx,1)$/;"	l
f8d	kernel.asm	/^     f8d:	01 1f                	add    %ebx,(%edi)$/;"	l
f8e	kernel.asm	/^ f8e:	01 40 06             	add    %eax,0x6(%eax)$/;"	l
f8f	kernel.asm	/^     f8f:	83 02 00             	addl   $0x0,(%edx)$/;"	l
f9	kernel.asm	/^      f9:	00 bc 00 00 00 0c 76 	add    %bh,0x760c0000(%eax,%eax,1)$/;"	l
f91	kernel.asm	/^     f91:	01 00                	add    %eax,(%eax)$/;"	l
f91	kernel.asm	/^ f91:	01 13                	add    %edx,(%ebx)$/;"	l
f92	kernel.asm	/^     f92:	00 02                	add    %al,(%edx)$/;"	l
f93	kernel.asm	/^     f93:	00 41 03             	add    %al,0x3(%ecx)$/;"	l
f93	kernel.asm	/^ f93:	00 00                	add    %al,(%eax)$/;"	l
f94	kernel.asm	/^     f94:	91                   	xchg   %eax,%ecx$/;"	l
f95	kernel.asm	/^     f95:	00 17                	add    %dl,(%edi)$/;"	l
f95	kernel.asm	/^ f95:	15 1d 01 31 13       	adc    $0x1331011d,%eax$/;"	l
f96	kernel.asm	/^     f96:	00 00                	add    %al,(%eax)$/;"	l
f97	kernel.asm	/^     f97:	18 c5                	sbb    %al,%ch$/;"	l
f98	kernel.asm	/^     f98:	02 00                	add    (%eax),%al$/;"	l
f99	kernel.asm	/^     f99:	02 00                	add    (%eax),%al$/;"	l
f9a	kernel.asm	/^     f9a:	75 08                	jne    fa4 <memcpy-0xc00ff05c>$/;"	l
f9a	kernel.asm	/^ f9a:	52                   	push   %edx$/;"	l
f9b	kernel.asm	/^     f9b:	00 01                	add    %al,(%ecx)$/;"	l
f9b	kernel.asm	/^ f9b:	01 55 06             	add    %edx,0x6(%ebp)$/;"	l
f9d	kernel.asm	/^     f9d:	20 8e 02 00 00 03    	and    %cl,0x3000002(%esi)$/;"	l
f9e	kernel.asm	/^ f9e:	58                   	pop    %eax$/;"	l
f9f	kernel.asm	/^ f9f:	0b 59 0b             	or     0xb(%ecx),%ebx$/;"	l
fa	kernel.asm	/^  fa:	20 04 02             	and    %al,(%edx,%eax,1)$/;"	l
fa2	kernel.asm	/^ fa2:	00 00                	add    %al,(%eax)$/;"	l
fa3	kernel.asm	/^     fa3:	91                   	xchg   %eax,%ecx$/;"	l
fa4	kernel.asm	/^     fa4:	04 9f                	add    $0x9f,%al$/;"	l
fa4	kernel.asm	/^     fa4:	50                   	push   %eax$/;"	l
fa4	kernel.asm	/^ fa4:	16                   	push   %ss$/;"	l
fa5	kernel.asm	/^     fa5:	03 00                	add    (%eax),%eax$/;"	l
fa5	kernel.asm	/^ fa5:	05 00 31 13 02       	add    $0x2133100,%eax$/;"	l
fa6	kernel.asm	/^     fa6:	00 19                	add    %bl,(%ecx)$/;"	l
fa7	kernel.asm	/^     fa7:	00 51 03             	add    %dl,0x3(%ecx)$/;"	l
fa8	kernel.asm	/^     fa8:	04 89                	add    $0x89,%al$/;"	l
faa	kernel.asm	/^     faa:	00 00                	add    %al,(%eax)$/;"	l
faa	kernel.asm	/^     faa:	02 00                	add    (%eax),%al$/;"	l
faa	kernel.asm	/^ faa:	0a 00                	or     (%eax),%al$/;"	l
fac	kernel.asm	/^     fac:	00 1a                	add    %bl,(%edx)$/;"	l
fac	kernel.asm	/^     fac:	02 00                	add    (%eax),%al$/;"	l
fac	kernel.asm	/^ fac:	00 17                	add    %dl,(%edi)$/;"	l
fae	kernel.asm	/^     fae:	5e                   	pop    %esi$/;"	l
fae	kernel.asm	/^     fae:	74 04                	je     fb4 <memcpy-0xc00ff04c>$/;"	l
fae	kernel.asm	/^ fae:	05 00 31 13 00       	add    $0x133100,%eax$/;"	l
faf	kernel.asm	/^     faf:	00 00                	add    %al,(%eax)$/;"	l
fb	kernel.asm	/^  fb:	00 00                	add    %al,(%eax)$/;"	l
fb	kernel.asm	/^  fb:	74 2e                	je     12b <memcpy-0xc00ffed5>$/;"	l
fb0	kernel.asm	/^     fb0:	51                   	push   %ecx$/;"	l
fb1	kernel.asm	/^     fb1:	00 19                	add    %bl,(%ecx)$/;"	l
fb1	kernel.asm	/^     fb1:	03 00                	add    (%eax),%eax$/;"	l
fb3	kernel.asm	/^     fb3:	00 53 03             	add    %dl,0x3(%ebx)$/;"	l
fb3	kernel.asm	/^     fb3:	04 94                	add    $0x94,%al$/;"	l
fb3	kernel.asm	/^ fb3:	00 18                	add    %bl,(%eax)$/;"	l
fb5	kernel.asm	/^     fb5:	02 00                	add    (%eax),%al$/;"	l
fb5	kernel.asm	/^ fb5:	05 00 31 13 02       	add    $0x2133100,%eax$/;"	l
fb6	kernel.asm	/^     fb6:	00 00                	add    %al,(%eax)$/;"	l
fb7	kernel.asm	/^     fb7:	00 1b                	add    %bl,(%ebx)$/;"	l
fb8	kernel.asm	/^     fb8:	02 00                	add    (%eax),%al$/;"	l
fb9	kernel.asm	/^     fb9:	04 00                	add    $0x0,%al$/;"	l
fba	kernel.asm	/^     fba:	74 08                	je     fc4 <memcpy-0xc00ff03c>$/;"	l
fba	kernel.asm	/^ fba:	06                   	push   %es$/;"	l
fbb	kernel.asm	/^     fbb:	de 03                	fiadd  (%ebx)$/;"	d
fbb	kernel.asm	/^ fbb:	00 00                	add    %al,(%eax)$/;"	l
fbc	kernel.asm	/^     fbc:	53                   	push   %ebx$/;"	l
fbd	kernel.asm	/^     fbd:	00 00                	add    %al,(%eax)$/;"	l
fbd	kernel.asm	/^     fbd:	03 00                	add    (%eax),%eax$/;"	l
fbd	kernel.asm	/^ fbd:	19 0b                	sbb    %ecx,(%ebx)$/;"	l
fbf	kernel.asm	/^     fbf:	00 1f                	add    %bl,(%edi)$/;"	l
fbf	kernel.asm	/^     fbf:	02 00                	add    (%eax),%al$/;"	l
fbf	kernel.asm	/^ fbf:	01 55 06             	add    %edx,0x6(%ebp)$/;"	l
fc1	kernel.asm	/^     fc1:	04 00                	add    $0x0,%al$/;"	l
fc1	kernel.asm	/^     fc1:	ea 06 00 00 04 01 8c 	ljmp   $0x8c01,$0x4000006$/;"	l
fc2	kernel.asm	/^ fc2:	00 00                	add    %al,(%eax)$/;"	l
fc3	kernel.asm	/^     fc3:	00 02                	add    %al,(%edx)$/;"	l
fc4	kernel.asm	/^ fc4:	1a 34 00             	sbb    (%eax,%eax,1),%dh$/;"	l
fc5	kernel.asm	/^     fc5:	00 75 08             	add    %dh,0x8(%ebp)$/;"	l
fc7	kernel.asm	/^ fc7:	31 13                	xor    %edx,(%ebx)$/;"	l
fc8	kernel.asm	/^     fc8:	00 00                	add    %al,(%eax)$/;"	l
fc8	kernel.asm	/^     fc8:	1f                   	pop    %ds$/;"	l
fc9	kernel.asm	/^     fc9:	04 00                	add    $0x0,%al$/;"	l
fc9	kernel.asm	/^ fc9:	02 06                	add    (%esi),%al$/;"	l
fca	kernel.asm	/^     fca:	00 01                	add    %al,(%ecx)$/;"	l
fcb	kernel.asm	/^     fcb:	00 20                	add    %ah,(%eax)$/;"	l
fcb	kernel.asm	/^ fcb:	00 00                	add    %al,(%eax)$/;"	l
fcc	kernel.asm	/^     fcc:	41                   	inc    %ecx$/;"	l
fcd	kernel.asm	/^     fcd:	03 00                	add    (%eax),%eax$/;"	l
fcd	kernel.asm	/^     fcd:	04 00                	add    $0x0,%al$/;"	l
fcd	kernel.asm	/^ fcd:	1b 34 00             	sbb    (%eax,%eax,1),%esi$/;"	l
fcf	kernel.asm	/^     fcf:	00 02                	add    %al,(%edx)$/;"	l
fcf	kernel.asm	/^     fcf:	00 55 00             	add    %dl,0x0(%ebp)$/;"	l
fd	kernel.asm	/^  fd:	00 00                	add    %al,(%eax)$/;"	l
fd	kernel.asm	/^  fd:	00 01                	add    %al,(%ecx)$/;"	l
fd	kernel.asm	/^  fd:	03 9f 01 08 90 04    	add    0x4900801(%edi),%ebx$/;"	l
fd	kernel.asm	/^  fd:	63 00                	arpl   %ax,(%eax)$/;"	l
fd0	kernel.asm	/^ fd0:	03 0e                	add    (%esi),%ecx$/;"	l
fd1	kernel.asm	/^     fd1:	00 74 04 00          	add    %dh,0x0(%esp,%eax,1)$/;"	l
fd2	kernel.asm	/^     fd2:	00 00                	add    %al,(%eax)$/;"	l
fd2	kernel.asm	/^ fd2:	3a 0b                	cmp    (%ebx),%cl$/;"	l
fd4	kernel.asm	/^     fd4:	d0 09                	rorb   (%ecx)$/;"	d
fd4	kernel.asm	/^ fd4:	3b 0b                	cmp    (%ebx),%ecx$/;"	l
fd5	kernel.asm	/^     fd5:	00 00                	add    %al,(%eax)$/;"	l
fd6	kernel.asm	/^     fd6:	10 c0                	adc    %al,%al$/;"	l
fd6	kernel.asm	/^ fd6:	49                   	dec    %ecx$/;"	l
fd7	kernel.asm	/^     fd7:	00 00                	add    %al,(%eax)$/;"	l
fd7	kernel.asm	/^ fd7:	13 3f                	adc    (%edi),%edi$/;"	l
fd8	kernel.asm	/^     fd8:	87 0b                	xchg   %ecx,(%ebx)$/;"	l
fd9	kernel.asm	/^     fd9:	00 00                	add    %al,(%eax)$/;"	l
fd9	kernel.asm	/^ fd9:	0c 3c                	or     $0x3c,%al$/;"	l
fda	kernel.asm	/^     fda:	10 c0                	adc    %al,%al$/;"	l
fdb	kernel.asm	/^     fdb:	00 20                	add    %ah,(%eax)$/;"	l
fdb	kernel.asm	/^ fdb:	0c 00                	or     $0x0,%al$/;"	l
fdc	kernel.asm	/^     fdc:	07                   	pop    %es$/;"	l
fdd	kernel.asm	/^     fdd:	04 00                	add    $0x0,%al$/;"	l
fdd	kernel.asm	/^     fdd:	05 00 00 02 06       	add    $0x6020000,%eax$/;"	l
fdd	kernel.asm	/^ fdd:	00 1c 34             	add    %bl,(%esp,%esi,1)$/;"	l
fdf	kernel.asm	/^     fdf:	00 21                	add    %ah,(%ecx)$/;"	l
fe	kernel.asm	/^  fe:	00 00                	add    %al,(%eax)$/;"	l
fe0	kernel.asm	/^ fe0:	00 03                	add    %al,(%ebx)$/;"	l
fe1	kernel.asm	/^     fe1:	04 00                	add    $0x0,%al$/;"	l
fe2	kernel.asm	/^     fe2:	00 00                	add    %al,(%eax)$/;"	l
fe2	kernel.asm	/^ fe2:	08 3a                	or     %bh,(%edx)$/;"	l
fe3	kernel.asm	/^     fe3:	00 02                	add    %al,(%edx)$/;"	l
fe4	kernel.asm	/^     fe4:	00 03                	add    %al,(%ebx)$/;"	l
fe4	kernel.asm	/^ fe4:	0b 3b                	or     (%ebx),%edi$/;"	l
fe5	kernel.asm	/^     fe5:	00 74 04 21          	add    %dh,0x21(%esp,%eax,1)$/;"	l
fe6	kernel.asm	/^     fe6:	04 30                	add    $0x30,%al$/;"	l
fe6	kernel.asm	/^ fe6:	0b 49 13             	or     0x13(%ecx),%ecx$/;"	l
fe8	kernel.asm	/^     fe8:	00 00                	add    %al,(%eax)$/;"	l
fe9	kernel.asm	/^     fe9:	04 00                	add    $0x0,%al$/;"	l
fe9	kernel.asm	/^ fe9:	3f                   	aas    $/;"	l
fea	kernel.asm	/^     fea:	00 03                	add    %al,(%ebx)$/;"	l
fea	kernel.asm	/^ fea:	0c 02                	or     $0x2,%al$/;"	l
feb	kernel.asm	/^     feb:	00 23                	add    %ah,(%ebx)$/;"	l
fec	kernel.asm	/^     fec:	04 07                	add    $0x7,%al$/;"	l
fec	kernel.asm	/^ fec:	0a 00                	or     (%eax),%al$/;"	l
fed	kernel.asm	/^     fed:	04 00                	add    $0x0,%al$/;"	l
fee	kernel.asm	/^     fee:	9e                   	sahf   $/;"	l
fef	kernel.asm	/^     fef:	00 00                	add    %al,(%eax)$/;"	l
fef	kernel.asm	/^     fef:	00 02                	add    %al,(%edx)$/;"	l
ff	kernel.asm	/^      ff:	60                   	pusha  $/;"	l
ff	kernel.asm	/^  ff:	00 b5 00 00 00 ba    	add    %dh,-0x46000000(%ebp)$/;"	l
ff	kernel.asm	/^  ff:	11 01                	adc    %eax,(%ecx)$/;"	l
ff	kernel.asm	/^  ff:	6c                   	insb   (%dx),%es:(%edi)$/;"	l
ff1	kernel.asm	/^     ff1:	00 04 04             	add    %al,(%esp,%eax,1)$/;"	l
ff1	kernel.asm	/^     ff1:	00 74 08 23          	add    %dh,0x23(%eax,%ecx,1)$/;"	l
ff4	kernel.asm	/^     ff4:	05 69 6e 74 00       	add    $0x746e69,%eax$/;"	l
ff5	kernel.asm	/^     ff5:	04 00                	add    $0x0,%al$/;"	l
ff7	kernel.asm	/^     ff7:	00 5b 04             	add    %bl,0x4(%ebx)$/;"	l
ff9	kernel.asm	/^     ff9:	02 1c 03             	add    (%ebx,%eax,1),%bl$/;"	l
ffa	kernel.asm	/^     ffa:	00 00                	add    %al,(%eax)$/;"	l
ffc	kernel.asm	/^     ffc:	00 00                	add    %al,(%eax)$/;"	l
ffc	kernel.asm	/^     ffc:	02 00                	add    (%eax),%al$/;"	l
ffe	kernel.asm	/^     ffe:	03 06                	add    (%esi),%eax$/;"	l
ffe	kernel.asm	/^     ffe:	75 08                	jne    1008 <memcpy-0xc00feff8>$/;"	l
filesz	boot/boot.h	/^	unsigned int filesz;$/;"	m	struct:ProgramHeader
flags	boot/boot.h	/^	unsigned int   flags;$/;"	m	struct:ELFHeader
flags	boot/boot.h	/^	unsigned int flags;$/;"	m	struct:ProgramHeader
free	src/drivers/hal.c	/^static ListHead free, devices;$/;"	v	file:
free	src/lib/malloc.c	/^free(void * fp){$/;"	f
fs	include/x86.h	/^	uint32_t gs, fs, es, ds;       \/\/ Segment register$/;"	m	struct:TrapFrame
full	src/kernel/main.c	/^Semaphore empty, full, mutex;$/;"	v
g	include/x86.h	/^	uint32_t g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:SegDesc
g	src/kernel/main.c	/^int buf[NBUF], f = 0, r = 0, g = 1, tid = 1;$/;"	v
gdt	boot/start.S	/^gdt:$/;"	l
gdt	src/kernel/vm/kvm.c	/^SegDesc gdt[NR_SEG];                   \/\/ the new GDT$/;"	v
gdtdesc	boot/start.S	/^gdtdesc:                           # GDT描述符$/;"	l
get_bucket	src/lib/malloc.c	/^get_bucket(uint32_t x){$/;"	f
get_cooked	src/drivers/tty/console.c	/^get_cooked(Console *c, char *buf, int count) {$/;"	f
get_cr0	include/x86.h	/^get_cr0(void) {$/;"	f
get_time	src/drivers/time/timer.c	/^void get_time(Time *tm) {$/;"	f
gs	include/x86.h	/^	uint32_t gs, fs, es, ds;       \/\/ Segment register$/;"	m	struct:TrapFrame
h	include/driver/tty.h	/^	int w, h, wh;$/;"	m	struct:Console
hal_get	src/drivers/hal.c	/^Device *hal_get(const char *name) {$/;"	f
hal_list	src/drivers/hal.c	/^void hal_list(void) {$/;"	f
hal_register	src/drivers/hal.c	/^void hal_register(const char *name, pid_t pid, int dev_id) {$/;"	f
header	include/driver/hal.h	/^	Message header; \/\/ header与Message的头部定义保持一致即可(src, dst, type)$/;"	m	struct:DevMessage
hour	include/driver/time.h	/^	int hour, minute, second;$/;"	m	struct:Time
i	include/driver/tty.h	/^	int i, f, r;$/;"	m	struct:Console
idt	src/kernel/irq/idt.c	/^struct GateDesc idt[NR_IRQ];$/;"	v	typeref:struct:GateDesc
in_byte	boot/boot.h	/^in_byte(short port) {$/;"	f
in_byte	include/x86.h	/^in_byte(uint16_t port) {$/;"	f
in_long	boot/boot.h	/^in_long(short port) {$/;"	f
in_long	include/x86.h	/^in_long(uint16_t port) {$/;"	f
init_consl	src/drivers/tty/console.c	/^init_consl(Console *c, uint16_t *vbuf) {$/;"	f	file:
init_console	src/drivers/tty/console.c	/^void init_console(void) {$/;"	f
init_debug	src/lib/debug.c	/^init_debug(void) {$/;"	f
init_hal	src/drivers/hal.c	/^void init_hal(void) {$/;"	f
init_i8253	src/drivers/time/timer.c	/^void init_i8253(void) {$/;"	f
init_i8259	src/kernel/irq/i8259.c	/^void init_i8259(void) {$/;"	f
init_idt	src/kernel/irq/idt.c	/^init_idt(void) {$/;"	f
init_kvm	src/kernel/vm/kvm.c	/^init_kvm(void) { \/\/ setup kernel memory mapping$/;"	f
init_seg	src/kernel/vm/kvm.c	/^init_seg() { \/\/ setup kernel segements$/;"	f
init_timer	src/drivers/time/timer.c	/^void init_timer(void) {$/;"	f
init_tty	src/drivers/tty/tty.c	/^void init_tty(void) {$/;"	f
int16_t	include/types.h	/^typedef          short int16_t;$/;"	t
int32_t	include/types.h	/^typedef          int   int32_t;$/;"	t
int8_t	include/types.h	/^typedef          char  int8_t;$/;"	t
interrupt_flag	include/process.h	/^    boolean interrupt_flag;$/;"	m	struct:PCB
irq	include/x86.h	/^	int      irq;                  \/\/ # of irq$/;"	m	struct:TrapFrame
irq_handle	src/kernel/irq/irq_handle.c	/^void irq_handle(TrapFrame *tf) {$/;"	f
itoa	src/lib/string.c	/^itoa(int value, int base) {$/;"	f
itoa_buf	src/lib/string.c	/^itoa_buf(int value, char *buf, int base) {$/;"	f
jiffy	src/drivers/time/timer.c	/^long jiffy = 0;$/;"	v
kernel	kernel.asm	/^kernel:     file format elf32-i386$/;"	l
keychar	src/drivers/tty/keyboard.c	/^int keychar[2][128] = {$/;"	v
kstack	include/process.h	/^    uint8_t kstack[KSTACK_SIZE];$/;"	m	struct:PCB
lbuf	include/driver/tty.h	/^	char lbuf[LBUF_SZ + 1];$/;"	m	struct:Console
lf	src/drivers/tty/console.c	/^lf(Console *c) {$/;"	f	file:
lim_15_0	include/x86.h	/^	uint32_t lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:SegDesc
lim_19_16	include/x86.h	/^	uint32_t lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:SegDesc
link	include/x86.h	/^	uint32_t link;         \/\/ Unused$/;"	m	struct:TSS
list	include/driver/hal.h	/^	ListHead list;$/;"	m	struct:Device
list_add	include/adt/list.h	/^list_add(ListHead *prev, ListHead *next, ListHead *data) {$/;"	f
list_add_after	include/adt/list.h	/^list_add_after(ListHead *list, ListHead *data) {$/;"	f
list_add_before	include/adt/list.h	/^list_add_before(ListHead *list, ListHead *data) {$/;"	f
list_del	include/adt/list.h	/^list_del(ListHead *data) {$/;"	f
list_empty	include/adt/list.h	/^list_empty(ListHead *list) {$/;"	f
list_entry	include/adt/list.h	11;"	d
list_foreach	include/adt/list.h	52;"	d
list_init	include/adt/list.h	/^list_init(ListHead *list) {$/;"	f
lock	src/lib/sync.c	/^lock(void){$/;"	f
lock_count	include/process.h	/^    int32_t lock_count,pid;$/;"	m	struct:PCB
machine	boot/boot.h	/^	unsigned short machine;$/;"	m	struct:ELFHeader
magic	boot/boot.h	/^	unsigned int   magic;$/;"	m	struct:ELFHeader
malloc	src/lib/malloc.c	/^malloc(uint32_t nbyte){$/;"	f
md	src/drivers/time/timer.c	/^static int md(int year, int month) {$/;"	f	file:
memcpy	src/lib/string.c	/^memcpy(void *dst, const void *src, size_t count) {$/;"	f
memset	src/lib/string.c	/^memset(void *dst, int val, size_t count) {$/;"	f
memsz	boot/boot.h	/^	unsigned int memsz;$/;"	m	struct:ProgramHeader
min_page	src/lib/malloc.c	24;"	d	file:
minute	include/driver/time.h	/^	int hour, minute, second;$/;"	m	struct:Time
month	include/driver/time.h	/^	int year, month, day;$/;"	m	struct:Time
movl	src/drivers/tty/console.c	/^movl(Console *c) {$/;"	f	file:
movr	src/drivers/tty/console.c	/^movr(Console *c) {$/;"	f	file:
mutex	src/kernel/main.c	/^Semaphore empty, full, mutex;$/;"	v
name	include/driver/hal.h	/^	const char *name;$/;"	m	struct:Device
name	include/driver/tty.h	/^	const char *name;$/;"	m	struct:Console
new_sem	src/lib/sync.c	/^new_sem(Semaphore *sem , int value){$/;"	f
next	include/adt/list.h	/^	struct ListHead *prev, *next;$/;"	m	struct:ListHead	typeref:struct:ListHead::
next	src/drivers/tty/console.c	/^next(Console *c) {$/;"	f	file:
next_process	src/process/schedule.c	/^next_process(void){$/;"	f
nextf	src/lib/malloc.c	/^static overhead * nextf[MAXBUCKET];$/;"	v	file:
nmalloc	src/lib/malloc.c	/^static uint32_t nmalloc[MAXBUCKET];$/;"	v	file:
num_page	src/lib/malloc.c	22;"	d	file:
off	boot/boot.h	/^	unsigned int off;$/;"	m	struct:ProgramHeader
off_15_0	include/x86.h	/^	uint32_t off_15_0 : 16;   \/\/ Low 16 bits of offset in segment$/;"	m	struct:GateDesc
off_31_16	include/x86.h	/^	uint32_t off_31_16 : 16;  \/\/ High bits of offset in segment$/;"	m	struct:GateDesc
off_t	include/types.h	/^typedef int32_t off_t;$/;"	t
offset	include/driver/hal.h	/^	off_t offset;$/;"	m	struct:DevMessage
os_init	src/kernel/main.c	/^os_init(void) {$/;"	f
out_byte	boot/boot.h	/^out_byte(short port, char data) {$/;"	f
out_byte	include/x86.h	/^out_byte(uint16_t port, uint8_t data) {$/;"	f
out_long	include/x86.h	/^out_long(uint16_t port, uint32_t data) {$/;"	f
ov_bucket	include/malloc.h	12;"	d
ov_magic	include/malloc.h	11;"	d
ov_next	include/malloc.h	/^    union overhead * ov_next;$/;"	m	union:overhead	typeref:union:overhead::overhead
overhead	include/malloc.h	/^typedef union overhead{$/;"	u
overhead	include/malloc.h	/^}overhead;$/;"	t	typeref:union:overhead
ovu	include/malloc.h	/^    }ovu;$/;"	m	union:overhead	typeref:struct:overhead::__anon1
ovu_bucket	include/malloc.h	/^       uint32_t ovu_bucket ;$/;"	m	struct:overhead::__anon1
ovu_magic	include/malloc.h	/^       uint8_t  ovu_magic;$/;"	m	struct:overhead::__anon1
p	include/x86.h	/^	uint32_t p : 1;           \/\/ Present$/;"	m	struct:GateDesc
p	include/x86.h	/^	uint32_t p : 1;          \/\/ Present$/;"	m	struct:SegDesc
pa_to_va	include/vm.h	8;"	d
paddr	boot/boot.h	/^	unsigned int paddr;$/;"	m	struct:ProgramHeader
page_init	src/lib/malloc.c	/^page_init(void){$/;"	f
page_inited	src/lib/malloc.c	/^static boolean page_inited = FALSE;$/;"	v	file:
panic	src/lib/abort.c	/^panic(const char *str) {$/;"	f
payload	include/message.h	/^    char payload[MSG_SZ];$/;"	m	struct:Message
phentsize	boot/boot.h	/^	unsigned short phentsize;$/;"	m	struct:ELFHeader
phnum	boot/boot.h	/^	unsigned short phnum;$/;"	m	struct:ELFHeader
phoff	boot/boot.h	/^	unsigned int   phoff;$/;"	m	struct:ELFHeader
pid	include/driver/hal.h	/^	pid_t pid;$/;"	m	struct:Device
pid	include/process.h	/^    int32_t lock_count,pid;$/;"	m	struct:PCB
pid	src/process/thread.c	/^int pid = 0;$/;"	v
pid_t	include/types.h	/^typedef int32_t  pid_t;$/;"	t
pool	src/lib/malloc.c	/^uint8_t pool[((sum_page_size << min_page) + MAXBUCKET * sizeof(overhead)) * num_page];$/;"	v
pos	include/driver/tty.h	/^	int size, pos;$/;"	m	struct:Console
prev	include/adt/list.h	/^	struct ListHead *prev, *next;$/;"	m	struct:ListHead	typeref:struct:ListHead::ListHead
printk	src/lib/debug.c	/^printk(const char *fmt, ...) {$/;"	f
put_onechar	src/lib/vfprintf.c	12;"	d	file:
put_string	src/lib/vfprintf.c	14;"	d	file:
putc	src/drivers/tty/console.c	/^putc(Console *c, char ch) {$/;"	f	file:
queue	include/sync.h	/^    ListHead queue;$/;"	m	struct:Semaphore
queue_init	src/process/schedule.c	/^queue_init(void){$/;"	f
r	include/driver/tty.h	/^	int i, f, r;$/;"	m	struct:Console
r	src/kernel/main.c	/^int buf[NBUF], f = 0, r = 0, g = 1, tid = 1;$/;"	v
read_request	src/drivers/tty/console.c	/^read_request(DevMessage *m) {$/;"	f
read_rtc	src/drivers/time/timer.c	/^int read_rtc(int reg) {$/;"	f
readf	include/x86.h	/^readf(void) {$/;"	f
readkey	src/drivers/tty/keyboard.c	/^readkey(void) {$/;"	f
readsect	boot/main.c	/^readsect(void *dst, int offset) {$/;"	f
readseg	boot/main.c	/^readseg(unsigned char *pa, int count, int offset) {$/;"	f
removec	src/drivers/tty/console.c	/^removec(Console *c) {$/;"	f	file:
rstk	include/driver/tty.h	/^	Message rstk[RSTK_SZ];$/;"	m	struct:Console
rsv1	include/x86.h	/^	uint32_t rsv1 : 1;       \/\/ Reserved$/;"	m	struct:SegDesc
rsv1	include/x86.h	/^	uint32_t rsv1 : 3;        \/\/ Reserved(should be zero I guess)$/;"	m	struct:GateDesc
rt	src/drivers/time/timer.c	/^static Time rt;$/;"	v	file:
rtop	include/driver/tty.h	/^	int rtop;$/;"	m	struct:Console
runq	src/process/schedule.c	/^ListHead runq;$/;"	v
s	include/x86.h	/^	uint32_t s : 1;           \/\/ Must be 0 (system)$/;"	m	struct:GateDesc
s	include/x86.h	/^	uint32_t s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:SegDesc
schedule	src/process/schedule.c	/^schedule(void){$/;"	f
scr	include/driver/tty.h	/^	uint16_t *scr;$/;"	m	struct:Console
scrup	src/drivers/tty/console.c	/^scrup(Console *c) {$/;"	f	file:
second	include/driver/time.h	/^	int hour, minute, second;$/;"	m	struct:Time
semq	include/process.h	/^    ListHead semq , block;$/;"	m	struct:PCB
send_keymsg	src/drivers/tty/keyboard.c	/^send_keymsg(void) {$/;"	f
send_updatemsg	src/drivers/tty/console.c	/^send_updatemsg(void) {$/;"	f	file:
serial_idle	src/lib/debug.c	/^serial_idle(void) {$/;"	f	file:
serial_printc	src/lib/debug.c	/^serial_printc(char ch) {$/;"	f
set_cr0	include/x86.h	/^set_cr0(uint32_t cr0) {$/;"	f
set_cr3	include/x86.h	/^set_cr3(void *pdir) {$/;"	f
set_gdt	include/x86.h	/^set_gdt(SegDesc *gdt, uint32_t size) {$/;"	f
set_idt	include/x86.h	/^set_idt(GateDesc *idt, uint32_t size) {$/;"	f
set_tr	include/x86.h	/^set_tr(uint16_t selector) {$/;"	f
shentsize	boot/boot.h	/^	unsigned short shentsize;$/;"	m	struct:ELFHeader
shft	src/drivers/tty/keyboard.c	/^static int caps, ctrl, alt, shft;$/;"	v	file:
shnum	boot/boot.h	/^	unsigned short shnum;$/;"	m	struct:ELFHeader
shoff	boot/boot.h	/^	unsigned int   shoff;$/;"	m	struct:ELFHeader
shstrndx	boot/boot.h	/^	unsigned short shstrndx;$/;"	m	struct:ELFHeader
size	include/driver/tty.h	/^	int size, pos;$/;"	m	struct:Console
size_t	include/types.h	/^typedef uint32_t size_t;$/;"	t
sleep	src/process/thread.c	/^sleep(void){$/;"	f
src	include/message.h	/^    pid_t src,dest;$/;"	m	struct:Message
ss	include/x86.h	/^	uint32_t esp, ss;              \/\/ Used only when returning to DPL=3$/;"	m	struct:TrapFrame
ss0	include/x86.h	/^	uint32_t ss0;$/;"	m	struct:TSS
start	boot/start.S	/^start:$/;"	l
start32	boot/start.S	/^start32:$/;"	l
step	src/lib/malloc.c	26;"	d	file:
sti	include/x86.h	/^sti(void) {$/;"	f
sum_page_size	src/lib/malloc.c	23;"	d	file:
test	src/drivers/test.c	/^test() {$/;"	f
test_consumer	src/kernel/main.c	/^test_consumer(void) {$/;"	f
test_producer	src/kernel/main.c	/^test_producer(void) {$/;"	f
test_setup	src/kernel/main.c	/^test_setup(void) {$/;"	f
tf	include/process.h	/^    TrapFrame *tf;$/;"	m	struct:PCB
tid	src/kernel/main.c	/^int buf[NBUF], f = 0, r = 0, g = 1, tid = 1;$/;"	v
tolower	src/lib/string.c	/^tolower(int ch) {$/;"	f
toupper	src/lib/string.c	/^toupper(int ch) {$/;"	f
trap	src/kernel/irq/do_irq.S	/^trap:$/;"	l
tsc	src/drivers/tty/banner.c	/^static int tsc = 0;$/;"	v	file:
tss	src/kernel/vm/kvm.c	/^TSS tss;                               \/\/ one TSS for all ring 3 processes$/;"	v
ttyd	src/drivers/tty/ttyd.c	/^ttyd(void) {$/;"	f
ttynames	src/drivers/tty/console.c	/^const char *ttynames[NR_TTY] = {"tty1", "tty2", "tty3", "tty4"};$/;"	v
ttys	src/drivers/tty/console.c	/^Console ttys[NR_TTY];$/;"	v
type	boot/boot.h	/^	unsigned int type;$/;"	m	struct:ProgramHeader
type	boot/boot.h	/^	unsigned short type;$/;"	m	struct:ELFHeader
type	include/message.h	/^    int32_t type;$/;"	m	struct:Message
type	include/x86.h	/^	uint32_t type : 4;        \/\/ Type(STS_{TG,IG32,TG32})$/;"	m	struct:GateDesc
type	include/x86.h	/^	uint32_t type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:SegDesc
uint16_t	include/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	include/types.h	/^typedef unsigned int   uint32_t;$/;"	t
uint8_t	include/types.h	/^typedef unsigned char  uint8_t;$/;"	t
unlock	src/lib/sync.c	/^unlock(void){$/;"	f
update_banner	src/drivers/tty/banner.c	/^void update_banner(void) {$/;"	f
update_jiffy	src/drivers/time/timer.c	/^void update_jiffy(void) {$/;"	f
update_sched	src/drivers/time/timer.c	/^void update_sched(void) {$/;"	f
utoa	src/lib/string.c	/^utoa(unsigned int value, int base) {$/;"	f
utoa_buf	src/lib/string.c	/^utoa_buf(unsigned int value, char *buf, int base) {$/;"	f
va_args	include/stdarg.h	7;"	d
va_to_pa	include/vm.h	7;"	d
vaddr	boot/boot.h	/^	unsigned int vaddr;$/;"	m	struct:ProgramHeader
vbuf	include/driver/tty.h	/^	uint16_t *vbuf;$/;"	m	struct:Console
vbuf	src/drivers/tty/console.c	/^static uint16_t vbuf[NR_TTY][SCR_W * SCR_H * 2];$/;"	v	file:
version	boot/boot.h	/^	unsigned int   version;$/;"	m	struct:ELFHeader
vfprintf	src/lib/vfprintf.c	/^vfprintf(void (*putchar_func)(char), const char *format, void **data) {$/;"	f
vmem	src/drivers/tty/console.c	/^static uint16_t *vmem = (void*)pa_to_va(0xb8000);$/;"	v	file:
w	include/driver/tty.h	/^	int w, h, wh;$/;"	m	struct:Console
wait_intr	include/x86.h	/^wait_intr() {$/;"	f
waitdisk	boot/main.c	/^waitdisk(void) {$/;"	f
wakeup	src/process/thread.c	/^wakeup(PCB *pcb_to_wake){$/;"	f
wh	include/driver/tty.h	/^	int w, h, wh;$/;"	m	struct:Console
year	include/driver/time.h	/^	int year, month, day;$/;"	m	struct:Time
