!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ASFLAGS	Makefile	/^ASFLAGS = -m32 -MD -I.\/include$/;"	m
CC	Makefile	/^CC      = gcc$/;"	m
CFILES	Makefile	/^CFILES  = $(shell find src\/ -name "*.c")$/;"	m
CFLAGS	Makefile	/^CFLAGS  = -m32 -static -ggdb -MD -Wall -Werror -I.\/include -O2 \\$/;"	m
CR0_PE	include/x86.h	23;"	d
CR0_PG	include/x86.h	24;"	d
DPL_KERN	include/x86.h	5;"	d
DPL_USER	include/x86.h	6;"	d
Disassembly	kernel.asm	/^Disassembly of section .text:$/;"	l
ELFHeader	boot/boot.h	/^struct ELFHeader {$/;"	s
FALSE	include/const.h	5;"	d
FL_IF	include/x86.h	20;"	d
FL_TF	include/x86.h	19;"	d
GATE	include/x86.h	126;"	d
GDT_ENTRY	boot/asm.h	2;"	d
GateDesc	include/x86.h	/^struct GateDesc {$/;"	s
GateDesc	include/x86.h	/^typedef struct GateDesc GateDesc;$/;"	t	typeref:struct:GateDesc
KOFFSET	include/vm.h	4;"	d
KSEL	include/x86.h	52;"	d
KSTACK_SIZE	include/process.h	8;"	d
LD	Makefile	/^LD      = ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -melf_i386$/;"	m
ListHead	include/adt/list.h	/^struct ListHead {$/;"	s
ListHead	include/adt/list.h	/^typedef struct ListHead ListHead;$/;"	t	typeref:struct:ListHead
MAGIC	include/malloc.h	8;"	d
MAXBUCKET	include/malloc.h	9;"	d
MEM_MAX	include/vm.h	5;"	d
NR_IRQ	include/x86.h	56;"	d
NR_PDE	include/x86.h	28;"	d
NR_PTE	include/x86.h	29;"	d
NR_SEG	include/x86.h	44;"	d
NULL	include/const.h	7;"	d
OBJS	Makefile	/^OBJS    = $(CFILES:.c=.o) $(SFILES:.S=.o)$/;"	m
OFF	include/x86.h	73;"	d
PCB	include/process.h	/^typedef struct PCB {$/;"	s
PCB	include/process.h	/^}PCB;$/;"	t	typeref:struct:PCB
PDE	include/x86.h	/^typedef uint32_t PDE;$/;"	t
PDX	include/x86.h	71;"	d
PDXSHFT	include/x86.h	32;"	d
PGADDR	include/x86.h	76;"	d
PGROUNDDOWN	include/x86.h	79;"	d
PGROUNDUP	include/x86.h	78;"	d
PGSHFT	include/x86.h	30;"	d
PG_ALIGN	src/kernel/vm/kvm.c	/^PDE kpdir[NR_PDE] PG_ALIGN;            \/\/ the kernel page directory$/;"	v
PG_ALIGN	src/kernel/vm/kvm.c	/^PTE kptab[MEM_MAX \/ PG_SIZE] PG_ALIGN; \/\/ the kernel page tables$/;"	v
PG_ALIGN	src/kernel/vm/kvm.c	5;"	d	file:
PG_SIZE	include/x86.h	27;"	d
PORT_PIC_MS	kernel.asm	/^#define PORT_PIC_MS    0x20$/;"	d
PORT_PIC_MS	src/kernel/irq/i8259.c	3;"	d	file:
PORT_PIC_SL	kernel.asm	/^#define PORT_PIC_SL    0xA0$/;"	d
PORT_PIC_SL	src/kernel/irq/i8259.c	4;"	d	file:
PTE	include/x86.h	/^typedef uint32_t PTE;$/;"	t
PTE	kernel.asm	/^PTE kptab[MEM_MAX \/ PG_SIZE] PG_ALIGN; \/\/ the kernel page tables$/;"	l
PTE_A	include/x86.h	40;"	d
PTE_ADDR	include/x86.h	82;"	d
PTE_D	include/x86.h	41;"	d
PTE_P	include/x86.h	35;"	d
PTE_PCD	include/x86.h	39;"	d
PTE_PWT	include/x86.h	38;"	d
PTE_U	include/x86.h	37;"	d
PTE_W	include/x86.h	36;"	d
PTX	include/x86.h	72;"	d
PTXSHFT	include/x86.h	31;"	d
ProgramHeader	boot/boot.h	/^struct ProgramHeader {$/;"	s
QEMU	Makefile	/^QEMU    = qemu-system-i386$/;"	m
SECTSIZE	boot/main.c	14;"	d	file:
SEG	include/x86.h	102;"	d
SEG16	include/x86.h	107;"	d
SEG_ASM	boot/asm.h	9;"	d
SEG_KCODE	include/x86.h	45;"	d
SEG_KDATA	include/x86.h	46;"	d
SEG_NULLASM	boot/asm.h	5;"	d
SEG_TSS	include/x86.h	49;"	d
SEG_UCODE	include/x86.h	47;"	d
SEG_UDATA	include/x86.h	48;"	d
SERIAL_PORT	kernel.asm	/^#define SERIAL_PORT  0x3F8$/;"	d
SERIAL_PORT	src/lib/debug.c	4;"	d	file:
SFILES	Makefile	/^SFILES  = $(shell find src\/ -name "*.S")$/;"	m
STA_R	include/x86.h	11;"	d
STA_W	include/x86.h	10;"	d
STA_X	include/x86.h	9;"	d
STS_IG32	include/x86.h	15;"	d
STS_T32A	include/x86.h	14;"	d
STS_TG32	include/x86.h	16;"	d
SegDesc	include/x86.h	/^struct SegDesc {$/;"	s
SegDesc	include/x86.h	/^typedef struct SegDesc SegDesc;$/;"	t	typeref:struct:SegDesc
SegDesc	kernel.asm	/^SegDesc gdt[NR_SEG];                   \/\/ the new GDT$/;"	l
TRUE	include/const.h	4;"	d
TSS	include/x86.h	/^struct TSS {$/;"	s
TSS	include/x86.h	/^typedef struct TSS TSS;$/;"	t	typeref:struct:TSS
TSS	kernel.asm	/^TSS tss;                               \/\/ one TSS for all ring 3 processes$/;"	l
TrapFrame	include/x86.h	/^struct TrapFrame {$/;"	s
TrapFrame	include/x86.h	/^typedef struct TrapFrame TrapFrame;$/;"	t	typeref:struct:TrapFrame
USEL	include/x86.h	53;"	d
VA_TO_PA	boot/main.c	15;"	d	file:
__ASSERT_H__	include/assert.h	2;"	d
__COMMON_H__	include/common.h	2;"	d
__CONST_H__	include/const.h	2;"	d
__DEBUG_H__	include/debug.h	2;"	d
__IRQ_H__	include/irq.h	2;"	d
__KERNEL_H__	include/kernel.h	2;"	d
__LIST_H__	include/adt/list.h	2;"	d
__MALLOC_H_	include/malloc.h	2;"	d
__PROCESS_H_	include/process.h	2;"	d
__STDARG_H_	include/stdarg.h	2;"	d
__STRING_H__	include/string.h	2;"	d
__THREAD_H_	include/thread.h	2;"	d
__TYPES_H__	include/types.h	2;"	d
__VM_H__	include/vm.h	2;"	d
__X86_H__	include/x86.h	2;"	d
__va_rounded_size	include/stdarg.h	4;"	d
abort	src/lib/abort.c	/^abort(const char *file, int line) {$/;"	f
align	boot/boot.h	/^	unsigned int align;$/;"	m	struct:ProgramHeader
args	include/x86.h	/^	uint32_t args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:GateDesc
assert	include/assert.h	6;"	d
avl	include/x86.h	/^	uint32_t avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:SegDesc
base_15_0	include/x86.h	/^	uint32_t base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:SegDesc
base_23_16	include/x86.h	/^	uint32_t base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:SegDesc
base_31_24	include/x86.h	/^	uint32_t base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:SegDesc
boolean	include/types.h	/^typedef unsigned char  boolean;$/;"	t
bootmain	boot/main.c	/^bootmain(void) {$/;"	f
buf	kernel.asm	/^	buf = utoa_buf(value, buf + 1, base);$/;"	d
buf	kernel.asm	/^        buf = *format++;$/;"	d
buf_str	kernel.asm	/^                      buf_str = itoa(buf_int,10);put_string;break;$/;"	d
buf_str	kernel.asm	/^                      buf_str = utoa(buf_unsigned_int,16);put_string;break;$/;"	d
c0100000	kernel.asm	/^c0100000 <memcpy>:$/;"	l
c0100000	kernel.asm	/^c0100000:	55                   	push   %ebp$/;"	l
c0100001	kernel.asm	/^c0100001:	89 e5                	mov    %esp,%ebp$/;"	l
c0100003	kernel.asm	/^c0100003:	56                   	push   %esi$/;"	l
c0100004	kernel.asm	/^c0100004:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100007	kernel.asm	/^c0100007:	53                   	push   %ebx$/;"	l
c0100008	kernel.asm	/^c0100008:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
c010000b	kernel.asm	/^c010000b:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
c010000e	kernel.asm	/^c010000e:	85 db                	test   %ebx,%ebx$/;"	l
c0100010	kernel.asm	/^c0100010:	74 14                	je     c0100026 <memcpy+0x26>$/;"	l
c0100012	kernel.asm	/^c0100012:	31 d2                	xor    %edx,%edx$/;"	l
c0100014	kernel.asm	/^c0100014:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100018	kernel.asm	/^c0100018:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx$/;"	l
c010001c	kernel.asm	/^c010001c:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
c010001f	kernel.asm	/^c010001f:	83 c2 01             	add    $0x1,%edx$/;"	l
c0100022	kernel.asm	/^c0100022:	39 da                	cmp    %ebx,%edx$/;"	l
c0100024	kernel.asm	/^c0100024:	75 f2                	jne    c0100018 <memcpy+0x18>$/;"	l
c0100026	kernel.asm	/^c0100026:	5b                   	pop    %ebx$/;"	l
c0100027	kernel.asm	/^c0100027:	5e                   	pop    %esi$/;"	l
c0100028	kernel.asm	/^c0100028:	5d                   	pop    %ebp$/;"	l
c0100029	kernel.asm	/^c0100029:	c3                   	ret    $/;"	l
c010002a	kernel.asm	/^c010002a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0100030	kernel.asm	/^c0100030 <memset>:$/;"	l
c0100030	kernel.asm	/^c0100030:	55                   	push   %ebp$/;"	l
c0100031	kernel.asm	/^c0100031:	89 e5                	mov    %esp,%ebp$/;"	l
c0100033	kernel.asm	/^c0100033:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0100036	kernel.asm	/^c0100036:	53                   	push   %ebx$/;"	l
c0100037	kernel.asm	/^c0100037:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010003a	kernel.asm	/^c010003a:	85 d2                	test   %edx,%edx$/;"	l
c010003c	kernel.asm	/^c010003c:	74 14                	je     c0100052 <memset+0x22>$/;"	l
c010003e	kernel.asm	/^c010003e:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
c0100042	kernel.asm	/^c0100042:	89 c1                	mov    %eax,%ecx$/;"	l
c0100044	kernel.asm	/^c0100044:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100048	kernel.asm	/^c0100048:	88 19                	mov    %bl,(%ecx)$/;"	l
c010004a	kernel.asm	/^c010004a:	83 c1 01             	add    $0x1,%ecx$/;"	l
c010004d	kernel.asm	/^c010004d:	83 ea 01             	sub    $0x1,%edx$/;"	l
c0100050	kernel.asm	/^c0100050:	75 f6                	jne    c0100048 <memset+0x18>$/;"	l
c0100052	kernel.asm	/^c0100052:	5b                   	pop    %ebx$/;"	l
c0100053	kernel.asm	/^c0100053:	5d                   	pop    %ebp$/;"	l
c0100054	kernel.asm	/^c0100054:	c3                   	ret    $/;"	l
c0100055	kernel.asm	/^c0100055:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100059	kernel.asm	/^c0100059:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
c0100060	kernel.asm	/^c0100060 <utoa_buf>:$/;"	l
c0100060	kernel.asm	/^c0100060:	55                   	push   %ebp$/;"	l
c0100061	kernel.asm	/^c0100061:	89 e5                	mov    %esp,%ebp$/;"	l
c0100063	kernel.asm	/^c0100063:	56                   	push   %esi$/;"	l
c0100064	kernel.asm	/^c0100064:	53                   	push   %ebx$/;"	l
c0100065	kernel.asm	/^c0100065:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0100068	kernel.asm	/^c0100068:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
c010006b	kernel.asm	/^c010006b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010006e	kernel.asm	/^c010006e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
c0100071	kernel.asm	/^c0100071:	8d 53 fe             	lea    -0x2(%ebx),%edx$/;"	l
c0100074	kernel.asm	/^c0100074:	83 fa 0e             	cmp    $0xe,%edx$/;"	l
c0100077	kernel.asm	/^c0100077:	77 27                	ja     c01000a0 <utoa_buf+0x40>$/;"	l
c0100079	kernel.asm	/^c0100079:	8d 4e 22             	lea    0x22(%esi),%ecx$/;"	l
c010007c	kernel.asm	/^c010007c:	c6 46 22 00          	movb   $0x0,0x22(%esi)$/;"	l
c0100080	kernel.asm	/^c0100080:	31 d2                	xor    %edx,%edx$/;"	l
c0100082	kernel.asm	/^c0100082:	83 e9 01             	sub    $0x1,%ecx$/;"	l
c0100085	kernel.asm	/^c0100085:	f7 f3                	div    %ebx$/;"	l
c0100087	kernel.asm	/^c0100087:	0f b6 92 05 0c 10 c0 	movzbl -0x3feff3fb(%edx),%edx$/;"	l
c010008e	kernel.asm	/^c010008e:	85 c0                	test   %eax,%eax$/;"	l
c0100090	kernel.asm	/^c0100090:	88 11                	mov    %dl,(%ecx)$/;"	l
c0100092	kernel.asm	/^c0100092:	75 ec                	jne    c0100080 <utoa_buf+0x20>$/;"	l
c0100094	kernel.asm	/^c0100094:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100097	kernel.asm	/^c0100097:	89 c8                	mov    %ecx,%eax$/;"	l
c0100099	kernel.asm	/^c0100099:	5b                   	pop    %ebx$/;"	l
c010009a	kernel.asm	/^c010009a:	5e                   	pop    %esi$/;"	l
c010009b	kernel.asm	/^c010009b:	5d                   	pop    %ebp$/;"	l
c010009c	kernel.asm	/^c010009c:	c3                   	ret    $/;"	l
c010009d	kernel.asm	/^c010009d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c01000a0	kernel.asm	/^c01000a0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01000a3	kernel.asm	/^c01000a3:	c7 44 24 04 2b 00 00 	movl   $0x2b,0x4(%esp)$/;"	l
c01000aa	kernel.asm	/^c01000aa:	00 $/;"	l
c01000ab	kernel.asm	/^c01000ab:	c7 04 24 f4 0b 10 c0 	movl   $0xc0100bf4,(%esp)$/;"	l
c01000b2	kernel.asm	/^c01000b2:	e8 f9 00 00 00       	call   c01001b0 <abort>$/;"	l
c01000b7	kernel.asm	/^c01000b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01000ba	kernel.asm	/^c01000ba:	eb bd                	jmp    c0100079 <utoa_buf+0x19>$/;"	l
c01000bc	kernel.asm	/^c01000bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c01000c0	kernel.asm	/^c01000c0 <itoa_buf>:$/;"	l
c01000c0	kernel.asm	/^c01000c0:	55                   	push   %ebp$/;"	l
c01000c1	kernel.asm	/^c01000c1:	89 e5                	mov    %esp,%ebp$/;"	l
c01000c3	kernel.asm	/^c01000c3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01000c6	kernel.asm	/^c01000c6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01000c9	kernel.asm	/^c01000c9:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c01000cc	kernel.asm	/^c01000cc:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01000cf	kernel.asm	/^c01000cf:	83 c1 01             	add    $0x1,%ecx$/;"	l
c01000d2	kernel.asm	/^c01000d2:	85 c0                	test   %eax,%eax$/;"	l
c01000d4	kernel.asm	/^c01000d4:	78 12                	js     c01000e8 <itoa_buf+0x28>$/;"	l
c01000d6	kernel.asm	/^c01000d6:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c01000d9	kernel.asm	/^c01000d9:	89 4d 0c             	mov    %ecx,0xc(%ebp)$/;"	l
c01000dc	kernel.asm	/^c01000dc:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
c01000df	kernel.asm	/^c01000df:	c9                   	leave  $/;"	l
c01000e0	kernel.asm	/^c01000e0:	e9 7b ff ff ff       	jmp    c0100060 <utoa_buf>$/;"	l
c01000e5	kernel.asm	/^c01000e5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c01000e8	kernel.asm	/^c01000e8:	f7 d8                	neg    %eax$/;"	l
c01000ea	kernel.asm	/^c01000ea:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01000ee	kernel.asm	/^c01000ee:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c01000f2	kernel.asm	/^c01000f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01000f5	kernel.asm	/^c01000f5:	e8 66 ff ff ff       	call   c0100060 <utoa_buf>$/;"	l
c01000fa	kernel.asm	/^c01000fa:	89 c2                	mov    %eax,%edx$/;"	l
c01000fc	kernel.asm	/^c01000fc:	c6 42 ff 2d          	movb   $0x2d,-0x1(%edx)$/;"	l
c0100100	kernel.asm	/^c0100100:	8d 40 ff             	lea    -0x1(%eax),%eax$/;"	l
c0100103	kernel.asm	/^c0100103:	c9                   	leave  $/;"	l
c0100104	kernel.asm	/^c0100104:	c3                   	ret    $/;"	l
c0100105	kernel.asm	/^c0100105:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100109	kernel.asm	/^c0100109:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
c0100110	kernel.asm	/^c0100110 <toupper>:$/;"	l
c0100110	kernel.asm	/^c0100110:	55                   	push   %ebp$/;"	l
c0100111	kernel.asm	/^c0100111:	89 e5                	mov    %esp,%ebp$/;"	l
c0100113	kernel.asm	/^c0100113:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100116	kernel.asm	/^c0100116:	5d                   	pop    %ebp$/;"	l
c0100117	kernel.asm	/^c0100117:	8d 48 9f             	lea    -0x61(%eax),%ecx$/;"	l
c010011a	kernel.asm	/^c010011a:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
c010011d	kernel.asm	/^c010011d:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
c0100120	kernel.asm	/^c0100120:	0f 46 c2             	cmovbe %edx,%eax$/;"	l
c0100123	kernel.asm	/^c0100123:	c3                   	ret    $/;"	l
c0100124	kernel.asm	/^c0100124:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c010012a	kernel.asm	/^c010012a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi$/;"	l
c0100130	kernel.asm	/^c0100130 <tolower>:$/;"	l
c0100130	kernel.asm	/^c0100130:	55                   	push   %ebp$/;"	l
c0100131	kernel.asm	/^c0100131:	89 e5                	mov    %esp,%ebp$/;"	l
c0100133	kernel.asm	/^c0100133:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100136	kernel.asm	/^c0100136:	5d                   	pop    %ebp$/;"	l
c0100137	kernel.asm	/^c0100137:	8d 48 bf             	lea    -0x41(%eax),%ecx$/;"	l
c010013a	kernel.asm	/^c010013a:	8d 50 20             	lea    0x20(%eax),%edx$/;"	l
c010013d	kernel.asm	/^c010013d:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
c0100140	kernel.asm	/^c0100140:	0f 46 c2             	cmovbe %edx,%eax$/;"	l
c0100143	kernel.asm	/^c0100143:	c3                   	ret    $/;"	l
c0100144	kernel.asm	/^c0100144:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c010014a	kernel.asm	/^c010014a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi$/;"	l
c0100150	kernel.asm	/^c0100150 <itoa>:$/;"	l
c0100150	kernel.asm	/^c0100150:	55                   	push   %ebp$/;"	l
c0100151	kernel.asm	/^c0100151:	89 e5                	mov    %esp,%ebp$/;"	l
c0100153	kernel.asm	/^c0100153:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100156	kernel.asm	/^c0100156:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100159	kernel.asm	/^c0100159:	c7 44 24 04 00 30 10 	movl   $0xc0103000,0x4(%esp)$/;"	l
c0100160	kernel.asm	/^c0100160:	c0 $/;"	l
c0100161	kernel.asm	/^c0100161:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100165	kernel.asm	/^c0100165:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100168	kernel.asm	/^c0100168:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010016b	kernel.asm	/^c010016b:	e8 50 ff ff ff       	call   c01000c0 <itoa_buf>$/;"	l
c0100170	kernel.asm	/^c0100170:	c9                   	leave  $/;"	l
c0100171	kernel.asm	/^c0100171:	c3                   	ret    $/;"	l
c0100172	kernel.asm	/^c0100172:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100179	kernel.asm	/^c0100179:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
c0100180	kernel.asm	/^c0100180 <utoa>:$/;"	l
c0100180	kernel.asm	/^c0100180:	55                   	push   %ebp$/;"	l
c0100181	kernel.asm	/^c0100181:	89 e5                	mov    %esp,%ebp$/;"	l
c0100183	kernel.asm	/^c0100183:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100186	kernel.asm	/^c0100186:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100189	kernel.asm	/^c0100189:	c7 44 24 04 40 30 10 	movl   $0xc0103040,0x4(%esp)$/;"	l
c0100190	kernel.asm	/^c0100190:	c0 $/;"	l
c0100191	kernel.asm	/^c0100191:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100195	kernel.asm	/^c0100195:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100198	kernel.asm	/^c0100198:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010019b	kernel.asm	/^c010019b:	e8 c0 fe ff ff       	call   c0100060 <utoa_buf>$/;"	l
c01001a0	kernel.asm	/^c01001a0:	c9                   	leave  $/;"	l
c01001a1	kernel.asm	/^c01001a1:	c3                   	ret    $/;"	l
c01001a2	kernel.asm	/^c01001a2:	90                   	nop$/;"	l
c01001a3	kernel.asm	/^c01001a3:	90                   	nop$/;"	l
c01001a4	kernel.asm	/^c01001a4:	90                   	nop$/;"	l
c01001a5	kernel.asm	/^c01001a5:	90                   	nop$/;"	l
c01001a6	kernel.asm	/^c01001a6:	90                   	nop$/;"	l
c01001a7	kernel.asm	/^c01001a7:	90                   	nop$/;"	l
c01001a8	kernel.asm	/^c01001a8:	90                   	nop$/;"	l
c01001a9	kernel.asm	/^c01001a9:	90                   	nop$/;"	l
c01001aa	kernel.asm	/^c01001aa:	90                   	nop$/;"	l
c01001ab	kernel.asm	/^c01001ab:	90                   	nop$/;"	l
c01001ac	kernel.asm	/^c01001ac:	90                   	nop$/;"	l
c01001ad	kernel.asm	/^c01001ad:	90                   	nop$/;"	l
c01001ae	kernel.asm	/^c01001ae:	90                   	nop$/;"	l
c01001af	kernel.asm	/^c01001af:	90                   	nop$/;"	l
c01001b0	kernel.asm	/^c01001b0 <abort>:$/;"	l
c01001b0	kernel.asm	/^c01001b0:	55                   	push   %ebp$/;"	l
c01001b1	kernel.asm	/^c01001b1:	89 e5                	mov    %esp,%ebp$/;"	l
c01001b3	kernel.asm	/^c01001b3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01001b6	kernel.asm	/^c01001b6:	fa                   	cli    $/;"	l
c01001b7	kernel.asm	/^c01001b7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01001ba	kernel.asm	/^c01001ba:	c7 04 24 18 0c 10 c0 	movl   $0xc0100c18,(%esp)$/;"	l
c01001c1	kernel.asm	/^c01001c1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01001c5	kernel.asm	/^c01001c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01001c8	kernel.asm	/^c01001c8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001cc	kernel.asm	/^c01001cc:	e8 8f 02 00 00       	call   c0100460 <printk>$/;"	l
c01001d1	kernel.asm	/^c01001d1:	f4                   	hlt    $/;"	l
c01001d2	kernel.asm	/^c01001d2:	c9                   	leave  $/;"	l
c01001d3	kernel.asm	/^c01001d3:	c3                   	ret    $/;"	l
c01001d4	kernel.asm	/^c01001d4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c01001da	kernel.asm	/^c01001da:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi$/;"	l
c01001e0	kernel.asm	/^c01001e0 <panic>:$/;"	l
c01001e0	kernel.asm	/^c01001e0:	55                   	push   %ebp$/;"	l
c01001e1	kernel.asm	/^c01001e1:	89 e5                	mov    %esp,%ebp$/;"	l
c01001e3	kernel.asm	/^c01001e3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01001e6	kernel.asm	/^c01001e6:	fa                   	cli    $/;"	l
c01001e7	kernel.asm	/^c01001e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01001ea	kernel.asm	/^c01001ea:	c7 04 24 44 0c 10 c0 	movl   $0xc0100c44,(%esp)$/;"	l
c01001f1	kernel.asm	/^c01001f1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001f5	kernel.asm	/^c01001f5:	e8 66 02 00 00       	call   c0100460 <printk>$/;"	l
c01001fa	kernel.asm	/^c01001fa:	f4                   	hlt    $/;"	l
c01001fb	kernel.asm	/^c01001fb:	c9                   	leave  $/;"	l
c01001fc	kernel.asm	/^c01001fc:	c3                   	ret    $/;"	l
c01001fd	kernel.asm	/^c01001fd:	90                   	nop$/;"	l
c01001fe	kernel.asm	/^c01001fe:	90                   	nop$/;"	l
c01001ff	kernel.asm	/^c01001ff:	90                   	nop$/;"	l
c0100200	kernel.asm	/^c0100200 <vfprintf>:$/;"	l
c0100200	kernel.asm	/^c0100200:	55                   	push   %ebp$/;"	l
c0100201	kernel.asm	/^c0100201:	89 e5                	mov    %esp,%ebp$/;"	l
c0100203	kernel.asm	/^c0100203:	57                   	push   %edi$/;"	l
c0100204	kernel.asm	/^c0100204:	31 ff                	xor    %edi,%edi$/;"	l
c0100206	kernel.asm	/^c0100206:	56                   	push   %esi$/;"	l
c0100207	kernel.asm	/^c0100207:	53                   	push   %ebx$/;"	l
c0100208	kernel.asm	/^c0100208:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
c010020b	kernel.asm	/^c010020b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
c010020e	kernel.asm	/^c010020e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c0100211	kernel.asm	/^c0100211:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100218	kernel.asm	/^c0100218:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
c010021b	kernel.asm	/^c010021b:	84 c0                	test   %al,%al$/;"	l
c010021d	kernel.asm	/^c010021d:	74 19                	je     c0100238 <vfprintf+0x38>$/;"	l
c010021f	kernel.asm	/^c010021f:	3c 25                	cmp    $0x25,%al$/;"	l
c0100221	kernel.asm	/^c0100221:	74 25                	je     c0100248 <vfprintf+0x48>$/;"	l
c0100223	kernel.asm	/^c0100223:	0f be c0             	movsbl %al,%eax$/;"	l
c0100226	kernel.asm	/^c0100226:	83 c3 01             	add    $0x1,%ebx$/;"	l
c0100229	kernel.asm	/^c0100229:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010022c	kernel.asm	/^c010022c:	83 c7 01             	add    $0x1,%edi$/;"	l
c010022f	kernel.asm	/^c010022f:	ff d6                	call   *%esi$/;"	l
c0100231	kernel.asm	/^c0100231:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
c0100234	kernel.asm	/^c0100234:	84 c0                	test   %al,%al$/;"	l
c0100236	kernel.asm	/^c0100236:	75 e7                	jne    c010021f <vfprintf+0x1f>$/;"	l
c0100238	kernel.asm	/^c0100238:	83 c4 2c             	add    $0x2c,%esp$/;"	l
c010023b	kernel.asm	/^c010023b:	89 f8                	mov    %edi,%eax$/;"	l
c010023d	kernel.asm	/^c010023d:	5b                   	pop    %ebx$/;"	l
c010023e	kernel.asm	/^c010023e:	5e                   	pop    %esi$/;"	l
c010023f	kernel.asm	/^c010023f:	5f                   	pop    %edi$/;"	l
c0100240	kernel.asm	/^c0100240:	5d                   	pop    %ebp$/;"	l
c0100241	kernel.asm	/^c0100241:	c3                   	ret    $/;"	l
c0100242	kernel.asm	/^c0100242:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0100248	kernel.asm	/^c0100248:	0f b6 43 01          	movzbl 0x1(%ebx),%eax$/;"	l
c010024c	kernel.asm	/^c010024c:	83 c3 02             	add    $0x2,%ebx$/;"	l
c010024f	kernel.asm	/^c010024f:	84 c0                	test   %al,%al$/;"	l
c0100251	kernel.asm	/^c0100251:	74 35                	je     c0100288 <vfprintf+0x88>$/;"	l
c0100253	kernel.asm	/^c0100253:	3c 64                	cmp    $0x64,%al$/;"	l
c0100255	kernel.asm	/^c0100255:	0f 84 fd 00 00 00    	je     c0100358 <vfprintf+0x158>$/;"	l
c010025b	kernel.asm	/^c010025b:	7f 43                	jg     c01002a0 <vfprintf+0xa0>$/;"	l
c010025d	kernel.asm	/^c010025d:	3c 25                	cmp    $0x25,%al$/;"	l
c010025f	kernel.asm	/^c010025f:	90                   	nop$/;"	l
c0100260	kernel.asm	/^c0100260:	0f 84 7a 01 00 00    	je     c01003e0 <vfprintf+0x1e0>$/;"	l
c0100266	kernel.asm	/^c0100266:	3c 63                	cmp    $0x63,%al$/;"	l
c0100268	kernel.asm	/^c0100268:	0f 84 4a 01 00 00    	je     c01003b8 <vfprintf+0x1b8>$/;"	l
c010026e	kernel.asm	/^c010026e:	c7 44 24 04 2b 00 00 	movl   $0x2b,0x4(%esp)$/;"	l
c0100275	kernel.asm	/^c0100275:	00 $/;"	l
c0100276	kernel.asm	/^c0100276:	c7 04 24 68 0c 10 c0 	movl   $0xc0100c68,(%esp)$/;"	l
c010027d	kernel.asm	/^c010027d:	e8 2e ff ff ff       	call   c01001b0 <abort>$/;"	l
c0100282	kernel.asm	/^c0100282:	eb 94                	jmp    c0100218 <vfprintf+0x18>$/;"	l
c0100284	kernel.asm	/^c0100284:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100288	kernel.asm	/^c0100288:	c7 44 24 04 22 00 00 	movl   $0x22,0x4(%esp)$/;"	l
c010028f	kernel.asm	/^c010028f:	00 $/;"	l
c0100290	kernel.asm	/^c0100290:	c7 04 24 68 0c 10 c0 	movl   $0xc0100c68,(%esp)$/;"	l
c0100297	kernel.asm	/^c0100297:	e8 14 ff ff ff       	call   c01001b0 <abort>$/;"	l
c010029c	kernel.asm	/^c010029c:	eb d0                	jmp    c010026e <vfprintf+0x6e>$/;"	l
c010029e	kernel.asm	/^c010029e:	66 90                	xchg   %ax,%ax$/;"	l
c01002a0	kernel.asm	/^c01002a0:	3c 73                	cmp    $0x73,%al$/;"	l
c01002a2	kernel.asm	/^c01002a2:	74 64                	je     c0100308 <vfprintf+0x108>$/;"	l
c01002a4	kernel.asm	/^c01002a4:	3c 78                	cmp    $0x78,%al$/;"	l
c01002a6	kernel.asm	/^c01002a6:	75 c6                	jne    c010026e <vfprintf+0x6e>$/;"	l
c01002a8	kernel.asm	/^c01002a8:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01002ab	kernel.asm	/^c01002ab:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c01002ae	kernel.asm	/^c01002ae:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c01002b5	kernel.asm	/^c01002b5:	00 $/;"	l
c01002b6	kernel.asm	/^c01002b6:	8b 02                	mov    (%edx),%eax$/;"	l
c01002b8	kernel.asm	/^c01002b8:	83 c1 04             	add    $0x4,%ecx$/;"	l
c01002bb	kernel.asm	/^c01002bb:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
c01002be	kernel.asm	/^c01002be:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01002c1	kernel.asm	/^c01002c1:	e8 ba fe ff ff       	call   c0100180 <utoa>$/;"	l
c01002c6	kernel.asm	/^c01002c6:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c01002c9	kernel.asm	/^c01002c9:	89 4d 10             	mov    %ecx,0x10(%ebp)$/;"	l
c01002cc	kernel.asm	/^c01002cc:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c01002cf	kernel.asm	/^c01002cf:	84 d2                	test   %dl,%dl$/;"	l
c01002d1	kernel.asm	/^c01002d1:	0f 84 41 ff ff ff    	je     c0100218 <vfprintf+0x18>$/;"	l
c01002d7	kernel.asm	/^c01002d7:	29 f8                	sub    %edi,%eax$/;"	l
c01002d9	kernel.asm	/^c01002d9:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
c01002dc	kernel.asm	/^c01002dc:	89 c3                	mov    %eax,%ebx$/;"	l
c01002de	kernel.asm	/^c01002de:	66 90                	xchg   %ax,%ax$/;"	l
c01002e0	kernel.asm	/^c01002e0:	0f be d2             	movsbl %dl,%edx$/;"	l
c01002e3	kernel.asm	/^c01002e3:	83 c7 01             	add    $0x1,%edi$/;"	l
c01002e6	kernel.asm	/^c01002e6:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01002e9	kernel.asm	/^c01002e9:	ff d6                	call   *%esi$/;"	l
c01002eb	kernel.asm	/^c01002eb:	0f b6 14 3b          	movzbl (%ebx,%edi,1),%edx$/;"	l
c01002ef	kernel.asm	/^c01002ef:	84 d2                	test   %dl,%dl$/;"	l
c01002f1	kernel.asm	/^c01002f1:	75 ed                	jne    c01002e0 <vfprintf+0xe0>$/;"	l
c01002f3	kernel.asm	/^c01002f3:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01002f6	kernel.asm	/^c01002f6:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
c01002f9	kernel.asm	/^c01002f9:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c01002fc	kernel.asm	/^c01002fc:	e9 17 ff ff ff       	jmp    c0100218 <vfprintf+0x18>$/;"	l
c0100301	kernel.asm	/^c0100301:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100308	kernel.asm	/^c0100308:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c010030b	kernel.asm	/^c010030b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010030e	kernel.asm	/^c010030e:	8b 11                	mov    (%ecx),%edx$/;"	l
c0100310	kernel.asm	/^c0100310:	83 c0 04             	add    $0x4,%eax$/;"	l
c0100313	kernel.asm	/^c0100313:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100316	kernel.asm	/^c0100316:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0100319	kernel.asm	/^c0100319:	0f b6 02             	movzbl (%edx),%eax$/;"	l
c010031c	kernel.asm	/^c010031c:	89 4d 10             	mov    %ecx,0x10(%ebp)$/;"	l
c010031f	kernel.asm	/^c010031f:	84 c0                	test   %al,%al$/;"	l
c0100321	kernel.asm	/^c0100321:	0f 84 f1 fe ff ff    	je     c0100218 <vfprintf+0x18>$/;"	l
c0100327	kernel.asm	/^c0100327:	29 fa                	sub    %edi,%edx$/;"	l
c0100329	kernel.asm	/^c0100329:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
c010032c	kernel.asm	/^c010032c:	89 d3                	mov    %edx,%ebx$/;"	l
c010032e	kernel.asm	/^c010032e:	66 90                	xchg   %ax,%ax$/;"	l
c0100330	kernel.asm	/^c0100330:	0f be c0             	movsbl %al,%eax$/;"	l
c0100333	kernel.asm	/^c0100333:	83 c7 01             	add    $0x1,%edi$/;"	l
c0100336	kernel.asm	/^c0100336:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100339	kernel.asm	/^c0100339:	ff d6                	call   *%esi$/;"	l
c010033b	kernel.asm	/^c010033b:	0f b6 04 3b          	movzbl (%ebx,%edi,1),%eax$/;"	l
c010033f	kernel.asm	/^c010033f:	84 c0                	test   %al,%al$/;"	l
c0100341	kernel.asm	/^c0100341:	75 ed                	jne    c0100330 <vfprintf+0x130>$/;"	l
c0100343	kernel.asm	/^c0100343:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100346	kernel.asm	/^c0100346:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
c0100349	kernel.asm	/^c0100349:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c010034c	kernel.asm	/^c010034c:	e9 c7 fe ff ff       	jmp    c0100218 <vfprintf+0x18>$/;"	l
c0100351	kernel.asm	/^c0100351:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100358	kernel.asm	/^c0100358:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c010035b	kernel.asm	/^c010035b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010035e	kernel.asm	/^c010035e:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c0100365	kernel.asm	/^c0100365:	00 $/;"	l
c0100366	kernel.asm	/^c0100366:	8b 01                	mov    (%ecx),%eax$/;"	l
c0100368	kernel.asm	/^c0100368:	83 c2 04             	add    $0x4,%edx$/;"	l
c010036b	kernel.asm	/^c010036b:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c010036e	kernel.asm	/^c010036e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100371	kernel.asm	/^c0100371:	e8 da fd ff ff       	call   c0100150 <itoa>$/;"	l
c0100376	kernel.asm	/^c0100376:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0100379	kernel.asm	/^c0100379:	89 4d 10             	mov    %ecx,0x10(%ebp)$/;"	l
c010037c	kernel.asm	/^c010037c:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010037f	kernel.asm	/^c010037f:	84 d2                	test   %dl,%dl$/;"	l
c0100381	kernel.asm	/^c0100381:	0f 84 91 fe ff ff    	je     c0100218 <vfprintf+0x18>$/;"	l
c0100387	kernel.asm	/^c0100387:	29 f8                	sub    %edi,%eax$/;"	l
c0100389	kernel.asm	/^c0100389:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
c010038c	kernel.asm	/^c010038c:	89 c3                	mov    %eax,%ebx$/;"	l
c010038e	kernel.asm	/^c010038e:	66 90                	xchg   %ax,%ax$/;"	l
c0100390	kernel.asm	/^c0100390:	0f be d2             	movsbl %dl,%edx$/;"	l
c0100393	kernel.asm	/^c0100393:	83 c7 01             	add    $0x1,%edi$/;"	l
c0100396	kernel.asm	/^c0100396:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0100399	kernel.asm	/^c0100399:	ff d6                	call   *%esi$/;"	l
c010039b	kernel.asm	/^c010039b:	0f b6 14 3b          	movzbl (%ebx,%edi,1),%edx$/;"	l
c010039f	kernel.asm	/^c010039f:	84 d2                	test   %dl,%dl$/;"	l
c01003a1	kernel.asm	/^c01003a1:	75 ed                	jne    c0100390 <vfprintf+0x190>$/;"	l
c01003a3	kernel.asm	/^c01003a3:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01003a6	kernel.asm	/^c01003a6:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
c01003a9	kernel.asm	/^c01003a9:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c01003ac	kernel.asm	/^c01003ac:	e9 67 fe ff ff       	jmp    c0100218 <vfprintf+0x18>$/;"	l
c01003b1	kernel.asm	/^c01003b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c01003b8	kernel.asm	/^c01003b8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01003bb	kernel.asm	/^c01003bb:	83 c7 01             	add    $0x1,%edi$/;"	l
c01003be	kernel.asm	/^c01003be:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01003c1	kernel.asm	/^c01003c1:	83 c0 04             	add    $0x4,%eax$/;"	l
c01003c4	kernel.asm	/^c01003c4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01003c7	kernel.asm	/^c01003c7:	0f be 02             	movsbl (%edx),%eax$/;"	l
c01003ca	kernel.asm	/^c01003ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01003cd	kernel.asm	/^c01003cd:	ff d6                	call   *%esi$/;"	l
c01003cf	kernel.asm	/^c01003cf:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c01003d2	kernel.asm	/^c01003d2:	89 4d 10             	mov    %ecx,0x10(%ebp)$/;"	l
c01003d5	kernel.asm	/^c01003d5:	e9 3e fe ff ff       	jmp    c0100218 <vfprintf+0x18>$/;"	l
c01003da	kernel.asm	/^c01003da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c01003e0	kernel.asm	/^c01003e0:	83 c7 01             	add    $0x1,%edi$/;"	l
c01003e3	kernel.asm	/^c01003e3:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
c01003ea	kernel.asm	/^c01003ea:	ff d6                	call   *%esi$/;"	l
c01003ec	kernel.asm	/^c01003ec:	e9 27 fe ff ff       	jmp    c0100218 <vfprintf+0x18>$/;"	l
c01003f1	kernel.asm	/^c01003f1:	90                   	nop$/;"	l
c01003f2	kernel.asm	/^c01003f2:	90                   	nop$/;"	l
c01003f3	kernel.asm	/^c01003f3:	90                   	nop$/;"	l
c01003f4	kernel.asm	/^c01003f4:	90                   	nop$/;"	l
c01003f5	kernel.asm	/^c01003f5:	90                   	nop$/;"	l
c01003f6	kernel.asm	/^c01003f6:	90                   	nop$/;"	l
c01003f7	kernel.asm	/^c01003f7:	90                   	nop$/;"	l
c01003f8	kernel.asm	/^c01003f8:	90                   	nop$/;"	l
c01003f9	kernel.asm	/^c01003f9:	90                   	nop$/;"	l
c01003fa	kernel.asm	/^c01003fa:	90                   	nop$/;"	l
c01003fb	kernel.asm	/^c01003fb:	90                   	nop$/;"	l
c01003fc	kernel.asm	/^c01003fc:	90                   	nop$/;"	l
c01003fd	kernel.asm	/^c01003fd:	90                   	nop$/;"	l
c01003fe	kernel.asm	/^c01003fe:	90                   	nop$/;"	l
c01003ff	kernel.asm	/^c01003ff:	90                   	nop$/;"	l
c0100400	kernel.asm	/^c0100400 <serial_printc>:$/;"	l
c0100400	kernel.asm	/^c0100400:	55                   	push   %ebp$/;"	l
c0100401	kernel.asm	/^c0100401:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
c0100406	kernel.asm	/^c0100406:	89 e5                	mov    %esp,%ebp$/;"	l
c0100408	kernel.asm	/^c0100408:	0f b6 4d 08          	movzbl 0x8(%ebp),%ecx$/;"	l
c010040c	kernel.asm	/^c010040c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100410	kernel.asm	/^c0100410:	ec                   	in     (%dx),%al$/;"	l
c0100411	kernel.asm	/^c0100411:	a8 20                	test   $0x20,%al$/;"	l
c0100413	kernel.asm	/^c0100413:	74 fb                	je     c0100410 <serial_printc+0x10>$/;"	l
c0100415	kernel.asm	/^c0100415:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
c010041a	kernel.asm	/^c010041a:	89 c8                	mov    %ecx,%eax$/;"	l
c010041c	kernel.asm	/^c010041c:	ee                   	out    %al,(%dx)$/;"	l
c010041d	kernel.asm	/^c010041d:	5d                   	pop    %ebp$/;"	l
c010041e	kernel.asm	/^c010041e:	c3                   	ret    $/;"	l
c010041f	kernel.asm	/^c010041f:	90                   	nop$/;"	l
c0100420	kernel.asm	/^c0100420 <init_debug>:$/;"	l
c0100420	kernel.asm	/^c0100420:	55                   	push   %ebp$/;"	l
c0100421	kernel.asm	/^c0100421:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
c0100426	kernel.asm	/^c0100426:	89 e5                	mov    %esp,%ebp$/;"	l
c0100428	kernel.asm	/^c0100428:	31 c0                	xor    %eax,%eax$/;"	l
c010042a	kernel.asm	/^c010042a:	ee                   	out    %al,(%dx)$/;"	l
c010042b	kernel.asm	/^c010042b:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
c0100430	kernel.asm	/^c0100430:	b2 fb                	mov    $0xfb,%dl$/;"	l
c0100432	kernel.asm	/^c0100432:	ee                   	out    %al,(%dx)$/;"	l
c0100433	kernel.asm	/^c0100433:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0100438	kernel.asm	/^c0100438:	b2 f8                	mov    $0xf8,%dl$/;"	l
c010043a	kernel.asm	/^c010043a:	ee                   	out    %al,(%dx)$/;"	l
c010043b	kernel.asm	/^c010043b:	31 c0                	xor    %eax,%eax$/;"	l
c010043d	kernel.asm	/^c010043d:	b2 f9                	mov    $0xf9,%dl$/;"	l
c010043f	kernel.asm	/^c010043f:	ee                   	out    %al,(%dx)$/;"	l
c0100440	kernel.asm	/^c0100440:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
c0100445	kernel.asm	/^c0100445:	b2 fb                	mov    $0xfb,%dl$/;"	l
c0100447	kernel.asm	/^c0100447:	ee                   	out    %al,(%dx)$/;"	l
c0100448	kernel.asm	/^c0100448:	b8 c7 ff ff ff       	mov    $0xffffffc7,%eax$/;"	l
c010044d	kernel.asm	/^c010044d:	b2 fa                	mov    $0xfa,%dl$/;"	l
c010044f	kernel.asm	/^c010044f:	ee                   	out    %al,(%dx)$/;"	l
c0100450	kernel.asm	/^c0100450:	b8 0b 00 00 00       	mov    $0xb,%eax$/;"	l
c0100455	kernel.asm	/^c0100455:	b2 fc                	mov    $0xfc,%dl$/;"	l
c0100457	kernel.asm	/^c0100457:	ee                   	out    %al,(%dx)$/;"	l
c0100458	kernel.asm	/^c0100458:	5d                   	pop    %ebp$/;"	l
c0100459	kernel.asm	/^c0100459:	c3                   	ret    $/;"	l
c010045a	kernel.asm	/^c010045a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0100460	kernel.asm	/^c0100460 <printk>:$/;"	l
c0100460	kernel.asm	/^c0100460:	55                   	push   %ebp$/;"	l
c0100461	kernel.asm	/^c0100461:	89 e5                	mov    %esp,%ebp$/;"	l
c0100463	kernel.asm	/^c0100463:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100466	kernel.asm	/^c0100466:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c0100469	kernel.asm	/^c0100469:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010046d	kernel.asm	/^c010046d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100470	kernel.asm	/^c0100470:	c7 04 24 00 04 10 c0 	movl   $0xc0100400,(%esp)$/;"	l
c0100477	kernel.asm	/^c0100477:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010047b	kernel.asm	/^c010047b:	e8 80 fd ff ff       	call   c0100200 <vfprintf>$/;"	l
c0100480	kernel.asm	/^c0100480:	c9                   	leave  $/;"	l
c0100481	kernel.asm	/^c0100481:	c3                   	ret    $/;"	l
c0100482	kernel.asm	/^c0100482:	90                   	nop$/;"	l
c0100483	kernel.asm	/^c0100483:	90                   	nop$/;"	l
c0100484	kernel.asm	/^c0100484:	90                   	nop$/;"	l
c0100485	kernel.asm	/^c0100485:	90                   	nop$/;"	l
c0100486	kernel.asm	/^c0100486:	90                   	nop$/;"	l
c0100487	kernel.asm	/^c0100487:	90                   	nop$/;"	l
c0100488	kernel.asm	/^c0100488:	90                   	nop$/;"	l
c0100489	kernel.asm	/^c0100489:	90                   	nop$/;"	l
c010048a	kernel.asm	/^c010048a:	90                   	nop$/;"	l
c010048b	kernel.asm	/^c010048b:	90                   	nop$/;"	l
c010048c	kernel.asm	/^c010048c:	90                   	nop$/;"	l
c010048d	kernel.asm	/^c010048d:	90                   	nop$/;"	l
c010048e	kernel.asm	/^c010048e:	90                   	nop$/;"	l
c010048f	kernel.asm	/^c010048f:	90                   	nop$/;"	l
c0100490	kernel.asm	/^c0100490 <init_kvm>:$/;"	l
c0100490	kernel.asm	/^c0100490:	55                   	push   %ebp$/;"	l
c0100491	kernel.asm	/^c0100491:	ba 00 50 10 00       	mov    $0x105000,%edx$/;"	l
c0100496	kernel.asm	/^c0100496:	89 e5                	mov    %esp,%ebp$/;"	l
c0100498	kernel.asm	/^c0100498:	31 c0                	xor    %eax,%eax$/;"	l
c010049a	kernel.asm	/^c010049a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010049d	kernel.asm	/^c010049d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c01004a0	kernel.asm	/^c01004a0:	89 c1                	mov    %eax,%ecx$/;"	l
c01004a2	kernel.asm	/^c01004a2:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c01004a7	kernel.asm	/^c01004a7:	83 c9 03             	or     $0x3,%ecx$/;"	l
c01004aa	kernel.asm	/^c01004aa:	89 0a                	mov    %ecx,(%edx)$/;"	l
c01004ac	kernel.asm	/^c01004ac:	83 c2 04             	add    $0x4,%edx$/;"	l
c01004af	kernel.asm	/^c01004af:	3d 00 00 00 08       	cmp    $0x8000000,%eax$/;"	l
c01004b4	kernel.asm	/^c01004b4:	75 ea                	jne    c01004a0 <init_kvm+0x10>$/;"	l
c01004b6	kernel.asm	/^c01004b6:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c01004bd	kernel.asm	/^c01004bd:	00 $/;"	l
c01004be	kernel.asm	/^c01004be:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01004c5	kernel.asm	/^c01004c5:	00 $/;"	l
c01004c6	kernel.asm	/^c01004c6:	c7 04 24 00 50 12 40 	movl   $0x40125000,(%esp)$/;"	l
c01004cd	kernel.asm	/^c01004cd:	e8 5e fb ff ff       	call   c0100030 <memset>$/;"	l
c01004d2	kernel.asm	/^c01004d2:	b9 00 50 12 00       	mov    $0x125000,%ecx$/;"	l
c01004d7	kernel.asm	/^c01004d7:	31 d2                	xor    %edx,%edx$/;"	l
c01004d9	kernel.asm	/^c01004d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c01004e0	kernel.asm	/^c01004e0:	89 d0                	mov    %edx,%eax$/;"	l
c01004e2	kernel.asm	/^c01004e2:	81 c2 00 00 40 00    	add    $0x400000,%edx$/;"	l
c01004e8	kernel.asm	/^c01004e8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01004eb	kernel.asm	/^c01004eb:	8d 04 85 00 50 10 00 	lea    0x105000(,%eax,4),%eax$/;"	l
c01004f2	kernel.asm	/^c01004f2:	83 c8 03             	or     $0x3,%eax$/;"	l
c01004f5	kernel.asm	/^c01004f5:	89 01                	mov    %eax,(%ecx)$/;"	l
c01004f7	kernel.asm	/^c01004f7:	89 81 00 0c 00 00    	mov    %eax,0xc00(%ecx)$/;"	l
c01004fd	kernel.asm	/^c01004fd:	83 c1 04             	add    $0x4,%ecx$/;"	l
c0100500	kernel.asm	/^c0100500:	81 fa 00 00 00 08    	cmp    $0x8000000,%edx$/;"	l
c0100506	kernel.asm	/^c0100506:	75 d8                	jne    c01004e0 <init_kvm+0x50>$/;"	l
c0100508	kernel.asm	/^c0100508:	b8 00 50 12 00       	mov    $0x125000,%eax$/;"	l
c010050d	kernel.asm	/^c010050d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0100510	kernel.asm	/^c0100510:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c0100513	kernel.asm	/^c0100513:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100516	kernel.asm	/^c0100516:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100519	kernel.asm	/^c0100519:	0d 00 00 00 80       	or     $0x80000000,%eax$/;"	l
c010051e	kernel.asm	/^c010051e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c0100521	kernel.asm	/^c0100521:	c9                   	leave  $/;"	l
c0100522	kernel.asm	/^c0100522:	c3                   	ret    $/;"	l
c0100523	kernel.asm	/^c0100523:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0100529	kernel.asm	/^c0100529:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
c0100530	kernel.asm	/^c0100530 <init_seg>:$/;"	l
c0100530	kernel.asm	/^c0100530:	b8 40 40 10 c0       	mov    $0xc0104040,%eax$/;"	l
c0100535	kernel.asm	/^c0100535:	66 a3 2a 40 10 c0    	mov    %ax,0xc010402a$/;"	l
c010053b	kernel.asm	/^c010053b:	89 c2                	mov    %eax,%edx$/;"	l
c010053d	kernel.asm	/^c010053d:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0100540	kernel.asm	/^c0100540:	a2 2f 40 10 c0       	mov    %al,0xc010402f$/;"	l
c0100545	kernel.asm	/^c0100545:	b8 00 40 10 c0       	mov    $0xc0104000,%eax$/;"	l
c010054a	kernel.asm	/^c010054a:	55                   	push   %ebp$/;"	l
c010054b	kernel.asm	/^c010054b:	c1 ea 10             	shr    $0x10,%edx$/;"	l
c010054e	kernel.asm	/^c010054e:	89 e5                	mov    %esp,%ebp$/;"	l
c0100550	kernel.asm	/^c0100550:	66 c7 05 74 30 10 c0 	movw   $0x2f,0xc0103074$/;"	l
c0100557	kernel.asm	/^c0100557:	2f 00 $/;"	l
c0100559	kernel.asm	/^c0100559:	66 a3 76 30 10 c0    	mov    %ax,0xc0103076$/;"	l
c010055f	kernel.asm	/^c010055f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100562	kernel.asm	/^c0100562:	88 15 2c 40 10 c0    	mov    %dl,0xc010402c$/;"	l
c0100568	kernel.asm	/^c0100568:	66 c7 05 08 40 10 c0 	movw   $0xffff,0xc0104008$/;"	l
c010056f	kernel.asm	/^c010056f:	ff ff $/;"	l
c0100571	kernel.asm	/^c0100571:	66 c7 05 0a 40 10 c0 	movw   $0x0,0xc010400a$/;"	l
c0100578	kernel.asm	/^c0100578:	00 00 $/;"	l
c010057a	kernel.asm	/^c010057a:	c6 05 0c 40 10 c0 00 	movb   $0x0,0xc010400c$/;"	l
c0100581	kernel.asm	/^c0100581:	c6 05 0d 40 10 c0 9a 	movb   $0x9a,0xc010400d$/;"	l
c0100588	kernel.asm	/^c0100588:	c6 05 0e 40 10 c0 cf 	movb   $0xcf,0xc010400e$/;"	l
c010058f	kernel.asm	/^c010058f:	c6 05 0f 40 10 c0 00 	movb   $0x0,0xc010400f$/;"	l
c0100596	kernel.asm	/^c0100596:	66 c7 05 10 40 10 c0 	movw   $0xffff,0xc0104010$/;"	l
c010059d	kernel.asm	/^c010059d:	ff ff $/;"	l
c010059f	kernel.asm	/^c010059f:	66 c7 05 12 40 10 c0 	movw   $0x0,0xc0104012$/;"	l
c01005a6	kernel.asm	/^c01005a6:	00 00 $/;"	l
c01005a8	kernel.asm	/^c01005a8:	c6 05 14 40 10 c0 00 	movb   $0x0,0xc0104014$/;"	l
c01005af	kernel.asm	/^c01005af:	c6 05 15 40 10 c0 92 	movb   $0x92,0xc0104015$/;"	l
c01005b6	kernel.asm	/^c01005b6:	c6 05 16 40 10 c0 cf 	movb   $0xcf,0xc0104016$/;"	l
c01005bd	kernel.asm	/^c01005bd:	c6 05 17 40 10 c0 00 	movb   $0x0,0xc0104017$/;"	l
c01005c4	kernel.asm	/^c01005c4:	66 c7 05 18 40 10 c0 	movw   $0xffff,0xc0104018$/;"	l
c01005cb	kernel.asm	/^c01005cb:	ff ff $/;"	l
c01005cd	kernel.asm	/^c01005cd:	66 c7 05 1a 40 10 c0 	movw   $0x0,0xc010401a$/;"	l
c01005d4	kernel.asm	/^c01005d4:	00 00 $/;"	l
c01005d6	kernel.asm	/^c01005d6:	c6 05 1c 40 10 c0 00 	movb   $0x0,0xc010401c$/;"	l
c01005dd	kernel.asm	/^c01005dd:	c6 05 1d 40 10 c0 fa 	movb   $0xfa,0xc010401d$/;"	l
c01005e4	kernel.asm	/^c01005e4:	c6 05 1e 40 10 c0 cf 	movb   $0xcf,0xc010401e$/;"	l
c01005eb	kernel.asm	/^c01005eb:	c6 05 1f 40 10 c0 00 	movb   $0x0,0xc010401f$/;"	l
c01005f2	kernel.asm	/^c01005f2:	66 c7 05 20 40 10 c0 	movw   $0xffff,0xc0104020$/;"	l
c01005f9	kernel.asm	/^c01005f9:	ff ff $/;"	l
c01005fb	kernel.asm	/^c01005fb:	66 c7 05 22 40 10 c0 	movw   $0x0,0xc0104022$/;"	l
c0100602	kernel.asm	/^c0100602:	00 00 $/;"	l
c0100604	kernel.asm	/^c0100604:	c6 05 24 40 10 c0 00 	movb   $0x0,0xc0104024$/;"	l
c010060b	kernel.asm	/^c010060b:	c6 05 25 40 10 c0 f2 	movb   $0xf2,0xc0104025$/;"	l
c0100612	kernel.asm	/^c0100612:	c6 05 26 40 10 c0 cf 	movb   $0xcf,0xc0104026$/;"	l
c0100619	kernel.asm	/^c0100619:	c6 05 27 40 10 c0 00 	movb   $0x0,0xc0104027$/;"	l
c0100620	kernel.asm	/^c0100620:	66 c7 05 28 40 10 c0 	movw   $0x63,0xc0104028$/;"	l
c0100627	kernel.asm	/^c0100627:	63 00 $/;"	l
c0100629	kernel.asm	/^c0100629:	c6 05 2d 40 10 c0 89 	movb   $0x89,0xc010402d$/;"	l
c0100630	kernel.asm	/^c0100630:	c6 05 2e 40 10 c0 40 	movb   $0x40,0xc010402e$/;"	l
c0100637	kernel.asm	/^c0100637:	66 a3 78 30 10 c0    	mov    %ax,0xc0103078$/;"	l
c010063d	kernel.asm	/^c010063d:	b8 74 30 10 c0       	mov    $0xc0103074,%eax$/;"	l
c0100642	kernel.asm	/^c0100642:	0f 01 10             	lgdtl  (%eax)$/;"	l
c0100645	kernel.asm	/^c0100645:	5d                   	pop    %ebp$/;"	l
c0100646	kernel.asm	/^c0100646:	c3                   	ret    $/;"	l
c0100647	kernel.asm	/^c0100647:	90                   	nop$/;"	l
c0100648	kernel.asm	/^c0100648:	90                   	nop$/;"	l
c0100649	kernel.asm	/^c0100649:	90                   	nop$/;"	l
c010064a	kernel.asm	/^c010064a:	90                   	nop$/;"	l
c010064b	kernel.asm	/^c010064b:	90                   	nop$/;"	l
c010064c	kernel.asm	/^c010064c:	90                   	nop$/;"	l
c010064d	kernel.asm	/^c010064d:	90                   	nop$/;"	l
c010064e	kernel.asm	/^c010064e:	90                   	nop$/;"	l
c010064f	kernel.asm	/^c010064f:	90                   	nop$/;"	l
c0100650	kernel.asm	/^c0100650 <os_init>:$/;"	l
c0100650	kernel.asm	/^c0100650:	55                   	push   %ebp$/;"	l
c0100651	kernel.asm	/^c0100651:	89 e5                	mov    %esp,%ebp$/;"	l
c0100653	kernel.asm	/^c0100653:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100656	kernel.asm	/^c0100656:	e8 d5 fe ff ff       	call   c0100530 <init_seg>$/;"	l
c010065b	kernel.asm	/^c010065b:	e8 c0 fd ff ff       	call   c0100420 <init_debug>$/;"	l
c0100660	kernel.asm	/^c0100660:	e8 4b 00 00 00       	call   c01006b0 <init_idt>$/;"	l
c0100665	kernel.asm	/^c0100665:	e8 86 04 00 00       	call   c0100af0 <init_i8259>$/;"	l
c010066a	kernel.asm	/^c010066a:	c7 04 24 7b 0c 10 c0 	movl   $0xc0100c7b,(%esp)$/;"	l
c0100671	kernel.asm	/^c0100671:	e8 ea fd ff ff       	call   c0100460 <printk>$/;"	l
c0100676	kernel.asm	/^c0100676:	fb                   	sti    $/;"	l
c0100677	kernel.asm	/^c0100677:	90                   	nop$/;"	l
c0100678	kernel.asm	/^c0100678:	f4                   	hlt    $/;"	l
c0100679	kernel.asm	/^c0100679:	eb fd                	jmp    c0100678 <os_init+0x28>$/;"	l
c010067b	kernel.asm	/^c010067b:	90                   	nop$/;"	l
c010067c	kernel.asm	/^c010067c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0100680	kernel.asm	/^c0100680 <entry>:$/;"	l
c0100680	kernel.asm	/^c0100680:	55                   	push   %ebp$/;"	l
c0100681	kernel.asm	/^c0100681:	89 e5                	mov    %esp,%ebp$/;"	l
c0100683	kernel.asm	/^c0100683:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100686	kernel.asm	/^c0100686:	e8 05 fe ff ff       	call   c0100490 <init_kvm>$/;"	l
c010068b	kernel.asm	/^c010068b:	c7 45 f4 50 06 10 c0 	movl   $0xc0100650,-0xc(%ebp)$/;"	l
c0100692	kernel.asm	/^c0100692:	81 c4 00 00 00 c0    	add    $0xc0000000,%esp$/;"	l
c0100698	kernel.asm	/^c0100698:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010069b	kernel.asm	/^c010069b:	ff d0                	call   *%eax$/;"	l
c010069d	kernel.asm	/^c010069d:	c7 04 24 93 0c 10 c0 	movl   $0xc0100c93,(%esp)$/;"	l
c01006a4	kernel.asm	/^c01006a4:	e8 37 fb ff ff       	call   c01001e0 <panic>$/;"	l
c01006a9	kernel.asm	/^c01006a9:	c9                   	leave  $/;"	l
c01006aa	kernel.asm	/^c01006aa:	c3                   	ret    $/;"	l
c01006ab	kernel.asm	/^c01006ab:	90                   	nop$/;"	l
c01006ac	kernel.asm	/^c01006ac:	90                   	nop$/;"	l
c01006ad	kernel.asm	/^c01006ad:	90                   	nop$/;"	l
c01006ae	kernel.asm	/^c01006ae:	90                   	nop$/;"	l
c01006af	kernel.asm	/^c01006af:	90                   	nop$/;"	l
c01006b0	kernel.asm	/^c01006b0 <init_idt>:$/;"	l
c01006b0	kernel.asm	/^c01006b0:	55                   	push   %ebp$/;"	l
c01006b1	kernel.asm	/^c01006b1:	31 c0                	xor    %eax,%eax$/;"	l
c01006b3	kernel.asm	/^c01006b3:	89 e5                	mov    %esp,%ebp$/;"	l
c01006b5	kernel.asm	/^c01006b5:	ba 00 60 12 c0       	mov    $0xc0126000,%edx$/;"	l
c01006ba	kernel.asm	/^c01006ba:	56                   	push   %esi$/;"	l
c01006bb	kernel.asm	/^c01006bb:	53                   	push   %ebx$/;"	l
c01006bc	kernel.asm	/^c01006bc:	bb ca 0b 10 c0       	mov    $0xc0100bca,%ebx$/;"	l
c01006c1	kernel.asm	/^c01006c1:	89 de                	mov    %ebx,%esi$/;"	l
c01006c3	kernel.asm	/^c01006c3:	c1 eb 10             	shr    $0x10,%ebx$/;"	l
c01006c6	kernel.asm	/^c01006c6:	66 90                	xchg   %ax,%ax$/;"	l
c01006c8	kernel.asm	/^c01006c8:	66 89 34 c5 00 60 12 	mov    %si,-0x3feda000(,%eax,8)$/;"	l
c01006cf	kernel.asm	/^c01006cf:	c0 $/;"	l
c01006d0	kernel.asm	/^c01006d0:	b9 00 60 12 c0       	mov    $0xc0126000,%ecx$/;"	l
c01006d5	kernel.asm	/^c01006d5:	66 c7 44 c2 02 08 00 	movw   $0x8,0x2(%edx,%eax,8)$/;"	l
c01006dc	kernel.asm	/^c01006dc:	c6 44 c2 04 00       	movb   $0x0,0x4(%edx,%eax,8)$/;"	l
c01006e1	kernel.asm	/^c01006e1:	c6 44 c2 05 8f       	movb   $0x8f,0x5(%edx,%eax,8)$/;"	l
c01006e6	kernel.asm	/^c01006e6:	66 89 5c c2 06       	mov    %bx,0x6(%edx,%eax,8)$/;"	l
c01006eb	kernel.asm	/^c01006eb:	83 c0 01             	add    $0x1,%eax$/;"	l
c01006ee	kernel.asm	/^c01006ee:	3d 00 01 00 00       	cmp    $0x100,%eax$/;"	l
c01006f3	kernel.asm	/^c01006f3:	75 d3                	jne    c01006c8 <init_idt+0x18>$/;"	l
c01006f5	kernel.asm	/^c01006f5:	b8 58 0b 10 c0       	mov    $0xc0100b58,%eax$/;"	l
c01006fa	kernel.asm	/^c01006fa:	66 a3 00 60 12 c0    	mov    %ax,0xc0126000$/;"	l
c0100700	kernel.asm	/^c0100700:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100703	kernel.asm	/^c0100703:	66 a3 06 60 12 c0    	mov    %ax,0xc0126006$/;"	l
c0100709	kernel.asm	/^c0100709:	b8 5e 0b 10 c0       	mov    $0xc0100b5e,%eax$/;"	l
c010070e	kernel.asm	/^c010070e:	66 a3 08 60 12 c0    	mov    %ax,0xc0126008$/;"	l
c0100714	kernel.asm	/^c0100714:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100717	kernel.asm	/^c0100717:	66 a3 0e 60 12 c0    	mov    %ax,0xc012600e$/;"	l
c010071d	kernel.asm	/^c010071d:	b8 64 0b 10 c0       	mov    $0xc0100b64,%eax$/;"	l
c0100722	kernel.asm	/^c0100722:	66 a3 10 60 12 c0    	mov    %ax,0xc0126010$/;"	l
c0100728	kernel.asm	/^c0100728:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010072b	kernel.asm	/^c010072b:	66 a3 16 60 12 c0    	mov    %ax,0xc0126016$/;"	l
c0100731	kernel.asm	/^c0100731:	b8 6a 0b 10 c0       	mov    $0xc0100b6a,%eax$/;"	l
c0100736	kernel.asm	/^c0100736:	66 a3 18 60 12 c0    	mov    %ax,0xc0126018$/;"	l
c010073c	kernel.asm	/^c010073c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010073f	kernel.asm	/^c010073f:	66 a3 1e 60 12 c0    	mov    %ax,0xc012601e$/;"	l
c0100745	kernel.asm	/^c0100745:	b8 70 0b 10 c0       	mov    $0xc0100b70,%eax$/;"	l
c010074a	kernel.asm	/^c010074a:	66 a3 20 60 12 c0    	mov    %ax,0xc0126020$/;"	l
c0100750	kernel.asm	/^c0100750:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100753	kernel.asm	/^c0100753:	66 a3 26 60 12 c0    	mov    %ax,0xc0126026$/;"	l
c0100759	kernel.asm	/^c0100759:	b8 76 0b 10 c0       	mov    $0xc0100b76,%eax$/;"	l
c010075e	kernel.asm	/^c010075e:	66 a3 28 60 12 c0    	mov    %ax,0xc0126028$/;"	l
c0100764	kernel.asm	/^c0100764:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100767	kernel.asm	/^c0100767:	66 a3 2e 60 12 c0    	mov    %ax,0xc012602e$/;"	l
c010076d	kernel.asm	/^c010076d:	b8 7c 0b 10 c0       	mov    $0xc0100b7c,%eax$/;"	l
c0100772	kernel.asm	/^c0100772:	66 a3 30 60 12 c0    	mov    %ax,0xc0126030$/;"	l
c0100778	kernel.asm	/^c0100778:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010077b	kernel.asm	/^c010077b:	66 c7 05 02 60 12 c0 	movw   $0x8,0xc0126002$/;"	l
c0100782	kernel.asm	/^c0100782:	08 00 $/;"	l
c0100784	kernel.asm	/^c0100784:	c6 05 04 60 12 c0 00 	movb   $0x0,0xc0126004$/;"	l
c010078b	kernel.asm	/^c010078b:	c6 05 05 60 12 c0 8f 	movb   $0x8f,0xc0126005$/;"	l
c0100792	kernel.asm	/^c0100792:	66 c7 05 0a 60 12 c0 	movw   $0x8,0xc012600a$/;"	l
c0100799	kernel.asm	/^c0100799:	08 00 $/;"	l
c010079b	kernel.asm	/^c010079b:	c6 05 0c 60 12 c0 00 	movb   $0x0,0xc012600c$/;"	l
c01007a2	kernel.asm	/^c01007a2:	c6 05 0d 60 12 c0 8f 	movb   $0x8f,0xc012600d$/;"	l
c01007a9	kernel.asm	/^c01007a9:	66 c7 05 12 60 12 c0 	movw   $0x8,0xc0126012$/;"	l
c01007b0	kernel.asm	/^c01007b0:	08 00 $/;"	l
c01007b2	kernel.asm	/^c01007b2:	c6 05 14 60 12 c0 00 	movb   $0x0,0xc0126014$/;"	l
c01007b9	kernel.asm	/^c01007b9:	c6 05 15 60 12 c0 8f 	movb   $0x8f,0xc0126015$/;"	l
c01007c0	kernel.asm	/^c01007c0:	66 c7 05 1a 60 12 c0 	movw   $0x8,0xc012601a$/;"	l
c01007c7	kernel.asm	/^c01007c7:	08 00 $/;"	l
c01007c9	kernel.asm	/^c01007c9:	c6 05 1c 60 12 c0 00 	movb   $0x0,0xc012601c$/;"	l
c01007d0	kernel.asm	/^c01007d0:	c6 05 1d 60 12 c0 8f 	movb   $0x8f,0xc012601d$/;"	l
c01007d7	kernel.asm	/^c01007d7:	66 c7 05 22 60 12 c0 	movw   $0x8,0xc0126022$/;"	l
c01007de	kernel.asm	/^c01007de:	08 00 $/;"	l
c01007e0	kernel.asm	/^c01007e0:	c6 05 24 60 12 c0 00 	movb   $0x0,0xc0126024$/;"	l
c01007e7	kernel.asm	/^c01007e7:	c6 05 25 60 12 c0 8f 	movb   $0x8f,0xc0126025$/;"	l
c01007ee	kernel.asm	/^c01007ee:	66 c7 05 2a 60 12 c0 	movw   $0x8,0xc012602a$/;"	l
c01007f5	kernel.asm	/^c01007f5:	08 00 $/;"	l
c01007f7	kernel.asm	/^c01007f7:	c6 05 2c 60 12 c0 00 	movb   $0x0,0xc012602c$/;"	l
c01007fe	kernel.asm	/^c01007fe:	c6 05 2d 60 12 c0 8f 	movb   $0x8f,0xc012602d$/;"	l
c0100805	kernel.asm	/^c0100805:	66 c7 05 32 60 12 c0 	movw   $0x8,0xc0126032$/;"	l
c010080c	kernel.asm	/^c010080c:	08 00 $/;"	l
c010080e	kernel.asm	/^c010080e:	c6 05 34 60 12 c0 00 	movb   $0x0,0xc0126034$/;"	l
c0100815	kernel.asm	/^c0100815:	c6 05 35 60 12 c0 8f 	movb   $0x8f,0xc0126035$/;"	l
c010081c	kernel.asm	/^c010081c:	66 a3 36 60 12 c0    	mov    %ax,0xc0126036$/;"	l
c0100822	kernel.asm	/^c0100822:	b8 82 0b 10 c0       	mov    $0xc0100b82,%eax$/;"	l
c0100827	kernel.asm	/^c0100827:	66 a3 38 60 12 c0    	mov    %ax,0xc0126038$/;"	l
c010082d	kernel.asm	/^c010082d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100830	kernel.asm	/^c0100830:	66 a3 3e 60 12 c0    	mov    %ax,0xc012603e$/;"	l
c0100836	kernel.asm	/^c0100836:	b8 88 0b 10 c0       	mov    $0xc0100b88,%eax$/;"	l
c010083b	kernel.asm	/^c010083b:	66 a3 40 60 12 c0    	mov    %ax,0xc0126040$/;"	l
c0100841	kernel.asm	/^c0100841:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100844	kernel.asm	/^c0100844:	66 a3 46 60 12 c0    	mov    %ax,0xc0126046$/;"	l
c010084a	kernel.asm	/^c010084a:	b8 8c 0b 10 c0       	mov    $0xc0100b8c,%eax$/;"	l
c010084f	kernel.asm	/^c010084f:	66 a3 48 60 12 c0    	mov    %ax,0xc0126048$/;"	l
c0100855	kernel.asm	/^c0100855:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100858	kernel.asm	/^c0100858:	66 a3 4e 60 12 c0    	mov    %ax,0xc012604e$/;"	l
c010085e	kernel.asm	/^c010085e:	b8 92 0b 10 c0       	mov    $0xc0100b92,%eax$/;"	l
c0100863	kernel.asm	/^c0100863:	66 a3 50 60 12 c0    	mov    %ax,0xc0126050$/;"	l
c0100869	kernel.asm	/^c0100869:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010086c	kernel.asm	/^c010086c:	66 a3 56 60 12 c0    	mov    %ax,0xc0126056$/;"	l
c0100872	kernel.asm	/^c0100872:	b8 96 0b 10 c0       	mov    $0xc0100b96,%eax$/;"	l
c0100877	kernel.asm	/^c0100877:	66 a3 58 60 12 c0    	mov    %ax,0xc0126058$/;"	l
c010087d	kernel.asm	/^c010087d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100880	kernel.asm	/^c0100880:	66 a3 5e 60 12 c0    	mov    %ax,0xc012605e$/;"	l
c0100886	kernel.asm	/^c0100886:	b8 9a 0b 10 c0       	mov    $0xc0100b9a,%eax$/;"	l
c010088b	kernel.asm	/^c010088b:	66 a3 60 60 12 c0    	mov    %ax,0xc0126060$/;"	l
c0100891	kernel.asm	/^c0100891:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100894	kernel.asm	/^c0100894:	66 a3 66 60 12 c0    	mov    %ax,0xc0126066$/;"	l
c010089a	kernel.asm	/^c010089a:	b8 9e 0b 10 c0       	mov    $0xc0100b9e,%eax$/;"	l
c010089f	kernel.asm	/^c010089f:	66 a3 68 60 12 c0    	mov    %ax,0xc0126068$/;"	l
c01008a5	kernel.asm	/^c01008a5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01008a8	kernel.asm	/^c01008a8:	66 c7 05 3a 60 12 c0 	movw   $0x8,0xc012603a$/;"	l
c01008af	kernel.asm	/^c01008af:	08 00 $/;"	l
c01008b1	kernel.asm	/^c01008b1:	c6 05 3c 60 12 c0 00 	movb   $0x0,0xc012603c$/;"	l
c01008b8	kernel.asm	/^c01008b8:	c6 05 3d 60 12 c0 8f 	movb   $0x8f,0xc012603d$/;"	l
c01008bf	kernel.asm	/^c01008bf:	66 c7 05 42 60 12 c0 	movw   $0x8,0xc0126042$/;"	l
c01008c6	kernel.asm	/^c01008c6:	08 00 $/;"	l
c01008c8	kernel.asm	/^c01008c8:	c6 05 44 60 12 c0 00 	movb   $0x0,0xc0126044$/;"	l
c01008cf	kernel.asm	/^c01008cf:	c6 05 45 60 12 c0 8f 	movb   $0x8f,0xc0126045$/;"	l
c01008d6	kernel.asm	/^c01008d6:	66 c7 05 4a 60 12 c0 	movw   $0x8,0xc012604a$/;"	l
c01008dd	kernel.asm	/^c01008dd:	08 00 $/;"	l
c01008df	kernel.asm	/^c01008df:	c6 05 4c 60 12 c0 00 	movb   $0x0,0xc012604c$/;"	l
c01008e6	kernel.asm	/^c01008e6:	c6 05 4d 60 12 c0 8f 	movb   $0x8f,0xc012604d$/;"	l
c01008ed	kernel.asm	/^c01008ed:	66 c7 05 52 60 12 c0 	movw   $0x8,0xc0126052$/;"	l
c01008f4	kernel.asm	/^c01008f4:	08 00 $/;"	l
c01008f6	kernel.asm	/^c01008f6:	c6 05 54 60 12 c0 00 	movb   $0x0,0xc0126054$/;"	l
c01008fd	kernel.asm	/^c01008fd:	c6 05 55 60 12 c0 8f 	movb   $0x8f,0xc0126055$/;"	l
c0100904	kernel.asm	/^c0100904:	66 c7 05 5a 60 12 c0 	movw   $0x8,0xc012605a$/;"	l
c010090b	kernel.asm	/^c010090b:	08 00 $/;"	l
c010090d	kernel.asm	/^c010090d:	c6 05 5c 60 12 c0 00 	movb   $0x0,0xc012605c$/;"	l
c0100914	kernel.asm	/^c0100914:	c6 05 5d 60 12 c0 8f 	movb   $0x8f,0xc012605d$/;"	l
c010091b	kernel.asm	/^c010091b:	66 c7 05 62 60 12 c0 	movw   $0x8,0xc0126062$/;"	l
c0100922	kernel.asm	/^c0100922:	08 00 $/;"	l
c0100924	kernel.asm	/^c0100924:	c6 05 64 60 12 c0 00 	movb   $0x0,0xc0126064$/;"	l
c010092b	kernel.asm	/^c010092b:	c6 05 65 60 12 c0 8f 	movb   $0x8f,0xc0126065$/;"	l
c0100932	kernel.asm	/^c0100932:	66 c7 05 6a 60 12 c0 	movw   $0x8,0xc012606a$/;"	l
c0100939	kernel.asm	/^c0100939:	08 00 $/;"	l
c010093b	kernel.asm	/^c010093b:	c6 05 6c 60 12 c0 00 	movb   $0x0,0xc012606c$/;"	l
c0100942	kernel.asm	/^c0100942:	66 a3 6e 60 12 c0    	mov    %ax,0xc012606e$/;"	l
c0100948	kernel.asm	/^c0100948:	b8 a2 0b 10 c0       	mov    $0xc0100ba2,%eax$/;"	l
c010094d	kernel.asm	/^c010094d:	66 a3 70 60 12 c0    	mov    %ax,0xc0126070$/;"	l
c0100953	kernel.asm	/^c0100953:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100956	kernel.asm	/^c0100956:	66 a3 76 60 12 c0    	mov    %ax,0xc0126076$/;"	l
c010095c	kernel.asm	/^c010095c:	b8 af 0b 10 c0       	mov    $0xc0100baf,%eax$/;"	l
c0100961	kernel.asm	/^c0100961:	66 a3 00 61 12 c0    	mov    %ax,0xc0126100$/;"	l
c0100967	kernel.asm	/^c0100967:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010096a	kernel.asm	/^c010096a:	66 a3 06 61 12 c0    	mov    %ax,0xc0126106$/;"	l
c0100970	kernel.asm	/^c0100970:	b8 b8 0b 10 c0       	mov    $0xc0100bb8,%eax$/;"	l
c0100975	kernel.asm	/^c0100975:	66 a3 08 61 12 c0    	mov    %ax,0xc0126108$/;"	l
c010097b	kernel.asm	/^c010097b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010097e	kernel.asm	/^c010097e:	66 a3 0e 61 12 c0    	mov    %ax,0xc012610e$/;"	l
c0100984	kernel.asm	/^c0100984:	b8 c1 0b 10 c0       	mov    $0xc0100bc1,%eax$/;"	l
c0100989	kernel.asm	/^c0100989:	66 a3 70 61 12 c0    	mov    %ax,0xc0126170$/;"	l
c010098f	kernel.asm	/^c010098f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0100992	kernel.asm	/^c0100992:	66 a3 76 61 12 c0    	mov    %ax,0xc0126176$/;"	l
c0100998	kernel.asm	/^c0100998:	b8 a6 0b 10 c0       	mov    $0xc0100ba6,%eax$/;"	l
c010099d	kernel.asm	/^c010099d:	66 c7 05 7c 30 10 c0 	movw   $0x7ff,0xc010307c$/;"	l
c01009a4	kernel.asm	/^c01009a4:	ff 07 $/;"	l
c01009a6	kernel.asm	/^c01009a6:	66 a3 00 64 12 c0    	mov    %ax,0xc0126400$/;"	l
c01009ac	kernel.asm	/^c01009ac:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01009af	kernel.asm	/^c01009af:	66 89 0d 7e 30 10 c0 	mov    %cx,0xc010307e$/;"	l
c01009b6	kernel.asm	/^c01009b6:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
c01009b9	kernel.asm	/^c01009b9:	66 a3 06 64 12 c0    	mov    %ax,0xc0126406$/;"	l
c01009bf	kernel.asm	/^c01009bf:	b8 7c 30 10 c0       	mov    $0xc010307c,%eax$/;"	l
c01009c4	kernel.asm	/^c01009c4:	66 89 0d 80 30 10 c0 	mov    %cx,0xc0103080$/;"	l
c01009cb	kernel.asm	/^c01009cb:	c6 05 6d 60 12 c0 8f 	movb   $0x8f,0xc012606d$/;"	l
c01009d2	kernel.asm	/^c01009d2:	0f 01 18             	lidtl  (%eax)$/;"	l
c01009d5	kernel.asm	/^c01009d5:	66 c7 05 72 60 12 c0 	movw   $0x8,0xc0126072$/;"	l
c01009dc	kernel.asm	/^c01009dc:	08 00 $/;"	l
c01009de	kernel.asm	/^c01009de:	5b                   	pop    %ebx$/;"	l
c01009df	kernel.asm	/^c01009df:	c6 05 74 60 12 c0 00 	movb   $0x0,0xc0126074$/;"	l
c01009e6	kernel.asm	/^c01009e6:	5e                   	pop    %esi$/;"	l
c01009e7	kernel.asm	/^c01009e7:	c6 05 75 60 12 c0 8f 	movb   $0x8f,0xc0126075$/;"	l
c01009ee	kernel.asm	/^c01009ee:	66 c7 05 02 61 12 c0 	movw   $0x8,0xc0126102$/;"	l
c01009f5	kernel.asm	/^c01009f5:	08 00 $/;"	l
c01009f7	kernel.asm	/^c01009f7:	c6 05 04 61 12 c0 00 	movb   $0x0,0xc0126104$/;"	l
c01009fe	kernel.asm	/^c01009fe:	c6 05 05 61 12 c0 8e 	movb   $0x8e,0xc0126105$/;"	l
c0100a05	kernel.asm	/^c0100a05:	66 c7 05 0a 61 12 c0 	movw   $0x8,0xc012610a$/;"	l
c0100a0c	kernel.asm	/^c0100a0c:	08 00 $/;"	l
c0100a0e	kernel.asm	/^c0100a0e:	c6 05 0c 61 12 c0 00 	movb   $0x0,0xc012610c$/;"	l
c0100a15	kernel.asm	/^c0100a15:	c6 05 0d 61 12 c0 8e 	movb   $0x8e,0xc012610d$/;"	l
c0100a1c	kernel.asm	/^c0100a1c:	66 c7 05 72 61 12 c0 	movw   $0x8,0xc0126172$/;"	l
c0100a23	kernel.asm	/^c0100a23:	08 00 $/;"	l
c0100a25	kernel.asm	/^c0100a25:	c6 05 74 61 12 c0 00 	movb   $0x0,0xc0126174$/;"	l
c0100a2c	kernel.asm	/^c0100a2c:	c6 05 75 61 12 c0 8e 	movb   $0x8e,0xc0126175$/;"	l
c0100a33	kernel.asm	/^c0100a33:	66 c7 05 02 64 12 c0 	movw   $0x8,0xc0126402$/;"	l
c0100a3a	kernel.asm	/^c0100a3a:	08 00 $/;"	l
c0100a3c	kernel.asm	/^c0100a3c:	c6 05 04 64 12 c0 00 	movb   $0x0,0xc0126404$/;"	l
c0100a43	kernel.asm	/^c0100a43:	c6 05 05 64 12 c0 ef 	movb   $0xef,0xc0126405$/;"	l
c0100a4a	kernel.asm	/^c0100a4a:	5d                   	pop    %ebp$/;"	l
c0100a4b	kernel.asm	/^c0100a4b:	c3                   	ret    $/;"	l
c0100a4c	kernel.asm	/^c0100a4c:	90                   	nop$/;"	l
c0100a4d	kernel.asm	/^c0100a4d:	90                   	nop$/;"	l
c0100a4e	kernel.asm	/^c0100a4e:	90                   	nop$/;"	l
c0100a4f	kernel.asm	/^c0100a4f:	90                   	nop$/;"	l
c0100a50	kernel.asm	/^c0100a50 <irq_handle>:$/;"	l
c0100a50	kernel.asm	/^c0100a50:	55                   	push   %ebp$/;"	l
c0100a51	kernel.asm	/^c0100a51:	89 e5                	mov    %esp,%ebp$/;"	l
c0100a53	kernel.asm	/^c0100a53:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100a56	kernel.asm	/^c0100a56:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
c0100a59	kernel.asm	/^c0100a59:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
c0100a5c	kernel.asm	/^c0100a5c:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
c0100a5f	kernel.asm	/^c0100a5f:	8b 73 30             	mov    0x30(%ebx),%esi$/;"	l
c0100a62	kernel.asm	/^c0100a62:	85 f6                	test   %esi,%esi$/;"	l
c0100a64	kernel.asm	/^c0100a64:	78 12                	js     c0100a78 <irq_handle+0x28>$/;"	l
c0100a66	kernel.asm	/^c0100a66:	81 fe e7 03 00 00    	cmp    $0x3e7,%esi$/;"	l
c0100a6c	kernel.asm	/^c0100a6c:	7e 1e                	jle    c0100a8c <irq_handle+0x3c>$/;"	l
c0100a6e	kernel.asm	/^c0100a6e:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
c0100a71	kernel.asm	/^c0100a71:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
c0100a74	kernel.asm	/^c0100a74:	89 ec                	mov    %ebp,%esp$/;"	l
c0100a76	kernel.asm	/^c0100a76:	5d                   	pop    %ebp$/;"	l
c0100a77	kernel.asm	/^c0100a77:	c3                   	ret    $/;"	l
c0100a78	kernel.asm	/^c0100a78:	c7 44 24 04 06 00 00 	movl   $0x6,0x4(%esp)$/;"	l
c0100a7f	kernel.asm	/^c0100a7f:	00 $/;"	l
c0100a80	kernel.asm	/^c0100a80:	c7 04 24 b1 0c 10 c0 	movl   $0xc0100cb1,(%esp)$/;"	l
c0100a87	kernel.asm	/^c0100a87:	e8 24 f7 ff ff       	call   c01001b0 <abort>$/;"	l
c0100a8c	kernel.asm	/^c0100a8c:	fa                   	cli    $/;"	l
c0100a8d	kernel.asm	/^c0100a8d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
c0100a91	kernel.asm	/^c0100a91:	c7 04 24 cd 0c 10 c0 	movl   $0xc0100ccd,(%esp)$/;"	l
c0100a98	kernel.asm	/^c0100a98:	e8 c3 f9 ff ff       	call   c0100460 <printk>$/;"	l
c0100a9d	kernel.asm	/^c0100a9d:	8b 43 34             	mov    0x34(%ebx),%eax$/;"	l
c0100aa0	kernel.asm	/^c0100aa0:	c7 04 24 e7 0c 10 c0 	movl   $0xc0100ce7,(%esp)$/;"	l
c0100aa7	kernel.asm	/^c0100aa7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100aab	kernel.asm	/^c0100aab:	e8 b0 f9 ff ff       	call   c0100460 <printk>$/;"	l
c0100ab0	kernel.asm	/^c0100ab0:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0100ab4	kernel.asm	/^c0100ab4:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
c0100ab7	kernel.asm	/^c0100ab7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100abb	kernel.asm	/^c0100abb:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
c0100abe	kernel.asm	/^c0100abe:	c7 04 24 f6 0c 10 c0 	movl   $0xc0100cf6,(%esp)$/;"	l
c0100ac5	kernel.asm	/^c0100ac5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100ac9	kernel.asm	/^c0100ac9:	e8 92 f9 ff ff       	call   c0100460 <printk>$/;"	l
c0100ace	kernel.asm	/^c0100ace:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
c0100ad1	kernel.asm	/^c0100ad1:	c7 45 08 10 0d 10 c0 	movl   $0xc0100d10,0x8(%ebp)$/;"	l
c0100ad8	kernel.asm	/^c0100ad8:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
c0100adb	kernel.asm	/^c0100adb:	89 ec                	mov    %ebp,%esp$/;"	l
c0100add	kernel.asm	/^c0100add:	5d                   	pop    %ebp$/;"	l
c0100ade	kernel.asm	/^c0100ade:	e9 fd f6 ff ff       	jmp    c01001e0 <panic>$/;"	l
c0100ae3	kernel.asm	/^c0100ae3:	90                   	nop$/;"	l
c0100ae4	kernel.asm	/^c0100ae4:	90                   	nop$/;"	l
c0100ae5	kernel.asm	/^c0100ae5:	90                   	nop$/;"	l
c0100ae6	kernel.asm	/^c0100ae6:	90                   	nop$/;"	l
c0100ae7	kernel.asm	/^c0100ae7:	90                   	nop$/;"	l
c0100ae8	kernel.asm	/^c0100ae8:	90                   	nop$/;"	l
c0100ae9	kernel.asm	/^c0100ae9:	90                   	nop$/;"	l
c0100aea	kernel.asm	/^c0100aea:	90                   	nop$/;"	l
c0100aeb	kernel.asm	/^c0100aeb:	90                   	nop$/;"	l
c0100aec	kernel.asm	/^c0100aec:	90                   	nop$/;"	l
c0100aed	kernel.asm	/^c0100aed:	90                   	nop$/;"	l
c0100aee	kernel.asm	/^c0100aee:	90                   	nop$/;"	l
c0100aef	kernel.asm	/^c0100aef:	90                   	nop$/;"	l
c0100af0	kernel.asm	/^c0100af0 <init_i8259>:$/;"	l
c0100af0	kernel.asm	/^c0100af0:	55                   	push   %ebp$/;"	l
c0100af1	kernel.asm	/^c0100af1:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
c0100af6	kernel.asm	/^c0100af6:	89 e5                	mov    %esp,%ebp$/;"	l
c0100af8	kernel.asm	/^c0100af8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100afd	kernel.asm	/^c0100afd:	ee                   	out    %al,(%dx)$/;"	l
c0100afe	kernel.asm	/^c0100afe:	b2 a1                	mov    $0xa1,%dl$/;"	l
c0100b00	kernel.asm	/^c0100b00:	ee                   	out    %al,(%dx)$/;"	l
c0100b01	kernel.asm	/^c0100b01:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
c0100b06	kernel.asm	/^c0100b06:	b2 20                	mov    $0x20,%dl$/;"	l
c0100b08	kernel.asm	/^c0100b08:	ee                   	out    %al,(%dx)$/;"	l
c0100b09	kernel.asm	/^c0100b09:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
c0100b0e	kernel.asm	/^c0100b0e:	b2 21                	mov    $0x21,%dl$/;"	l
c0100b10	kernel.asm	/^c0100b10:	ee                   	out    %al,(%dx)$/;"	l
c0100b11	kernel.asm	/^c0100b11:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
c0100b16	kernel.asm	/^c0100b16:	ee                   	out    %al,(%dx)$/;"	l
c0100b17	kernel.asm	/^c0100b17:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
c0100b1c	kernel.asm	/^c0100b1c:	ee                   	out    %al,(%dx)$/;"	l
c0100b1d	kernel.asm	/^c0100b1d:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
c0100b22	kernel.asm	/^c0100b22:	b2 a0                	mov    $0xa0,%dl$/;"	l
c0100b24	kernel.asm	/^c0100b24:	ee                   	out    %al,(%dx)$/;"	l
c0100b25	kernel.asm	/^c0100b25:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
c0100b2a	kernel.asm	/^c0100b2a:	b2 a1                	mov    $0xa1,%dl$/;"	l
c0100b2c	kernel.asm	/^c0100b2c:	ee                   	out    %al,(%dx)$/;"	l
c0100b2d	kernel.asm	/^c0100b2d:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
c0100b32	kernel.asm	/^c0100b32:	ee                   	out    %al,(%dx)$/;"	l
c0100b33	kernel.asm	/^c0100b33:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
c0100b38	kernel.asm	/^c0100b38:	ee                   	out    %al,(%dx)$/;"	l
c0100b39	kernel.asm	/^c0100b39:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
c0100b3e	kernel.asm	/^c0100b3e:	b2 20                	mov    $0x20,%dl$/;"	l
c0100b40	kernel.asm	/^c0100b40:	ee                   	out    %al,(%dx)$/;"	l
c0100b41	kernel.asm	/^c0100b41:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
c0100b46	kernel.asm	/^c0100b46:	ee                   	out    %al,(%dx)$/;"	l
c0100b47	kernel.asm	/^c0100b47:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
c0100b4c	kernel.asm	/^c0100b4c:	b2 a0                	mov    $0xa0,%dl$/;"	l
c0100b4e	kernel.asm	/^c0100b4e:	ee                   	out    %al,(%dx)$/;"	l
c0100b4f	kernel.asm	/^c0100b4f:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
c0100b54	kernel.asm	/^c0100b54:	ee                   	out    %al,(%dx)$/;"	l
c0100b55	kernel.asm	/^c0100b55:	5d                   	pop    %ebp$/;"	l
c0100b56	kernel.asm	/^c0100b56:	c3                   	ret    $/;"	l
c0100b57	kernel.asm	/^c0100b57:	90                   	nop$/;"	l
c0100b58	kernel.asm	/^c0100b58 <vec0>:$/;"	l
c0100b58	kernel.asm	/^c0100b58:	6a 00                	push   $0x0$/;"	l
c0100b5a	kernel.asm	/^c0100b5a:	6a 00                	push   $0x0$/;"	l
c0100b5c	kernel.asm	/^c0100b5c:	eb 72                	jmp    c0100bd0 <trap>$/;"	l
c0100b5e	kernel.asm	/^c0100b5e <vec1>:$/;"	l
c0100b5e	kernel.asm	/^c0100b5e:	6a 00                	push   $0x0$/;"	l
c0100b60	kernel.asm	/^c0100b60:	6a 01                	push   $0x1$/;"	l
c0100b62	kernel.asm	/^c0100b62:	eb 6c                	jmp    c0100bd0 <trap>$/;"	l
c0100b64	kernel.asm	/^c0100b64 <vec2>:$/;"	l
c0100b64	kernel.asm	/^c0100b64:	6a 00                	push   $0x0$/;"	l
c0100b66	kernel.asm	/^c0100b66:	6a 02                	push   $0x2$/;"	l
c0100b68	kernel.asm	/^c0100b68:	eb 66                	jmp    c0100bd0 <trap>$/;"	l
c0100b6a	kernel.asm	/^c0100b6a <vec3>:$/;"	l
c0100b6a	kernel.asm	/^c0100b6a:	6a 00                	push   $0x0$/;"	l
c0100b6c	kernel.asm	/^c0100b6c:	6a 03                	push   $0x3$/;"	l
c0100b6e	kernel.asm	/^c0100b6e:	eb 60                	jmp    c0100bd0 <trap>$/;"	l
c0100b70	kernel.asm	/^c0100b70 <vec4>:$/;"	l
c0100b70	kernel.asm	/^c0100b70:	6a 00                	push   $0x0$/;"	l
c0100b72	kernel.asm	/^c0100b72:	6a 04                	push   $0x4$/;"	l
c0100b74	kernel.asm	/^c0100b74:	eb 5a                	jmp    c0100bd0 <trap>$/;"	l
c0100b76	kernel.asm	/^c0100b76 <vec5>:$/;"	l
c0100b76	kernel.asm	/^c0100b76:	6a 00                	push   $0x0$/;"	l
c0100b78	kernel.asm	/^c0100b78:	6a 05                	push   $0x5$/;"	l
c0100b7a	kernel.asm	/^c0100b7a:	eb 54                	jmp    c0100bd0 <trap>$/;"	l
c0100b7c	kernel.asm	/^c0100b7c <vec6>:$/;"	l
c0100b7c	kernel.asm	/^c0100b7c:	6a 00                	push   $0x0$/;"	l
c0100b7e	kernel.asm	/^c0100b7e:	6a 06                	push   $0x6$/;"	l
c0100b80	kernel.asm	/^c0100b80:	eb 4e                	jmp    c0100bd0 <trap>$/;"	l
c0100b82	kernel.asm	/^c0100b82 <vec7>:$/;"	l
c0100b82	kernel.asm	/^c0100b82:	6a 00                	push   $0x0$/;"	l
c0100b84	kernel.asm	/^c0100b84:	6a 07                	push   $0x7$/;"	l
c0100b86	kernel.asm	/^c0100b86:	eb 48                	jmp    c0100bd0 <trap>$/;"	l
c0100b88	kernel.asm	/^c0100b88 <vec8>:$/;"	l
c0100b88	kernel.asm	/^c0100b88:	6a 08                	push   $0x8$/;"	l
c0100b8a	kernel.asm	/^c0100b8a:	eb 44                	jmp    c0100bd0 <trap>$/;"	l
c0100b8c	kernel.asm	/^c0100b8c <vec9>:$/;"	l
c0100b8c	kernel.asm	/^c0100b8c:	6a 00                	push   $0x0$/;"	l
c0100b8e	kernel.asm	/^c0100b8e:	6a 09                	push   $0x9$/;"	l
c0100b90	kernel.asm	/^c0100b90:	eb 3e                	jmp    c0100bd0 <trap>$/;"	l
c0100b92	kernel.asm	/^c0100b92 <vec10>:$/;"	l
c0100b92	kernel.asm	/^c0100b92:	6a 0a                	push   $0xa$/;"	l
c0100b94	kernel.asm	/^c0100b94:	eb 3a                	jmp    c0100bd0 <trap>$/;"	l
c0100b96	kernel.asm	/^c0100b96 <vec11>:$/;"	l
c0100b96	kernel.asm	/^c0100b96:	6a 0b                	push   $0xb$/;"	l
c0100b98	kernel.asm	/^c0100b98:	eb 36                	jmp    c0100bd0 <trap>$/;"	l
c0100b9a	kernel.asm	/^c0100b9a <vec12>:$/;"	l
c0100b9a	kernel.asm	/^c0100b9a:	6a 0c                	push   $0xc$/;"	l
c0100b9c	kernel.asm	/^c0100b9c:	eb 32                	jmp    c0100bd0 <trap>$/;"	l
c0100b9e	kernel.asm	/^c0100b9e <vec13>:$/;"	l
c0100b9e	kernel.asm	/^c0100b9e:	6a 0d                	push   $0xd$/;"	l
c0100ba0	kernel.asm	/^c0100ba0:	eb 2e                	jmp    c0100bd0 <trap>$/;"	l
c0100ba2	kernel.asm	/^c0100ba2 <vec14>:$/;"	l
c0100ba2	kernel.asm	/^c0100ba2:	6a 0e                	push   $0xe$/;"	l
c0100ba4	kernel.asm	/^c0100ba4:	eb 2a                	jmp    c0100bd0 <trap>$/;"	l
c0100ba6	kernel.asm	/^c0100ba6 <vecsys>:$/;"	l
c0100ba6	kernel.asm	/^c0100ba6:	6a 00                	push   $0x0$/;"	l
c0100ba8	kernel.asm	/^c0100ba8:	68 80 00 00 00       	push   $0x80$/;"	l
c0100bad	kernel.asm	/^c0100bad:	eb 21                	jmp    c0100bd0 <trap>$/;"	l
c0100baf	kernel.asm	/^c0100baf <irq0>:$/;"	l
c0100baf	kernel.asm	/^c0100baf:	6a 00                	push   $0x0$/;"	l
c0100bb1	kernel.asm	/^c0100bb1:	68 e8 03 00 00       	push   $0x3e8$/;"	l
c0100bb6	kernel.asm	/^c0100bb6:	eb 18                	jmp    c0100bd0 <trap>$/;"	l
c0100bb8	kernel.asm	/^c0100bb8 <irq1>:$/;"	l
c0100bb8	kernel.asm	/^c0100bb8:	6a 00                	push   $0x0$/;"	l
c0100bba	kernel.asm	/^c0100bba:	68 e9 03 00 00       	push   $0x3e9$/;"	l
c0100bbf	kernel.asm	/^c0100bbf:	eb 0f                	jmp    c0100bd0 <trap>$/;"	l
c0100bc1	kernel.asm	/^c0100bc1 <irq14>:$/;"	l
c0100bc1	kernel.asm	/^c0100bc1:	6a 00                	push   $0x0$/;"	l
c0100bc3	kernel.asm	/^c0100bc3:	68 f6 03 00 00       	push   $0x3f6$/;"	l
c0100bc8	kernel.asm	/^c0100bc8:	eb 06                	jmp    c0100bd0 <trap>$/;"	l
c0100bca	kernel.asm	/^c0100bca <irqall>:$/;"	l
c0100bca	kernel.asm	/^c0100bca:	6a 00                	push   $0x0$/;"	l
c0100bcc	kernel.asm	/^c0100bcc:	6a ff                	push   $0xffffffff$/;"	l
c0100bce	kernel.asm	/^c0100bce:	eb 00                	jmp    c0100bd0 <trap>$/;"	l
c0100bd0	kernel.asm	/^c0100bd0 <trap>:$/;"	l
c0100bd0	kernel.asm	/^c0100bd0:	fa                   	cli    $/;"	l
c0100bd1	kernel.asm	/^c0100bd1:	1e                   	push   %ds$/;"	l
c0100bd2	kernel.asm	/^c0100bd2:	06                   	push   %es$/;"	l
c0100bd3	kernel.asm	/^c0100bd3:	0f a0                	push   %fs$/;"	l
c0100bd5	kernel.asm	/^c0100bd5:	0f a8                	push   %gs$/;"	l
c0100bd7	kernel.asm	/^c0100bd7:	60                   	pusha  $/;"	l
c0100bd8	kernel.asm	/^c0100bd8:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
c0100bdc	kernel.asm	/^c0100bdc:	8e d8                	mov    %eax,%ds$/;"	l
c0100bde	kernel.asm	/^c0100bde:	8e c0                	mov    %eax,%es$/;"	l
c0100be0	kernel.asm	/^c0100be0:	54                   	push   %esp$/;"	l
c0100be1	kernel.asm	/^c0100be1:	e8 6a fe ff ff       	call   c0100a50 <irq_handle>$/;"	l
c0100be6	kernel.asm	/^c0100be6:	83 c4 04             	add    $0x4,%esp$/;"	l
c0100be9	kernel.asm	/^c0100be9:	61                   	popa   $/;"	l
c0100bea	kernel.asm	/^c0100bea:	0f a9                	pop    %gs$/;"	l
c0100bec	kernel.asm	/^c0100bec:	0f a1                	pop    %fs$/;"	l
c0100bee	kernel.asm	/^c0100bee:	07                   	pop    %es$/;"	l
c0100bef	kernel.asm	/^c0100bef:	1f                   	pop    %ds$/;"	l
c0100bf0	kernel.asm	/^c0100bf0:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100bf3	kernel.asm	/^c0100bf3:	cf                   	iret   $/;"	l
char	kernel.asm	/^char *$/;"	l
cli	include/x86.h	/^cli(void) {$/;"	f
create_kthread	src/process/thread.c	/^create_kthread(void *entry){$/;"	f
cs	include/x86.h	/^	uint32_t cs : 16;         \/\/ Code segment selector$/;"	m	struct:GateDesc
cs	include/x86.h	/^	uint32_t err, eip, cs, eflags; \/\/ Execution state before trap $/;"	m	struct:TrapFrame
current_pcb	src/process/schedule.c	/^PCB *current_pcb = NULL;$/;"	v
db	include/x86.h	/^	uint32_t db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:SegDesc
default	kernel.asm	/^            default: assert(FALSE);break;\/\/wrong input$/;"	l
dontcare	include/x86.h	/^	char dontcare[88];$/;"	m	struct:TSS
dpl	include/x86.h	/^	uint32_t dpl : 2;         \/\/ Descriptor(meaning new) privilege level$/;"	m	struct:GateDesc
dpl	include/x86.h	/^	uint32_t dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:SegDesc
ds	include/x86.h	/^	uint32_t gs, fs, es, ds;       \/\/ Segment register$/;"	m	struct:TrapFrame
dst	kernel.asm	/^		dst = (char *)dst + 1;$/;"	d
eax	include/x86.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame
ebp	include/x86.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame
ebx	include/x86.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame
ecx	include/x86.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame
edi	include/x86.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame
edx	include/x86.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame
eflags	include/x86.h	/^	uint32_t err, eip, cs, eflags; \/\/ Execution state before trap $/;"	m	struct:TrapFrame
ehsize	boot/boot.h	/^	unsigned short ehsize;$/;"	m	struct:ELFHeader
eip	include/x86.h	/^	uint32_t err, eip, cs, eflags; \/\/ Execution state before trap $/;"	m	struct:TrapFrame
elf	boot/boot.h	/^	unsigned char  elf[12];$/;"	m	struct:ELFHeader
entry	boot/boot.h	/^	unsigned int   entry;$/;"	m	struct:ELFHeader
entry	src/kernel/main.c	/^entry(void) {$/;"	f
err	include/x86.h	/^	uint32_t err, eip, cs, eflags; \/\/ Execution state before trap $/;"	m	struct:TrapFrame
es	include/x86.h	/^	uint32_t gs, fs, es, ds;       \/\/ Segment register$/;"	m	struct:TrapFrame
esi	include/x86.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame
esp	include/x86.h	/^	uint32_t esp, ss;              \/\/ Used only when returning to DPL=3$/;"	m	struct:TrapFrame
esp0	include/x86.h	/^	uint32_t esp0;         \/\/ Ring 0 Stack pointer and segment selector$/;"	m	struct:TSS
esp_	include/x86.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame
filesz	boot/boot.h	/^	unsigned int filesz;$/;"	m	struct:ProgramHeader
flags	boot/boot.h	/^	unsigned int   flags;$/;"	m	struct:ELFHeader
flags	boot/boot.h	/^	unsigned int flags;$/;"	m	struct:ProgramHeader
free	src/lib/malloc.c	/^free(void * fp){$/;"	f
fs	include/x86.h	/^	uint32_t gs, fs, es, ds;       \/\/ Segment register$/;"	m	struct:TrapFrame
g	include/x86.h	/^	uint32_t g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:SegDesc
gdt	boot/start.S	/^gdt:$/;"	l
gdt	src/kernel/vm/kvm.c	/^SegDesc gdt[NR_SEG];                   \/\/ the new GDT$/;"	v
gdtdesc	boot/start.S	/^gdtdesc:                           # GDT描述符$/;"	l
get_bucket	src/lib/malloc.c	/^get_bucket(uint32_t x){$/;"	f
get_cr0	include/x86.h	/^get_cr0(void) {$/;"	f
gs	include/x86.h	/^	uint32_t gs, fs, es, ds;       \/\/ Segment register$/;"	m	struct:TrapFrame
idt	src/kernel/irq/idt.c	/^struct GateDesc idt[NR_IRQ];$/;"	v	typeref:struct:GateDesc
in_byte	boot/boot.h	/^in_byte(short port) {$/;"	f
in_byte	include/x86.h	/^in_byte(uint16_t port) {$/;"	f
in_long	boot/boot.h	/^in_long(short port) {$/;"	f
in_long	include/x86.h	/^in_long(uint16_t port) {$/;"	f
init_debug	src/lib/debug.c	/^init_debug(void) {$/;"	f
init_i8259	src/kernel/irq/i8259.c	/^void init_i8259(void) {$/;"	f
init_idt	src/kernel/irq/idt.c	/^init_idt(void) {$/;"	f
init_kvm	src/kernel/vm/kvm.c	/^init_kvm(void) { \/\/ setup kernel memory mapping$/;"	f
init_seg	src/kernel/vm/kvm.c	/^init_seg() { \/\/ setup kernel segements$/;"	f
int	kernel.asm	/^int vfprintf(void (*)(char), const char *, void **);$/;"	l
int	kernel.asm	/^int$/;"	l
int16_t	include/types.h	/^typedef          short int16_t;$/;"	t
int32_t	include/types.h	/^typedef          int   int32_t;$/;"	t
int8_t	include/types.h	/^typedef          char  int8_t;$/;"	t
irq	include/x86.h	/^	int      irq;                  \/\/ # of irq$/;"	m	struct:TrapFrame
irq_handle	src/kernel/irq/irq_handle.c	/^void irq_handle(TrapFrame *tf) {$/;"	f
itoa	src/lib/string.c	/^itoa(int value, int base) {$/;"	f
itoa_buf	src/lib/string.c	/^itoa_buf(int value, char *buf, int base) {$/;"	f
kernel	kernel.asm	/^kernel:     file format elf32-i386$/;"	l
kstack	include/process.h	/^    uint8_t kstack[KSTACK_SIZE];$/;"	m	struct:PCB
lim_15_0	include/x86.h	/^	uint32_t lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:SegDesc
lim_19_16	include/x86.h	/^	uint32_t lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:SegDesc
link	include/x86.h	/^	uint32_t link;         \/\/ Unused$/;"	m	struct:TSS
list_add	include/adt/list.h	/^list_add(ListHead *prev, ListHead *next, ListHead *data) {$/;"	f
list_add_after	include/adt/list.h	/^list_add_after(ListHead *list, ListHead *data) {$/;"	f
list_add_before	include/adt/list.h	/^list_add_before(ListHead *list, ListHead *data) {$/;"	f
list_del	include/adt/list.h	/^list_del(ListHead *data) {$/;"	f
list_empty	include/adt/list.h	/^list_empty(ListHead *list) {$/;"	f
list_entry	include/adt/list.h	11;"	d
list_foreach	include/adt/list.h	52;"	d
list_init	include/adt/list.h	/^list_init(ListHead *list) {$/;"	f
machine	boot/boot.h	/^	unsigned short machine;$/;"	m	struct:ELFHeader
magic	boot/boot.h	/^	unsigned int   magic;$/;"	m	struct:ELFHeader
malloc	src/lib/malloc.c	/^malloc(uint32_t nbyte){$/;"	f
memcpy	src/lib/string.c	/^memcpy(void *dst, const void *src, size_t count) {$/;"	f
memset	src/lib/string.c	/^memset(void *dst, int val, size_t count) {$/;"	f
memsz	boot/boot.h	/^	unsigned int memsz;$/;"	m	struct:ProgramHeader
min_page	src/lib/malloc.c	24;"	d	file:
negative	kernel.asm	/^		negative = TRUE;$/;"	d
next	include/adt/list.h	/^	struct ListHead *prev, *next;$/;"	m	struct:ListHead	typeref:struct:ListHead::
next_process	src/process/schedule.c	/^next_process(void){$/;"	f
nextf	src/lib/malloc.c	/^static overhead * nextf[MAXBUCKET];$/;"	v	file:
nmalloc	src/lib/malloc.c	/^static uint32_t nmalloc[MAXBUCKET];$/;"	v	file:
num_page	src/lib/malloc.c	22;"	d	file:
off	boot/boot.h	/^	unsigned int off;$/;"	m	struct:ProgramHeader
off_15_0	include/x86.h	/^	uint32_t off_15_0 : 16;   \/\/ Low 16 bits of offset in segment$/;"	m	struct:GateDesc
off_31_16	include/x86.h	/^	uint32_t off_31_16 : 16;  \/\/ High bits of offset in segment$/;"	m	struct:GateDesc
os_init	src/kernel/main.c	/^os_init(void) {$/;"	f
out_byte	boot/boot.h	/^out_byte(short port, char data) {$/;"	f
out_byte	include/x86.h	/^out_byte(uint16_t port, uint8_t data) {$/;"	f
out_long	include/x86.h	/^out_long(uint16_t port, uint32_t data) {$/;"	f
ov_bucket	include/malloc.h	12;"	d
ov_magic	include/malloc.h	11;"	d
ov_next	include/malloc.h	/^    union overhead * ov_next;$/;"	m	union:overhead	typeref:union:overhead::overhead
overhead	include/malloc.h	/^typedef union overhead{$/;"	u
overhead	include/malloc.h	/^}overhead;$/;"	t	typeref:union:overhead
ovu	include/malloc.h	/^    }ovu;$/;"	m	union:overhead	typeref:struct:overhead::__anon1
ovu_bucket	include/malloc.h	/^       uint32_t ovu_bucket ;$/;"	m	struct:overhead::__anon1
ovu_magic	include/malloc.h	/^       uint8_t  ovu_magic;$/;"	m	struct:overhead::__anon1
p	include/x86.h	/^	uint32_t p : 1;           \/\/ Present$/;"	m	struct:GateDesc
p	include/x86.h	/^	uint32_t p : 1;          \/\/ Present$/;"	m	struct:SegDesc
pa_to_va	include/vm.h	8;"	d
paddr	boot/boot.h	/^	unsigned int paddr;$/;"	m	struct:ProgramHeader
page_init	src/lib/malloc.c	/^page_init(void){$/;"	f
page_inited	src/lib/malloc.c	/^static boolean page_inited = FALSE;$/;"	v	file:
panic	src/lib/abort.c	/^panic(const char *str) {$/;"	f
phentsize	boot/boot.h	/^	unsigned short phentsize;$/;"	m	struct:ELFHeader
phnum	boot/boot.h	/^	unsigned short phnum;$/;"	m	struct:ELFHeader
phoff	boot/boot.h	/^	unsigned int   phoff;$/;"	m	struct:ELFHeader
pid_t	include/types.h	/^typedef int32_t  pid_t;$/;"	t
pool	src/lib/malloc.c	/^uint8_t pool[((sum_page_size << min_page) + MAXBUCKET * sizeof(overhead)) * num_page];$/;"	v
prev	include/adt/list.h	/^	struct ListHead *prev, *next;$/;"	m	struct:ListHead	typeref:struct:ListHead::ListHead
printk	src/lib/debug.c	/^printk(const char *fmt, ...) {$/;"	f
put_onechar	src/lib/vfprintf.c	12;"	d	file:
put_string	src/lib/vfprintf.c	14;"	d	file:
queue_init	src/process/schedule.c	/^queue_init(void){$/;"	f
readf	include/x86.h	/^readf(void) {$/;"	f
readsect	boot/main.c	/^readsect(void *dst, int offset) {$/;"	f
readseg	boot/main.c	/^readseg(unsigned char *pa, int count, int offset) {$/;"	f
rsv1	include/x86.h	/^	uint32_t rsv1 : 1;       \/\/ Reserved$/;"	m	struct:SegDesc
rsv1	include/x86.h	/^	uint32_t rsv1 : 3;        \/\/ Reserved(should be zero I guess)$/;"	m	struct:GateDesc
runq	src/process/schedule.c	/^ListHead runq;$/;"	v
s	include/x86.h	/^	uint32_t s : 1;           \/\/ Must be 0 (system)$/;"	m	struct:GateDesc
s	include/x86.h	/^	uint32_t s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:SegDesc
schedule	src/process/schedule.c	/^schedule(void){$/;"	f
semq	include/process.h	/^    ListHead semq;$/;"	m	struct:PCB
serial_idle	src/lib/debug.c	/^serial_idle(void) {$/;"	f	file:
serial_printc	src/lib/debug.c	/^serial_printc(char ch) {$/;"	f
set_cr0	include/x86.h	/^set_cr0(uint32_t cr0) {$/;"	f
set_cr3	include/x86.h	/^set_cr3(void *pdir) {$/;"	f
set_gdt	include/x86.h	/^set_gdt(SegDesc *gdt, uint32_t size) {$/;"	f
set_idt	include/x86.h	/^set_idt(GateDesc *idt, uint32_t size) {$/;"	f
set_tr	include/x86.h	/^set_tr(uint16_t selector) {$/;"	f
shentsize	boot/boot.h	/^	unsigned short shentsize;$/;"	m	struct:ELFHeader
shnum	boot/boot.h	/^	unsigned short shnum;$/;"	m	struct:ELFHeader
shoff	boot/boot.h	/^	unsigned int   shoff;$/;"	m	struct:ELFHeader
shstrndx	boot/boot.h	/^	unsigned short shstrndx;$/;"	m	struct:ELFHeader
size_t	include/types.h	/^typedef uint32_t size_t;$/;"	t
src	kernel.asm	/^		src = (char *)src + 1;$/;"	d
ss	include/x86.h	/^	uint32_t esp, ss;              \/\/ Used only when returning to DPL=3$/;"	m	struct:TrapFrame
ss0	include/x86.h	/^	uint32_t ss0;$/;"	m	struct:TSS
start	boot/start.S	/^start:$/;"	l
start32	boot/start.S	/^start32:$/;"	l
static	kernel.asm	/^static inline uint32_t$/;"	l
static	kernel.asm	/^static inline uint8_t$/;"	l
static	kernel.asm	/^static inline void$/;"	l
step	src/lib/malloc.c	26;"	d	file:
sti	include/x86.h	/^sti(void) {$/;"	f
sum_page_size	src/lib/malloc.c	23;"	d	file:
tf	include/process.h	/^    TrapFrame *tf;$/;"	m	struct:PCB
tolower	src/lib/string.c	/^tolower(int ch) {$/;"	f
toupper	src/lib/string.c	/^toupper(int ch) {$/;"	f
trap	src/kernel/irq/do_irq.S	/^trap:$/;"	l
tss	src/kernel/vm/kvm.c	/^TSS tss;                               \/\/ one TSS for all ring 3 processes$/;"	v
type	boot/boot.h	/^	unsigned int type;$/;"	m	struct:ProgramHeader
type	boot/boot.h	/^	unsigned short type;$/;"	m	struct:ELFHeader
type	include/x86.h	/^	uint32_t type : 4;        \/\/ Type(STS_{TG,IG32,TG32})$/;"	m	struct:GateDesc
type	include/x86.h	/^	uint32_t type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:SegDesc
typedef	kernel.asm	/^typedef struct TrapFrame TrapFrame;$/;"	t
uint16_t	include/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	include/types.h	/^typedef unsigned int   uint32_t;$/;"	t
uint8_t	include/types.h	/^typedef unsigned char  uint8_t;$/;"	t
utoa	src/lib/string.c	/^utoa(unsigned int value, int base) {$/;"	f
utoa_buf	src/lib/string.c	/^utoa_buf(unsigned int value, char *buf, int base) {$/;"	f
va_args	include/stdarg.h	7;"	d
va_to_pa	include/vm.h	7;"	d
vaddr	boot/boot.h	/^	unsigned int vaddr;$/;"	m	struct:ProgramHeader
value	kernel.asm	/^		value = -value;$/;"	d
version	boot/boot.h	/^	unsigned int   version;$/;"	m	struct:ELFHeader
vfprintf	src/lib/vfprintf.c	/^vfprintf(void (*putchar_func)(char), const char *format, void **data) {$/;"	f
void	kernel.asm	/^void *$/;"	l
void	kernel.asm	/^void init_i8259(void) {$/;"	l
void	kernel.asm	/^void irq_handle(TrapFrame *tf) {$/;"	l
void	kernel.asm	/^void$/;"	l
wait_intr	include/x86.h	/^wait_intr() {$/;"	f
waitdisk	boot/main.c	/^waitdisk(void) {$/;"	f
